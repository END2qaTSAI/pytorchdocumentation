[
    {
        "X": "What methods are used to get a new tensor with the data in inputfake quantized per channel?",
        "Y": "scale,zero_point,quant_minandquant_max",
        "Z": "fake_quantize_per_channel_affine Returns a new tensor with the data in inputfake quantized per channel usingscale,zero_point,quant_minandquant_max, across the channel specified byaxis.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "The new tensor returns a new tensor with the data in inputfake quantized per channel usingscale,zer",
        "Y": "byaxis",
        "Z": "fake_quantize_per_channel_affine Returns a new tensor with the data in inputfake quantized per channel usingscale,zero_point,quant_minandquant_max, across the channel specified byaxis.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What returns a new tensor with the data in inputfake quantized per channel usingscale,zero_point,quant",
        "Y": "fake_quantize_per_channel_affine",
        "Z": "fake_quantize_per_channel_affine Returns a new tensor with the data in inputfake quantized per channel usingscale,zero_point,quant_minandquant_max, across the channel specified byaxis.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What methods are used to fake the quantization of a tensor?",
        "Y": "scale,zero_point,quant_minandquant_max",
        "Z": "fake_quantize_per_tensor_affine Returns a new tensor with the data in inputfake quantized usingscale,zero_point,quant_minandquant_max.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What returns a new tensor with the data in inputfake quantized usingscale,zero_point,quant_min",
        "Y": "fake_quantize_per_tensor_affine",
        "Z": "fake_quantize_per_tensor_affine Returns a new tensor with the data in inputfake quantized usingscale,zero_point,quant_minandquant_max.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What is fix Alias for ?",
        "Y": "Alias for torch.trunc()",
        "Z": "fix Alias for torch.trunc()",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What does fix Alias for torch.trunc() do?",
        "Y": "fix Alias for torch.trunc()",
        "Z": "fix Alias for torch.trunc()",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "float_power Raises input to the power of exponent, element wise, in what precision?",
        "Y": "double precision",
        "Z": "float_power Raises input to the power of exponent, element wise, in double precision.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What Raises input to the power of exponent, element wise?",
        "Y": "float_power",
        "Z": "float_power Raises input to the power of exponent, element wise, in double precision.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What returns a new tensor with the floor of the elements of input?",
        "Y": "floor",
        "Z": "floor Returns a new tensor with the floor of the elements of input, the largest integer less than or equal to each element.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What is the term for a floor division?",
        "Y": "floor_divide",
        "Z": "floor_divide",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What does fmod Compute?",
        "Y": "element-wise remainder",
        "Z": "fmod Computes the element-wise remainder of division.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What computes the element-wise remainder of division?",
        "Y": "remainder",
        "Z": "remainder Computes the element-wise remainder of division.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "frac Computes what portion of each element in input?",
        "Y": "fractional portion",
        "Z": "frac Computes the fractional portion of each element in input.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "frac Computes the what portion of each element in input?",
        "Y": "fractional",
        "Z": "frac Computes the fractional portion of each element in input.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What computes the fractional portion of each element in input?",
        "Y": "frac",
        "Z": "frac Computes the fractional portion of each element in input.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What Decomposes input into mantissa and exponent tensors?",
        "Y": "frexp",
        "Z": "frexp Decomposes input into mantissa and exponent tensors such thatinput=mantissa\u00d72exponent\\text{input} = \\text{mantissa} \\times 2^{\\text{exponent}}input=mantissa\u00d72exponent.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What is function that is analogous to NumPy's gradient function?",
        "Y": "gradient",
        "Z": "gradient This function is analogous to NumPy\u2019s gradient function.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "The gradient function is analogous to what other function?",
        "Y": "NumPy",
        "Z": "gradient This function is analogous to NumPy\u2019s gradient function.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What is the gradient function analogous to?",
        "Y": "NumPy\u2019s gradient function",
        "Z": "gradient This function is analogous to NumPy\u2019s gradient function.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "imag Returns a new tensor containing what?",
        "Y": "imaginary values of the self tensor",
        "Z": "imag Returns a new tensor containing imaginary values of the self tensor.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What is ldexp?",
        "Y": "Multiplies input by 2**:attr:other",
        "Z": "ldexp Multiplies input by 2**:attr:other.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What does Multiplies input by 2**:attr:other?",
        "Y": "ldexp",
        "Z": "ldexp Multiplies input by 2**:attr:other.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What does a linear interpolation of two tensors start(given by input) and end based on a s",
        "Y": "lerp",
        "Z": "lerp Does a linear interpolation of two tensors start(given by input) and end based on a scalar or tensor weight and  returns the resulting out tensor.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What does lerp base its interpolation of two tensors on?",
        "Y": "a scalar or tensor weight",
        "Z": "lerp Does a linear interpolation of two tensors start(given by input) and end based on a scalar or tensor weight and  returns the resulting out tensor.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What does lerp do a linear interpolation of two tensors start(given by input) and end based on?",
        "Y": "a scalar or tensor weight",
        "Z": "lerp Does a linear interpolation of two tensors start(given by input) and end based on a scalar or tensor weight and  returns the resulting out tensor.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What computes the natural logarithm of the absolute value of the gamma function on input?",
        "Y": "lgamma",
        "Z": "lgamma Computes the natural logarithm of the absolute value of the gamma function on input.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "lgamma Computes the natural what of the value of the gamma function on input?",
        "Y": "logarithm",
        "Z": "lgamma Computes the natural logarithm of the absolute value of the gamma function on input.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What Computes the natural logarithm of the absolute value of the gamma function on input?",
        "Y": "lgamma",
        "Z": "lgamma Computes the natural logarithm of the absolute value of the gamma function on input.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What does lgamma compute?",
        "Y": "the natural logarithm of the absolute value of the gamma function on input",
        "Z": "lgamma Computes the natural logarithm of the absolute value of the gamma function on input.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What returns a new tensor with the natural logarithm of the elements of input?",
        "Y": "log",
        "Z": "log Returns a new tensor with the natural logarithm of the elements of input.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "The new tensor returns a new tensor with what?",
        "Y": "logarithm",
        "Z": "log10 Returns a new tensor with the logarithm to the base 10 of the elements of input.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What returns a new tensor with the natural logarithm of (1 + input)?",
        "Y": "log1p",
        "Z": "log1p Returns a new tensor with the natural logarithm of (1 +input).",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What is the natural logarithm of p?",
        "Y": "1",
        "Z": "log1p Returns a new tensor with the natural logarithm of (1 +input).",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What returns a new tensor with the logarithm to the base 2 of the elements of input?",
        "Y": "log2",
        "Z": "log2 Returns a new tensor with the logarithm to the base 2 of the elements of input.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What is the logarithm of the sum of exponentiations of the inputs?",
        "Y": "logaddexp",
        "Z": "logaddexp Logarithm of the sum of exponentiations of the inputs.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What is the base of the logaddexp2 logarithm of the sum of exponentiations of the inputs in?",
        "Y": "base-2",
        "Z": "logaddexp2 Logarithm of the sum of exponentiations of the inputs in base-2.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What is function that computes the element-wise logical AND of the given input tensors?",
        "Y": "logical_and Computes the element-wise logical AND of the given input tensors",
        "Z": "logical_and Computes the element-wise logical AND of the given input tensors.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What computes the element-wise logical AND of the given input tensors?",
        "Y": "logical_and",
        "Z": "logical_and Computes the element-wise logical AND of the given input tensors.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "logical_and Computes the element-wise logical AND of the given what?",
        "Y": "given input tensors",
        "Z": "logical_and Computes the element-wise logical AND of the given input tensors.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What does not compute the element-wise logical NOT of the given input tensor?",
        "Y": "logical_not Computes the element-wise logical NOT of the given input tensor",
        "Z": "logical_not Computes the element-wise logical NOT of the given input tensor.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What computes the element-wise logical NOT of the given input tensor?",
        "Y": "logical_not",
        "Z": "logical_not Computes the element-wise logical NOT of the given input tensor.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What computes the element-wise logical OR of the given input tensors?",
        "Y": "logical_or",
        "Z": "logical_or Computes the element-wise logical OR of the given input tensors.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "logical_or Computes the element-wise logical OR of the given what?",
        "Y": "given input tensors",
        "Z": "logical_or Computes the element-wise logical OR of the given input tensors.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What computes the element-wise logical XOR of the given input tensors?",
        "Y": "logical_xor",
        "Z": "logical_xor Computes the element-wise logical XOR of the given input tensors.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What is logit?",
        "Y": "Alias for torch.special.logit()",
        "Z": "logit Alias for torch.special.logit().",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What is the Alias for torch.special.logit()?",
        "Y": "logit",
        "Z": "logit Alias for torch.special.logit().",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What is leg of a right triangle?",
        "Y": "hypotenuse",
        "Z": "hypot Given the legs of a right triangle, return its hypotenuse.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What do the legs of a right triangle return?",
        "Y": "hypotenuse",
        "Z": "hypot Given the legs of a right triangle, return its hypotenuse.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "i0 Computes the modified Bessel function of the first kind for each element of input?",
        "Y": "zeroth order",
        "Z": "i0 Computes the zeroth order modified Bessel function of the first kind for each element of input.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What computes the zeroth order modified Bessel function of the first kind for each element of input?",
        "Y": "i0",
        "Z": "i0 Computes the zeroth order modified Bessel function of the first kind for each element of input.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What computes the regularized lower incomplete gamma function?",
        "Y": "igamma",
        "Z": "igamma Computes the regularized lower incomplete gamma function:",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What compiler computes the regularized upper incomplete gamma function?",
        "Y": "igammac",
        "Z": "igammac Computes the regularized upper incomplete gamma function:",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What Computes the regularized upper incomplete gamma function?",
        "Y": "igammac",
        "Z": "igammac Computes the regularized upper incomplete gamma function:",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What does mul do with the scalarotherand return a new tensor?",
        "Y": "mul Multiplies each element of the input input",
        "Z": "mul Multiplies each element of the input input with the scalarotherand returns a new resulting tensor.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What Multiplies each element of the input input with the scalarotherand returns a new resulting tensor?",
        "Y": "mul",
        "Z": "mul Multiplies each element of the input input with the scalarotherand returns a new resulting tensor.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What is Alias fortorch?",
        "Y": "Alias for torch.mul",
        "Z": "multiply Alias for torch.mul().",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What is Alias for torch.mul()?",
        "Y": "multiply Alias for torch.mul()",
        "Z": "multiply Alias for torch.mul().",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "mvlgamma Computes themultivariate log-gamma function) with what -wise?",
        "Y": "dimensionpppelement",
        "Z": "mvlgamma Computes themultivariate log-gamma function) with dimensionpppelement-wise, given by",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What does mvlgamma compute?",
        "Y": "multivariate log-gamma function",
        "Z": "mvlgamma Computes themultivariate log-gamma function) with dimensionpppelement-wise, given by",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What is given by mvlgamma?",
        "Y": "dimensionpppelement-wise",
        "Z": "mvlgamma Computes themultivariate log-gamma function) with dimensionpppelement-wise, given by",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What Computes themultivariate log-gamma function?",
        "Y": "mvlgamma",
        "Z": "mvlgamma Computes themultivariate log-gamma function) with dimensionpppelement-wise, given by",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What are the values specified by nan_to_num?",
        "Y": "bynan,posinf, andneginf",
        "Z": "nan_to_num ReplacesNaN, positive infinity, and negative infinity values in input with the values specified bynan,posinf, andneginf, respectively.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What replacesNaN, positive infinity, and negative infinity values in input with the values specified bynan,posinf,",
        "Y": "nan_to_num",
        "Z": "nan_to_num ReplacesNaN, positive infinity, and negative infinity values in input with the values specified bynan,posinf, andneginf, respectively.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What returns a new tensor with the negative of the elements of input?",
        "Y": "neg",
        "Z": "neg Returns a new tensor with the negative of the elements of input.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What is website that is negative for Alias for torch.neg?",
        "Y": "Alias for torch.neg",
        "Z": "negative Alias for torch.neg()",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "Is Alias for torch.neg() positive or negative?",
        "Y": "negative",
        "Z": "negative Alias for torch.neg()",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What is Alias for torch.neg stand for?",
        "Y": "Alias for torch.neg",
        "Z": "negative Alias for torch.neg()",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "Afterinputtowardsother Return the next what?",
        "Y": "floating-point value",
        "Z": "nextafter Return the next floating-point value afterinputtowardsother, element wise.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What is function that computes the digamma function on input?",
        "Y": "polygamma",
        "Z": "polygamma Computes thenthn^{th}nthderivative of the digamma function on input.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What is function that computes the secondthnthnthderivative of the digamma function onin",
        "Y": "polygamma",
        "Z": "polygamma Computes thenthn^{th}nthderivative of the digamma function on input.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What is the result of the Returnsinput?",
        "Y": "positive Returnsinput",
        "Z": "positive Returnsinput.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What is input?",
        "Y": "positive Returnsinput",
        "Z": "positive Returnsinput.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What does pow return with the result?",
        "Y": "tensor",
        "Z": "pow Takes the power of each element in inputwithexponentand returns a tensor with the result.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What takes the power of each element in inputwithexponentand returns a tensor with the result?",
        "Y": "pow",
        "Z": "pow Takes the power of each element in inputwithexponentand returns a tensor with the result.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "rad2deg Returns a new tensor with each of the elements of input converted from angles in what?",
        "Y": "radians",
        "Z": "rad2deg Returns a new tensor with each of the elements of input converted from angles in radians to degrees.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What returns a new tensor with each element of input converted from angles in radians to degrees?",
        "Y": "rad2deg",
        "Z": "rad2deg Returns a new tensor with each of the elements of input converted from angles in radians to degrees.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What returns a new tensor with each of the elements of input converted from angles in radians to degrees?",
        "Y": "rad2deg",
        "Z": "rad2deg Returns a new tensor with each of the elements of input converted from angles in radians to degrees.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "real Returns a new tensor containing real values of what?",
        "Y": "the self tensor",
        "Z": "real Returns a new tensor containing real values of the self tensor.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "reciprocal Returns a new what with the reciprocal of the elements of input?",
        "Y": "tensor",
        "Z": "reciprocal Returns a new tensor with the reciprocal of the elements of input",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What does remainder do?",
        "Y": "Computes the element-wise remainder of division",
        "Z": "remainder Computes the element-wise remainder of division.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "round Returns a new what?",
        "Y": "tensor",
        "Z": "round Returns a new tensor with each of the elements of inputrounded to the closest integer.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What returns a new tensor with each of the elements of inputrounded to the closest integer?",
        "Y": "round",
        "Z": "round Returns a new tensor with each of the elements of inputrounded to the closest integer.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What is sigmoid?",
        "Y": "Alias for torch.special.expit()",
        "Z": "sigmoid Alias for torch.special.expit().",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What does sign return with the signs of the elements of input?",
        "Y": "tensor",
        "Z": "sign Returns a new tensor with the signs of the elements of input.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What does sign Return with the signs of the elements of input?",
        "Y": "tensor",
        "Z": "sign Returns a new tensor with the signs of the elements of input.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "sgn is an extension of what function?",
        "Y": "torch.sign()",
        "Z": "sgn This function is an extension of torch.sign() to complex tensors.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What is an extension of torch.sign() to complex tensors?",
        "Y": "sgn",
        "Z": "sgn This function is an extension of torch.sign() to complex tensors.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What is the sign bit set of each element of input?",
        "Y": "less than zero",
        "Z": "signbit Tests if each element of inputhas its sign bit set (is less than zero) or not.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What tests determine if each element of input has its sign bit set (is less than zero) or not?",
        "Y": "signbit Tests",
        "Z": "signbit Tests if each element of inputhas its sign bit set (is less than zero) or not.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "The new tensor returns a new tensor with what of the elements of input?",
        "Y": "sine",
        "Z": "sin Returns a new tensor with the sine of the elements of input.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "Sin Returns a new what with the sine of the elements of input?",
        "Y": "tensor",
        "Z": "sin Returns a new tensor with the sine of the elements of input.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What does sinc do to the normalized sinc of input?",
        "Y": "Computes",
        "Z": "sinc Computes the normalized sinc of input.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What Computes the normalized sinc of input?",
        "Y": "sinc",
        "Z": "sinc Computes the normalized sinc of input.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What type of sine does sinh return?",
        "Y": "hyperbolic",
        "Z": "sinh Returns a new tensor with the hyperbolic sine of the elements of input.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What returns a new tensor with the square-root of the elements of input?",
        "Y": "sqrt",
        "Z": "sqrt Returns a new tensor with the square-root of the elements of input.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What returns a new tensor with the square of the elements of input?",
        "Y": "square",
        "Z": "square Returns a new tensor with the square of the elements of input.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What Returns a new tensor with the square of the elements of input?",
        "Y": "square",
        "Z": "square Returns a new tensor with the square of the elements of input.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What is sub that is scaled byalpha?",
        "Y": "sub Subtracts other",
        "Z": "sub Subtracts other, scaled byalpha, from input.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "How is sub Subtracts other scaled?",
        "Y": "byalpha",
        "Z": "sub Subtracts other, scaled byalpha, from input.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "Where is sub Subtracts other scaled byalpha?",
        "Y": "from input",
        "Z": "sub Subtracts other, scaled byalpha, from input.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What is the function that subtracts Alias for torch.sub()?",
        "Y": "subtract Alias for torch.sub()",
        "Z": "subtract Alias for torch.sub().",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What is subtract?",
        "Y": "Alias for torch.sub()",
        "Z": "subtract Alias for torch.sub().",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "tan Returns a new tensor with what of the elements of input?",
        "Y": "tangent",
        "Z": "tan Returns a new tensor with the tangent of the elements of input.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What returns a new tensor with the tangent of the elements of input?",
        "Y": "tan",
        "Z": "tan Returns a new tensor with the tangent of the elements of input.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What returns a new tensor with the hyperbolic tangent of the elements of input?",
        "Y": "tanh",
        "Z": "tanh Returns a new tensor with the hyperbolic tangent of the elements of input.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "tanh Returns a new tensor with what element?",
        "Y": "hyperbolic tangent",
        "Z": "tanh Returns a new tensor with the hyperbolic tangent of the elements of input.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What does true_divide do?",
        "Y": "Alias for torch.div()",
        "Z": "true_divide Alias for torch.div()withrounding_mode=None.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What is the Alias for torch.div() with rounding_mode=None?",
        "Y": "true_divide",
        "Z": "true_divide Alias for torch.div()withrounding_mode=None.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What returns a new tensor with the truncated integer values of the elements of input?",
        "Y": "trunc",
        "Z": "trunc Returns a new tensor with the truncated integer values of the elements of input.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What does trunc return with the truncated integer values of the elements of input?",
        "Y": "tensor",
        "Z": "trunc Returns a new tensor with the truncated integer values of the elements of input.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What is xlogy?",
        "Y": "Computesinput*log",
        "Z": "xlogy Computesinput*log(other)with the following cases.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "Computes input*log(other) ?",
        "Y": "xlogy",
        "Z": "xlogy Computes input*log(other) .",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What returns the indices of the minimum value(s) of the flattened tensor?",
        "Y": "argmin",
        "Z": "argmin Returns the indices of the minimum value(s) of the flattened tensor or along a dimension",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What returns the indices of the minimum value(s) of the flattened tensor or along a dimension?",
        "Y": "argmin",
        "Z": "argmin Returns the indices of the minimum value(s) of the flattened tensor or along a dimension",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What does amax return?",
        "Y": "the maximum value of each slice of the input tensor",
        "Z": "amax Returns the maximum value of each slice of the input tensor in the given dimension(s)dim.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What happens if all elements in inputevaluate toTrue?",
        "Y": "all Tests",
        "Z": "all Tests if all elements in inputevaluate toTrue.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "max Returns what value of all elements in the input tensor?",
        "Y": "maximum value",
        "Z": "max Returns the maximum value of all elements in the input tensor.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "max Returns the maximum value of all elements in what?",
        "Y": "the input tensor",
        "Z": "max Returns the maximum value of all elements in the input tensor.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "min Returns the minimum value of all elements in what?",
        "Y": "the input tensor",
        "Z": "min Returns the minimum value of all elements in the input tensor.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What does dist return?",
        "Y": "p-norm",
        "Z": "dist Returns the p-norm of (input-other)",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What returns the mean value of all elements in the input tensor?",
        "Y": "mean",
        "Z": "mean Returns the mean value of all elements in the input tensor.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "mean Returns what?",
        "Y": "the mean value of all elements in the input tensor",
        "Z": "mean Returns the mean value of all elements in the input tensor.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What returns the median of the values in input?",
        "Y": "nanmedian",
        "Z": "nanmedian Returns the median of the values in input, ignoringNaNvalues.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What Returns the median of the values in input?",
        "Y": "median",
        "Z": "median Returns the median of the values in input.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What does values represent in the given dimension dim?",
        "Y": "the mode value of each row of the input tensor",
        "Z": "mode Returns a named tuple(values,indices)where values is the mode value of each row of the input tensor in the given dimension dim, i.e.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What returns a named tuple(values,indices)where values is the mode value of each row of the input tensor",
        "Y": "mode",
        "Z": "mode Returns a named tuple(values,indices)where values is the mode value of each row of the input tensor in the given dimension dim, i.e.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What is the return value of a given tensor?",
        "Y": "matrix  norm or vector norm",
        "Z": "norm Returns the matrix  norm or vector norm of a given tensor.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What type of norm returns a given tensor?",
        "Y": "matrix  norm",
        "Z": "norm Returns the matrix  norm or vector norm of a given tensor.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "Returns the matrix  norm or what else of a given tensor?",
        "Y": "vector norm",
        "Z": "norm Returns the matrix  norm or vector norm of a given tensor.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What does nansum treat Not a Numbers as?",
        "Y": "zero",
        "Z": "nansum Returns the sum of all elements, treating Not a Numbers (NaNs) as zero.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What returns the sum of all elements?",
        "Y": "nansum",
        "Z": "nansum Returns the sum of all elements, treating Not a Numbers (NaNs) as zero.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "prod Returns the product of all elements in what?",
        "Y": "the input tensor",
        "Z": "prod Returns the product of all elements in the input tensor.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "what does prod Return?",
        "Y": "the product of all elements in the input tensor",
        "Z": "prod Returns the product of all elements in the input tensor.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "The quantile computes the q-th quantiles of each row of the input tensor along what?",
        "Y": "the dimension dim",
        "Z": "quantile Computes the q-th quantiles of each row of the input tensor along the dimension dim.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What computes the q-th quantiles of each row of the input tensor along the dimension dim?",
        "Y": "quantile",
        "Z": "quantile Computes the q-th quantiles of each row of the input tensor along the dimension dim.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What is a variant of of torch.quantile() that \"ignores\"NaNvalues?",
        "Y": "nanquantile",
        "Z": "nanquantile This is a variant of torch.quantile()that \u201cignores\u201dNaNvalues, computing the quantiles q as if NaN values in input didnot exist.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What is computed if NaN values in input didnot exist?",
        "Y": "quantiles q as",
        "Z": "nanquantile This is a variant of torch.quantile()that \u201cignores\u201dNaNvalues, computing the quantiles q as if NaN values in input didnot exist.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "Which correction will be used if std if unbiased is True?",
        "Y": "Bessel\u2019s",
        "Z": "std if unbiased is True, Bessel\u2019s correction will be used.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What will Bessel\u2019s correction be used to calculate?",
        "Y": "standard deviation",
        "Z": "std_mean if unbiased is True, Bessel\u2019s correction will be used to calculate the standard deviation.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "sum Returns the sum of all elements in what?",
        "Y": "the input tensor",
        "Z": "sum Returns the sum of all elements in the input tensor.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "sum Returns what?",
        "Y": "the sum of all elements in the input tensor",
        "Z": "sum Returns the sum of all elements in the input tensor.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What returns the unique elements of the input tensor?",
        "Y": "unique",
        "Z": "unique Returns the unique elements of the input tensor.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What eliminates all but the first element from every group of equivalent elements?",
        "Y": "unique_consecutive",
        "Z": "unique_consecutive Eliminates all but the first element from every consecutive group of equivalent elements.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What eliminates all but the first element from every consecutive group of equivalent elements?",
        "Y": "unique_consecutive",
        "Z": "unique_consecutive Eliminates all but the first element from every consecutive group of equivalent elements.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What type of correction will be used?",
        "Y": "Bessel\u2019s",
        "Z": "var if unbiased is True, Bessel\u2019s correction will be used.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What Counts the number of non-zero values in the tensor input along the given dim?",
        "Y": "count_nonzero",
        "Z": "count_nonzero Counts the number of non-zero values in the tensor input along the given dim.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What is the tensor input along?",
        "Y": "the given dim",
        "Z": "count_nonzero Counts the number of non-zero values in the tensor input along the given dim.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What condition does allclose check?",
        "Y": "allinput and othersatisfy",
        "Z": "allclose This function checks if allinput and othersatisfy the condition:",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What returns the indices that sort a tensor along a given dimension in ascending order by value?",
        "Y": "argsort",
        "Z": "argsort Returns the indices that sort a tensor along a given dimension in ascending order by value.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "argsort Returns the indices that sort a tensor along a given dimension in what order by value?",
        "Y": "ascending",
        "Z": "argsort Returns the indices that sort a tensor along a given dimension in ascending order by value.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "argsort Returns the indices that sort a tensor along a given dimension in what order?",
        "Y": "ascending order",
        "Z": "argsort Returns the indices that sort a tensor along a given dimension in ascending order by value.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What does eq compute?",
        "Y": "element-wise equality",
        "Z": "eq Computes element-wise equality",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "eq Computes what?",
        "Y": "element-wise equality",
        "Z": "eq Computes element-wise equality",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What Computes element-wise equality?",
        "Y": "eq",
        "Z": "eq Computes element-wise equality",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What method returns  true if two tensors have the same size and elements?",
        "Y": "equal",
        "Z": "equal True if two tensors have the same size and elements,False otherwise.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What is anothertextinput geq textotherelement-wise?",
        "Y": "Computesinput",
        "Z": "ge Computesinput\u2265other\\text{input} \\geq \\text{other}input\u2265otherelement-wise.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What is greater_equal?",
        "Y": "Alias for torch.ge()",
        "Z": "greater_equal Alias for torch.ge().",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What is Alias for torch.ge()?",
        "Y": "greater_equal",
        "Z": "greater_equal Alias for torch.ge().",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What is gt?",
        "Y": "Computesinput",
        "Z": "gt Computesinput>other\\text{input} > \\text{other}input>otherelement-wise.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What is anothertextinput > textotherinput>otherelement-wise?",
        "Y": "gt Computesinput",
        "Z": "gt Computesinput>other\\text{input} > \\text{other}input>otherelement-wise.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What is Alias for torch.gt?",
        "Y": "Alias for torch.gt()",
        "Z": "greater Alias for torch.gt().",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What is Alias for torch.gt()?",
        "Y": "greater Alias for torch.gt()",
        "Z": "greater Alias for torch.gt().",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What does isclose return a new tensor with?",
        "Y": "boolean elements",
        "Z": "isclose Returns a new tensor with boolean elements representing if each element of input is \u201cclose\u201d to the corresponding element of other.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What does the isclose return a new tensor with boolean elements representing?",
        "Y": "if each element of input is \u201cclose\u201d to the corresponding element of other",
        "Z": "isclose Returns a new tensor with boolean elements representing if each element of input is \u201cclose\u201d to the corresponding element of other.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What does isfinite return if each element isfiniteor?",
        "Y": "boolean elements",
        "Z": "isfinite Returns a new tensor with boolean elements representing if each element isfiniteor not.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What does isfinite return if each element isfiniteor not?",
        "Y": "boolean elements",
        "Z": "isfinite Returns a new tensor with boolean elements representing if each element isfiniteor not.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What does isfinite return a new tensor with boolean elements represent?",
        "Y": "if each element isfiniteor not",
        "Z": "isfinite Returns a new tensor with boolean elements representing if each element isfiniteor not.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "Is each element of input infinite or negative infinity?",
        "Y": "infinite",
        "Z": "isinf Tests if each element of input is infinite (positive or negative infinity) or not.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What Tests if each element ofinput is infinite?",
        "Y": "isinf",
        "Z": "isinf Tests if each element of input is infinite (positive or negative infinity) or not.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What tests determine if each element of input is positive infinity or not?",
        "Y": "isposinf Tests",
        "Z": "isposinf Tests if each element of input is positive infinity or not.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What test determines if each element of input is positive infinity or not?",
        "Y": "isposinf",
        "Z": "isposinf Tests if each element of input is positive infinity or not.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What is used to determine if each element of input is negative infinity or not?",
        "Y": "isneginf Tests",
        "Z": "isneginf Tests if each element of input is negative infinity or not.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What test determines if each element of input is negative infinity or not?",
        "Y": "isneginf",
        "Z": "isneginf Tests if each element of input is negative infinity or not.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "isnan Returns a new tensor with what?",
        "Y": "boolean elements",
        "Z": "isnan Returns a new tensor with boolean elements representing if each element of input is NaN or not.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "Isnan Returns a new tensor with boolean elements representing what?",
        "Y": "if each element of input is NaN or not",
        "Z": "isnan Returns a new tensor with boolean elements representing if each element of input is NaN or not.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "isnan Returns a new tensor with what elements?",
        "Y": "boolean elements",
        "Z": "isnan Returns a new tensor with boolean elements representing if each element of input is NaN or not.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What does isreal return a new tensor with?",
        "Y": "boolean elements",
        "Z": "isreal Returns a new tensor with boolean elements representing if each element of input is real-valued or not.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "isreal Returns a new tensor with what elements?",
        "Y": "boolean elements",
        "Z": "isreal Returns a new tensor with boolean elements representing if each element of input is real-valued or not.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "Isreal Returns a new tensor with boolean elements representing?",
        "Y": "if each element of input is real-valued or not",
        "Z": "isreal Returns a new tensor with boolean elements representing if each element of input is real-valued or not.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What returns a named tuple(values,indices)?",
        "Y": "kthvalue",
        "Z": "kthvalue Returns a named tuple(values,indices)where values is thekth smallest element of each row of the input tensor in the given dimension dim.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What Returns a named tuple(values,indices)where values is thekth smallest element of each row of the",
        "Y": "kthvalue",
        "Z": "kthvalue Returns a named tuple(values,indices)where values is thekth smallest element of each row of the input tensor in the given dimension dim.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What is othertextinput leq textotherelement-wise?",
        "Y": "Computesinput",
        "Z": "le Computesinput\u2264other\\text{input} \\leq \\text{other}input\u2264otherelement-wise.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What is less_equal?",
        "Y": "Alias for torch.le()",
        "Z": "less_equal Alias for torch.le().",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What is the difference between Alias for torch.le() and Alias for torch.le()?",
        "Y": "less_equal",
        "Z": "less_equal Alias for torch.le().",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What is anothertextinput textotherinputotherelement-wise?",
        "Y": "Computesinput",
        "Z": "lt Computesinput<other\\text{input} < \\text{other}input<otherelement-wise.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What is othertextinput  textotherelement-wise?",
        "Y": "Computesinput",
        "Z": "lt Computesinput<other\\text{input} < \\text{other}input<otherelement-wise.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What is less?",
        "Y": "Alias for torch.lt()",
        "Z": "less Alias for torch.lt().",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What is Alias for torch.lt ?",
        "Y": "less",
        "Z": "less Alias for torch.lt().",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "maximum Computes what?",
        "Y": "the element-wise maximum of input and other",
        "Z": "maximum Computes the element-wise maximum of input and other.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What computes the element-wise minimum of input and other?",
        "Y": "fmin",
        "Z": "fmin Computes the element-wise minimum of input and other.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "minimum Computes what of input and other?",
        "Y": "element-wise minimum",
        "Z": "minimum Computes the element-wise minimum of input and other.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What computes the element-wise maximum of input and other?",
        "Y": "fmax",
        "Z": "fmax Computes the element-wise maximum of input and other.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What Computes the element-wise minimum of input and other?",
        "Y": "fmin",
        "Z": "fmin Computes the element-wise minimum of input and other.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What is Alias for torch.ne()?",
        "Y": "not_equal",
        "Z": "not_equal Alias for torch.ne().",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What is not_equal?",
        "Y": "Alias for torch.ne()",
        "Z": "not_equal Alias for torch.ne().",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "Sort Sorts what along a given dimension in ascending order by value?",
        "Y": "the elements of the input tensor",
        "Z": "sort Sorts the elements of the input tensor along a given dimension in ascending order by value.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "Sort Sorts the elements of the input tensor along a given dimension in what order?",
        "Y": "ascending order by value",
        "Z": "sort Sorts the elements of the input tensor along a given dimension in ascending order by value.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "Sorts the elements of the input tensor along a given dimension in what order?",
        "Y": "ascending order",
        "Z": "sort Sorts the elements of the input tensor along a given dimension in ascending order by value.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What Sorts the elements of the input tensor along a given dimension in ascending order by value?",
        "Y": "sort",
        "Z": "sort Sorts the elements of the input tensor along a given dimension in ascending order by value.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What does topk return along a given dimension?",
        "Y": "the k largest elements of the given input tensor",
        "Z": "topk Returns the k largest elements of the given input tensor along a given dimension.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "topk Returns what element of the given input tensor along a given dimension?",
        "Y": "the k largest",
        "Z": "topk Returns the k largest elements of the given input tensor along a given dimension.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "msort Sorts the elements of what?",
        "Y": "the input tensor",
        "Z": "msort Sorts the elements of the input tensor along its first dimension in ascending order by value.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "msort Sorts the elements of the input tensor along its first dimension in what order?",
        "Y": "ascending order",
        "Z": "msort Sorts the elements of the input tensor along its first dimension in ascending order by value.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What is istft Inverse short time?",
        "Y": "Fourier Transform",
        "Z": "istft Inverse short time Fourier Transform.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What is the Fourier Transform?",
        "Y": "Inverse short time",
        "Z": "istft Inverse short time Fourier Transform.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What is Bartlett window function?",
        "Y": "evaluates bartlett_window",
        "Z": "bartlett_window Bartlett window function.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What is Blackman window function?",
        "Y": "evaluates blackman_window",
        "Z": "blackman_window Blackman window function.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What does hamming_window function do?",
        "Y": "evaluates Hamming window function",
        "Z": "hamming_window Hamming window function.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What is hamming_window?",
        "Y": "evaluates Hamming window function",
        "Z": "hamming_window Hamming window function.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What is Hann window function?",
        "Y": "evaluates hann_window",
        "Z": "hann_window Hann window function.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What does hann_window do?",
        "Y": "evaluates Hann window function",
        "Z": "hann_window Hann window function.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What does kaiser_window compute the Kaiser window with?",
        "Y": "window length window_length and shape parameter beta",
        "Z": "kaiser_window Computes the Kaiser window with window length window_length and shape parameter beta.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What computes the Kaiser window with window length window_length and shape parameter beta?",
        "Y": "kaiser_window",
        "Z": "kaiser_window Computes the Kaiser window with window length window_length and shape parameter beta.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What Computes the Kaiser window with window length window_length and shape parameter beta?",
        "Y": "kaiser_window",
        "Z": "kaiser_window Computes the Kaiser window with window length window_length and shape parameter beta.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "Atleast_1d Returns a 1-dimensional view of each input tensor with what dimensions?",
        "Y": "zero",
        "Z": "atleast_1d Returns a 1-dimensional view of each input tensor with zero dimensions.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "At least_1d Returns a view of each input tensor with zero dimensions that is what?",
        "Y": "1-dimensional",
        "Z": "atleast_1d Returns a 1-dimensional view of each input tensor with zero dimensions.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What returns a 1-dimensional view of each input tensor with zero dimensions?",
        "Y": "atleast_1d",
        "Z": "atleast_1d Returns a 1-dimensional view of each input tensor with zero dimensions.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "Atleast_2d Returns a 2-dimensional view of each input tensor with what dimensions?",
        "Y": "zero",
        "Z": "atleast_2d Returns a 2-dimensional view of each input tensor with zero dimensions.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "Atleast_3d Returns a 3-dimensional view of each input tensor with what dimensions?",
        "Y": "zero",
        "Z": "atleast_3d Returns a 3-dimensional view of each input tensor with zero dimensions.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What counts the frequency of each value in an array of non-negative ints?",
        "Y": "bincount",
        "Z": "bincount Count the frequency of each value in an array of non-negative ints.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What creates a block diagonal matrix  from provided tensors?",
        "Y": "block_diag",
        "Z": "block_diag Create a block diagonal matrix  from provided tensors.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "block_diag Create a block diagonal matrix  from what?",
        "Y": "provided tensors",
        "Z": "block_diag Create a block diagonal matrix  from provided tensors.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What is broadcast_tensors based on?",
        "Y": "Broadcasting semantics",
        "Z": "broadcast_tensors Broadcasts the given tensors according toBroadcasting semantics.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What shape is broadcast_to Broadcasts input to?",
        "Y": "shape shape",
        "Z": "broadcast_to Broadcasts input to the shape shape.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What does broadcast_to the shape shape?",
        "Y": "Broadcasts input",
        "Z": "broadcast_to Broadcasts input to the shape shape.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What type of broadcast is similar to broadcast_tensors?",
        "Y": "shapes",
        "Z": "broadcast_shapes Similar to broadcast_tensors() but for shapes.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What are broadcast_shapes similar to?",
        "Y": "broadcast_tensors",
        "Z": "broadcast_shapes Similar to broadcast_tensors() but for shapes.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What are broadcast_tensors?",
        "Y": "shapes",
        "Z": "broadcast_shapes Similar to broadcast_tensors() but for shapes.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "How are the boundaries of the buckets set by bucketize?",
        "Y": "the buckets to which each value in the input belongs, where the boundaries of the buckets are set by boundaries",
        "Z": "bucketize Returns the indices of the buckets to which each value in the input belongs, where the boundaries of the buckets are set by boundaries.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "Do cartesian product of the given sequence of what?",
        "Y": "given sequence of tensors",
        "Z": "cartesian_prod Do cartesian product of the given sequence of tensors.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What does cartesian_prod do of the given sequence of tensors?",
        "Y": "cartesian product",
        "Z": "cartesian_prod Do cartesian product of the given sequence of tensors.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What does cdist compute between each pair of the two collections of row vectors?",
        "Y": "p-norm distance",
        "Z": "cdist Computes batched the p-norm distance between each pair of the two collections of row vectors.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What Computes batched the p-norm distance between each pair of two collections of row vectors?",
        "Y": "cdist",
        "Z": "cdist Computes batched the p-norm distance between each pair of the two collections of row vectors.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What returns a copy of input?",
        "Y": "clone",
        "Z": "clone Returns a copy of input.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "Compute combinations of lengthrrof the given tensor?",
        "Y": "combinations",
        "Z": "combinations Compute combinations of lengthrrrof the given tensor.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "cross Returns the cross product of what?",
        "Y": "vectors",
        "Z": "cross Returns the cross product of vectors in dimension dimof input and other.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What returns a named tuple?",
        "Y": "cummin",
        "Z": "cummin Returns a named tuple(values,indices)where values is the cumulative minimum of elements ofinput in the dimension dim.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What Returns a named tuple(values,indices)where values is the cumulative maximum of elements ofinput in the dimensiond",
        "Y": "cummax",
        "Z": "cummax Returns a named tuple(values,indices)where values is the cumulative maximum of elements ofinput in the dimension dim.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What Returns a named tuple(values,indices)where values is the cumulative minimum of elements ofinput in the dimensiond",
        "Y": "cummin",
        "Z": "cummin Returns a named tuple(values,indices)where values is the cumulative minimum of elements ofinput in the dimension dim.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What does cumprod return?",
        "Y": "cumulative product",
        "Z": "cumprod Returns the cumulative product of elements ofinput in the dimension dim.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What returns the cumulative product of elements ofinput in the dimension dim?",
        "Y": "cumprod",
        "Z": "cumprod Returns the cumulative product of elements ofinput in the dimension dim.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What returns the cumulative sum of elements ofinput in the dimension dim?",
        "Y": "cumsum",
        "Z": "cumsum Returns the cumulative sum of elements ofinput in the dimension dim.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "diag Ifinputis a vector (1-D tensor), then returns a what tensor?",
        "Y": "2-D square",
        "Z": "diag Ifinputis a vector (1-D tensor), then returns a 2-D square tensor",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "diag Ifinputis a vector (1-D tensor), then returns a what?",
        "Y": "2-D square tensor",
        "Z": "diag Ifinputis a vector (1-D tensor), then returns a 2-D square tensor",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "How are the diagonals of certain 2D planes filled?",
        "Y": "by input",
        "Z": "diag_embed Creates a tensor whose diagonals of certain 2D planes (specified bydim1 anddim2) are filled by input.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What creates a tensor whose diagonals of certain 2D planes are filled by input?",
        "Y": "diag_embed",
        "Z": "diag_embed Creates a tensor whose diagonals of certain 2D planes (specified bydim1 anddim2) are filled by input.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "diag_embed Creates a tensor whose diagonals of certain 2D planes are filled what?",
        "Y": "by input",
        "Z": "diag_embed Creates a tensor whose diagonals of certain 2D planes (specified bydim1 anddim2) are filled by input.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "diagflat Ifinputis a vector (1-D tensor), then returns a what tensor?",
        "Y": "2-D square",
        "Z": "diagflat Ifinputis a vector (1-D tensor), then returns a 2-D square tensor",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "Ifinputis a vector (1-D tensor), then returns a 2-D square tensor?",
        "Y": "diagflat",
        "Z": "diagflat Ifinputis a vector (1-D tensor), then returns a 2-D square tensor",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "Ifinputis a vector (1-D tensor), then returns a what?",
        "Y": "2-D square tensor",
        "Z": "diagflat Ifinputis a vector (1-D tensor), then returns a 2-D square tensor",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What does diagonal Return return?",
        "Y": "a partial view",
        "Z": "diagonal Returns a partial view of input with the its diagonal elements with respect to dim1 and dim2 appended as a dimension at the end of the shape.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What is the forward difference along a given dimension?",
        "Y": "n-th",
        "Z": "diff Computes the n-th forward difference along the given dimension.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "Einsum Sums the product of the elements of what dimension specified using a notation based on the Einstein summation convention?",
        "Y": "input operands along dimensions",
        "Z": "einsum Sums the product of the elements of the input operands along dimensions specified using a notation based on the Einstein summation convention.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "Einsum Sums the product of the elements of the input operands along dimensions specified using a notation based on what convention?",
        "Y": "Einstein summation convention",
        "Z": "einsum Sums the product of the elements of the input operands along dimensions specified using a notation based on the Einstein summation convention.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "Einsum Sums the product of the elements of what dimensions specified using a notation based on the Einstein summation convention?",
        "Y": "input operands along",
        "Z": "einsum Sums the product of the elements of the input operands along dimensions specified using a notation based on the Einstein summation convention.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What does Flattens input do by reshaping it into a one-dimensional tensor?",
        "Y": "flatten",
        "Z": "flatten Flattens input by reshaping it into a one-dimensional tensor.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What kind of tensor is Flattens input?",
        "Y": "one-dimensional",
        "Z": "flatten Flattens input by reshaping it into a one-dimensional tensor.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "How does flatten Flattens input work?",
        "Y": "reshaping it into a one-dimensional tensor",
        "Z": "flatten Flattens input by reshaping it into a one-dimensional tensor.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "flip Reverse the order of a n-D tensor along given axis in what?",
        "Y": "dims",
        "Z": "flip Reverse the order of a n-D tensor along given axis in dims.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What is the order of a tensor along given axis in dims?",
        "Y": "n-D",
        "Z": "flip Reverse the order of a n-D tensor along given axis in dims.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "In what order does flip Reverse the order of a n-D tensor along given axis?",
        "Y": "dims",
        "Z": "flip Reverse the order of a n-D tensor along given axis in dims.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What flips tensor in the left/right direction?",
        "Y": "fliplr",
        "Z": "fliplr Flip tensor in the left/right direction, returning a new tensor.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What do fliplr Flip in the left/right direction?",
        "Y": "tensor",
        "Z": "fliplr Flip tensor in the left/right direction, returning a new tensor.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What flips tensor in the up/down direction?",
        "Y": "flipud",
        "Z": "flipud Flip tensor in the up/down direction, returning a new tensor.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What computes the Kronecker product, denoted byotimes, of input and other?",
        "Y": "kron",
        "Z": "kron Computes the Kronecker product, denoted by\u2297\\otimes\u2297, of input and other.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What denotes the Kronecker product?",
        "Y": "kron",
        "Z": "kron Computes the Kronecker product, denoted by\u2297\\otimes\u2297, of input and other.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "rot90 Rotate a tensor by 90 degrees in the plane specified by dims axis?",
        "Y": "n-D",
        "Z": "rot90 Rotate a n-D tensor by 90 degrees in the plane specified by dims axis.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What specifies the plane of a n-D tensor?",
        "Y": "dims axis",
        "Z": "rot90 Rotate a n-D tensor by 90 degrees in the plane specified by dims axis.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "Rotate a n-D tensor by 90 degrees in the plane specified by what axis?",
        "Y": "dims",
        "Z": "rot90 Rotate a n-D tensor by 90 degrees in the plane specified by dims axis.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What does gcd stand for?",
        "Y": "element-wise greatest common divisor",
        "Z": "gcd Computes the element-wise greatest common divisor (GCD) of input and other.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What does histc do?",
        "Y": "Computes the histogram of a tensor",
        "Z": "histc Computes the histogram of a tensor.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What does histc compute of a tensor?",
        "Y": "histogram",
        "Z": "histc Computes the histogram of a tensor.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "histc Computes the histogram of what?",
        "Y": "tensor",
        "Z": "histc Computes the histogram of a tensor.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What is defined by expanding the iiith input over dimensions defined by other inputs?",
        "Y": "theiiithgrid",
        "Z": "meshgrid Take NNN tensors, each of which can be either scalar or 1-dimensional vector, and create NNNN-dimensional grids, where theiiithgrid is defined by expanding the iiith input over dimensions defined by other inputs.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What can each of the Take NNN tensors be?",
        "Y": "scalar or 1-dimensional vector",
        "Z": "meshgrid Take NNN tensors, each of which can be either scalar or 1-dimensional vector, and create NNNN-dimensional grids, where theiiithgrid is defined by expanding the iiith input over dimensions defined by other inputs.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What are Take NNN tensors?",
        "Y": "meshgrid",
        "Z": "meshgrid Take NNN tensors, each of which can be either scalar or 1-dimensional vector, and create NNNN-dimensional grids, where theiiithgrid is defined by expanding the iiith input over dimensions defined by other inputs.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What computes the element-wise least common multiple (LCM) of input and other?",
        "Y": "lcm",
        "Z": "lcm Computes the element-wise least common multiple (LCM) of input and other.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What does lcm stand for?",
        "Y": "least common multiple",
        "Z": "lcm Computes the element-wise least common multiple (LCM) of input and other.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What returns the logarithm of the cumulative summation of the exponentiation of elements ofinput in the dimension dim?",
        "Y": "logcumsumexp",
        "Z": "logcumsumexp Returns the logarithm of the cumulative summation of the exponentiation of elements ofinput in the dimension dim.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "ravel Return a contiguous flattened what?",
        "Y": "tensor",
        "Z": "ravel Return a contiguous flattened tensor.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What animal returns a contiguous flattened tensor?",
        "Y": "ravel",
        "Z": "ravel Return a contiguous flattened tensor.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What is the term for a contiguous flattened tensor?",
        "Y": "ravel",
        "Z": "ravel Return a contiguous flattened tensor.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "Thep-norm of the sub-tensor is lower than what?",
        "Y": "the value max norm",
        "Z": "renorm Returns a tensor where each sub-tensor of inputalong dimension dimis normalized such that thep-norm of the sub-tensor is lower than the value max norm",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What of the sub-tensor is lower than the value max norm?",
        "Y": "thep-norm",
        "Z": "renorm Returns a tensor where each sub-tensor of inputalong dimension dimis normalized such that thep-norm of the sub-tensor is lower than the value max norm",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What is repeat elements of a tensor?",
        "Y": "repeat_interleave",
        "Z": "repeat_interleave Repeat elements of a tensor.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What is the term for rolling the tensor along a given dimension?",
        "Y": "roll",
        "Z": "roll Roll the tensor along the given dimension(s).",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What roll the tensor along the given dimension(s)?",
        "Y": "roll",
        "Z": "roll Roll the tensor along the given dimension(s).",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What would be preserved if the corresponding values invalueswere inserted before the indices?",
        "Y": "the order of the correspondinginnermostdimension withinsorted_sequence",
        "Z": "searchsorted Find the indices from theinnermostdimension ofsorted_sequencesuch that, if the corresponding values invalueswere inserted before the indices, the order of the correspondinginnermostdimension withinsorted_sequencewould be preserved.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What returns a contraction of a and b over multiple dimensions?",
        "Y": "tensordot",
        "Z": "tensordot Returns a contraction of a and b over multiple dimensions.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "tensordot Returns a contraction of what?",
        "Y": "a and b  over multiple dimensions",
        "Z": "tensordot Returns a contraction of a and b over multiple dimensions.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What returns the lower triangular part of the matrix ?",
        "Y": "tril",
        "Z": "tril Returns the lower triangular part of the matrix  (2-D tensor) or batch of matricesinput, the other elements of the result tensoroutare set to 0.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "tril Returns the lower what part of the matrix ?",
        "Y": "triangular",
        "Z": "tril Returns the lower triangular part of the matrix  (2-D tensor) or batch of matricesinput, the other elements of the result tensoroutare set to 0.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What returns the indices of the lower triangular part of arow-by-colmatrix  in a 2-by-N",
        "Y": "tril_indices",
        "Z": "tril_indices Returns the indices of the lower triangular part of arow-by-colmatrix  in a 2-by-N Tensor, where the first row contains row coordinates of all indices and the second row contains column coordinates.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What does the second row of tril_indices contain?",
        "Y": "column coordinates",
        "Z": "tril_indices Returns the indices of the lower triangular part of arow-by-colmatrix  in a 2-by-N Tensor, where the first row contains row coordinates of all indices and the second row contains column coordinates.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "tril_indices Returns the indices of the lower triangular part of what?",
        "Y": "arow-by-colmatrix",
        "Z": "tril_indices Returns the indices of the lower triangular part of arow-by-colmatrix  in a 2-by-N Tensor, where the first row contains row coordinates of all indices and the second row contains column coordinates.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What returns the other elements of the result?",
        "Y": "tensoroutare",
        "Z": "triu Returns the upper triangular part of a matrix  (2-D tensor) or batch of matricesinput, the other elements of the result tensoroutare set to 0.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "How many tensors does triu return?",
        "Y": "2",
        "Z": "triu Returns the upper triangular part of a matrix  (2-D tensor) or batch of matricesinput, the other elements of the result tensoroutare set to 0.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What returns the upper triangular part of a matrix ?",
        "Y": "triu",
        "Z": "triu Returns the upper triangular part of a matrix  (2-D tensor) or batch of matricesinput, the other elements of the result tensoroutare set to 0.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What returns the upper triangular part of a matrix  or batch of matrices?",
        "Y": "triu",
        "Z": "triu Returns the upper triangular part of a matrix  (2-D tensor) or batch of matricesinput, the other elements of the result tensoroutare set to 0.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What returns the indices of the upper triangular part of arowbycolmatrix  in a 2-by-N Tens",
        "Y": "triu_indices",
        "Z": "triu_indices Returns the indices of the upper triangular part of arowbycolmatrix  in a 2-by-N Tensor, where the first row contains row coordinates of all indices and the second row contains column coordinates.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What does the first row of triu_indices contain?",
        "Y": "row coordinates",
        "Z": "triu_indices Returns the indices of the upper triangular part of arowbycolmatrix  in a 2-by-N Tensor, where the first row contains row coordinates of all indices and the second row contains column coordinates.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What type of matrix  does vander generate?",
        "Y": "Vandermonde",
        "Z": "vander Generates a Vandermonde matrix .",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What generates a Vandermonde matrix ?",
        "Y": "vander",
        "Z": "vander Generates a Vandermonde matrix .",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What returns a view of iinput as a real tensor?",
        "Y": "view_as_real",
        "Z": "view_as_real Returns a view of iinput as a real tensor.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What real value does view_as_real return?",
        "Y": "a real tensor",
        "Z": "view_as_real Returns a view of iinput as a real tensor.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "Returns a view of iinput as a complex what?",
        "Y": "tensor",
        "Z": "view_as_complex Returns a view of iinput as a complex tensor.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What returns a view of iinput as a complex tensor?",
        "Y": "view_as_complex",
        "Z": "view_as_complex Returns a view of iinput as a complex tensor.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What type of complex does view_as_complex return?",
        "Y": "tensor",
        "Z": "view_as_complex Returns a view of iinput as a complex tensor.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What performs a batch matrix -matrix  product of matrices stored in batch1 and batch2?",
        "Y": "addbmm",
        "Z": "addbmm Performs a batch matrix -matrix  product of matrices stored in batch1 and batch2, with a reduced add step (all matrix  multiplications get accumulated along the first dimension).",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What performs a batch matrix -matrix  product of matrices stored in batch1 and batch2 with a reduced add",
        "Y": "addbmm",
        "Z": "addbmm Performs a batch matrix -matrix  product of matrices stored in batch1 and batch2, with a reduced add step (all matrix  multiplications get accumulated along the first dimension).",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What does addmm perform on the matricesmat1 and mat2?",
        "Y": "matrix  multiplication",
        "Z": "addmm Performs a matrix  multiplication of the matricesmat1 and mat2.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What performs a matrix  multiplication of the matricesmat1 and mat2?",
        "Y": "addmm",
        "Z": "addmm Performs a matrix  multiplication of the matricesmat1 and mat2.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "addmm performs what of the matricesmat1 and mat2?",
        "Y": "matrix  multiplication",
        "Z": "addmm Performs a matrix  multiplication of the matricesmat1 and mat2.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "addmv performs what of the matrix  mat and the vector vec?",
        "Y": "matrix -vector product",
        "Z": "addmv Performs a matrix -vector product of the matrix  mat and the vector vec.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What performs a matrix -vector product of the matrix  mat and the vector vec?",
        "Y": "addmv",
        "Z": "addmv Performs a matrix -vector product of the matrix  mat and the vector vec.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "addmv Performs a matrix -vector product of what?",
        "Y": "matrix  mat and",
        "Z": "addmv Performs a matrix -vector product of the matrix  mat and the vector vec.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What performs the outer-product of vectorsvec1 andvec2and adds it to the matrix input?",
        "Y": "addr",
        "Z": "addr Performs the outer-product of vectorsvec1 andvec2and adds it to the matrix input.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What performs a batch matrix -matrix  product of matrices in batch1 and batch2?",
        "Y": "baddbmm",
        "Z": "baddbmm Performs a batch matrix -matrix  product of matrices in batch1 and batch2.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What performs a batch matrix -matrix  product of matrices stored in input and mat2?",
        "Y": "bmm",
        "Z": "bmm Performs a batch matrix -matrix  product of matrices stored in input and mat2.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "bmm Performs a batch matrix -matrix  product of what?",
        "Y": "matrices stored in input and mat2",
        "Z": "bmm Performs a batch matrix -matrix  product of matrices stored in input and mat2.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What returns the matrix  product of the NNN2-D tensors?",
        "Y": "chain_matmul",
        "Z": "chain_matmul Returns the matrix  product of the NNN2-D tensors.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What computes the Cholesky decomposition of a symmetric positive-definite matrix  AAA orfor batches of symmetric positive-definite",
        "Y": "cholesky",
        "Z": "cholesky Computes the Cholesky decomposition of a symmetric positive-definite matrix  AAA orfor batches of symmetric positive-definite matrices.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What computes the inverse of a symmetric positive-definite matrix ?",
        "Y": "cholesky_inverse",
        "Z": "cholesky_inverse Computes the inverse of a symmetric positive-definite matirx AAA using its Cholesky factoruuu: returns matric inv.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What computes the inverse of a symmetric positive-definite matirx AAA using its Cholesky factoruuu?",
        "Y": "cholesky_inverse",
        "Z": "cholesky_inverse Computes the inverse of a symmetric positive-definite matirx AAA using its Cholesky factoruuu: returns matric inv.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What does cholesky_inverse return?",
        "Y": "matric inv",
        "Z": "cholesky_inverse Computes the inverse of a symmetric positive-definite matirx AAA using its Cholesky factoruuu: returns matric inv.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "cholesky_solve Solves a linear system of equations with a positive semidefinite matrix  to be inverted given what?",
        "Y": "Cholesky factor matrix uuu",
        "Z": "cholesky_solve Solves a linear system of equations with a positive semidefinite matrix  to be inverted given its Cholesky factor matrix uuu.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What is a linear system of equations with a positive semidefinite matrix  called?",
        "Y": "cholesky_solve Solves",
        "Z": "cholesky_solve Solves a linear system of equations with a positive semidefinite matrix  to be inverted given its Cholesky factor matrix uuu.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What Solves a linear system of equations with a positive semidefinite matrix  to be inverted given its Cholesky factor matrix uu",
        "Y": "cholesky_solve",
        "Z": "cholesky_solve Solves a linear system of equations with a positive semidefinite matrix  to be inverted given its Cholesky factor matrix uuu.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What does dot compute of two 1D tensors?",
        "Y": "dot product",
        "Z": "dot Computes the dot product of two 1D tensors.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What computes the dot product of two 1D tensors?",
        "Y": "dot",
        "Z": "dot Computes the dot product of two 1D tensors.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "How many 1D tensors does dot Compute?",
        "Y": "two",
        "Z": "dot Computes the dot product of two 1D tensors.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "eig Computes what of a real square matrix ?",
        "Y": "eigenvalues and eigenvectors",
        "Z": "eig Computes the eigenvalues and eigenvectors of a real square matrix .",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What Computes the eigenvalues and eigenvectors of a real square matrix ?",
        "Y": "eig",
        "Z": "eig Computes the eigenvalues and eigenvectors of a real square matrix .",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What is function that calls geqrf?",
        "Y": "LAPACK",
        "Z": "geqrf This is a low-level function for calling LAPACK\u2019s geqrf directly.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What is geqrf a low-level function for?",
        "Y": "calling LAPACK\u2019s geqrf directly",
        "Z": "geqrf This is a low-level function for calling LAPACK\u2019s geqrf directly.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What is geqrf?",
        "Y": "low-level function",
        "Z": "geqrf This is a low-level function for calling LAPACK\u2019s geqrf directly.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What is ger?",
        "Y": "Alias of torch.outer",
        "Z": "ger Alias of torch.outer().",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What does ger Alias do?",
        "Y": "of torch.outer()",
        "Z": "ger Alias of torch.outer().",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "inner Computes the dot product for what?",
        "Y": "1D tensors",
        "Z": "inner Computes the dot product for 1D tensors.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What is the inverse of what?",
        "Y": "Alias for torch.linalg.inv",
        "Z": "inverse Alias for torch.linalg.inv()",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What is the inverse ?",
        "Y": "Alias for torch.linalg.inv()",
        "Z": "inverse Alias for torch.linalg.inv()",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What calculates the log determinant of a square matrix  or batches of square matrices?",
        "Y": "logdet",
        "Z": "logdet Calculates log determinant of a square matrix  or batches of square matrices.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What does logdet calculate?",
        "Y": "log determinant",
        "Z": "logdet Calculates log determinant of a square matrix  or batches of square matrices.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What does slogdet stand for?",
        "Y": "Alias for torch.linalg.slogdet",
        "Z": "slogdet Alias for torch.linalg.slogdet()",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What is slogdet Alias?",
        "Y": "for torch.linalg.slogdet",
        "Z": "slogdet Alias for torch.linalg.slogdet()",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What computes the solution to the least squares and least norm problems for a full rank matirx AAA ?",
        "Y": "lstsq",
        "Z": "lstsq Computes the solution to the least squares and least norm problems for a full rank matirx AAA of size(m\u00d7n)(m \\times n)(m\u00d7n)and a matrix BBBof size(m\u00d7k)(m \\times k)(m\u00d7k).",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What computes the solution to the least squares and least norm problems for a full rank matirx AAA of size(mn)(m",
        "Y": "lstsq",
        "Z": "lstsq Computes the solution to the least squares and least norm problems for a full rank matirx AAA of size(m\u00d7n)(m \\times n)(m\u00d7n)and a matrix BBBof size(m\u00d7k)(m \\times k)(m\u00d7k).",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "lu Computes what of a matrix  or batches of matricesA?",
        "Y": "LU factorization",
        "Z": "lu Computes the LU factorization of a matrix  or batches of matricesA.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "lu Computes what factorization of a matrix  or batches of matricesA?",
        "Y": "LU",
        "Z": "lu Computes the LU factorization of a matrix  or batches of matricesA.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What does lu_solve return?",
        "Y": "LU solve",
        "Z": "lu_solve Returns the LU solve of the linear systemAx=bAx = bAx=busing the partially pivoted LU factorization of A fromtorch.lu().",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What returns the linear systemAx=bAx = bAx=busing the partially pivoted LU factorization of A fromt",
        "Y": "LU solve",
        "Z": "lu_solve Returns the LU solve of the linear systemAx=bAx = bAx=busing the partially pivoted LU factorization of A fromtorch.lu().",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What returns the LU solve of the linear systemAx=bAx = bAx=busing the partially pivoted LU factor",
        "Y": "lu_solve",
        "Z": "lu_solve Returns the LU solve of the linear systemAx=bAx = bAx=busing the partially pivoted LU factorization of A fromtorch.lu().",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "lu_unpack Unpacks the data and pivots from what of a tensor into tensorsLand",
        "Y": "LU factorization",
        "Z": "lu_unpack Unpacks the data and pivots from a LU factorization of a tensor into tensorsLandUand a permutation tensorPsuch thatLU_data,LU_pivots=(P@L@U).lu().",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What does lu_unpack pivot from a LU factorization of a tensor into a permutation ten",
        "Y": "LU_pivots",
        "Z": "lu_unpack Unpacks the data and pivots from a LU factorization of a tensor into tensorsLandUand a permutation tensorPsuch thatLU_data,LU_pivots=(P@L@U).lu().",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What is the product of two tensors?",
        "Y": "matmul matrix",
        "Z": "matmul matrix  product of two tensors.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What is the matmul matrix  product of?",
        "Y": "two tensors",
        "Z": "matmul matrix  product of two tensors.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What is the matrix  product of two tensors?",
        "Y": "matmul",
        "Z": "matmul matrix  product of two tensors.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What does matrix _power stand for?",
        "Y": "Alias for torch.linalg.matrix _power",
        "Z": "matrix _power Alias for torch.linalg.matrix _power()",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What is the Alias for torch.linalg.matrix _power()?",
        "Y": "matrix _power",
        "Z": "matrix _power Alias for torch.linalg.matrix _power()",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What computes the matrix  exponential of a square matrix  or of each square matrix  in a batch?",
        "Y": "matrix _exp",
        "Z": "matrix _exp Computes the matrix  exponential of a square matrix  or of each square matrix  in a batch.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What does matrix _exp compute?",
        "Y": "matrix  exponential",
        "Z": "matrix _exp Computes the matrix  exponential of a square matrix  or of each square matrix  in a batch.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What performs a matrix  multiplication of the matricesinput and mat2?",
        "Y": "mm",
        "Z": "mm Performs a matrix  multiplication of the matricesinput and mat2.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What does mm perform a matrix  multiplication of?",
        "Y": "matricesinput and mat2.",
        "Z": "mm Performs a matrix  multiplication of the matricesinput and mat2.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What does mv perform of the matrix input and the vector vec?",
        "Y": "matrix -vector product",
        "Z": "mv Performs a matrix -vector product of the matrix input and the vector vec.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "mv Performs a matrix -vector product of the matrix input and what?",
        "Y": "vector vec",
        "Z": "mv Performs a matrix -vector product of the matrix input and the vector vec.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "mv Performs what product of the matrix input and the vector vec?",
        "Y": "matrix -vector",
        "Z": "mv Performs a matrix -vector product of the matrix input and the vector vec.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What is Alias for torch.linalg.householder_product()?",
        "Y": "orgqr",
        "Z": "orgqr Alias for torch.linalg.householder_product().",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What is orgqr Alias?",
        "Y": "for torch.linalg.householder_product()",
        "Z": "orgqr Alias for torch.linalg.householder_product().",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What computes the matrix -matrix  multiplication of a product of Householder matrices with a general matrix ?",
        "Y": "ormqr",
        "Z": "ormqr Computes the matrix -matrix  multiplication of a product of Householder matrices with a general matrix .",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What is the multiplication of a product of Householder matrices with a general matrix ?",
        "Y": "matrix -matrix",
        "Z": "ormqr Computes the matrix -matrix  multiplication of a product of Householder matrices with a general matrix .",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What is the outer product of input andvec2?",
        "Y": "Outer product of input andvec2",
        "Z": "outer Outer product of input andvec2.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What is file that contains the name Alias for torch.linalg.pinv?",
        "Y": "Alias for torch.linalg.pinv",
        "Z": "pinverse Alias for torch.linalg.pinv()",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What is Alias for torch.linalg.pinv()?",
        "Y": "pinverse",
        "Z": "pinverse Alias for torch.linalg.pinv()",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What computes the QR decomposition of a matrix  or a batch of matricesinput?",
        "Y": "qr",
        "Z": "qr Computes the QR decomposition of a matrix  or a batch of matricesinput, and returns a named tuple (Q, R) of tensors such thatinput=QR\\text{input} = Q Rinput=QRwithQQQbeing an orthogonal matrix  or batch of orthogonal matrices andRRRbeing an upper triangular matrix  or batch of upper triangular matrices.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What does qr return of tensors?",
        "Y": "a named tuple",
        "Z": "qr Computes the QR decomposition of a matrix  or a batch of matricesinput, and returns a named tuple (Q, R) of tensors such thatinput=QR\\text{input} = Q Rinput=QRwithQQQbeing an orthogonal matrix  or batch of orthogonal matrices andRRRbeing an upper triangular matrix  or batch of upper triangular matrices.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What Computes the QR decomposition of a matrix  or a batch of matricesinput?",
        "Y": "qr",
        "Z": "qr Computes the QR decomposition of a matrix  or a batch of matricesinput, and returns a named tuple (Q, R) of tensors such thatinput=QR\\text{input} = Q Rinput=QRwithQQQbeing an orthogonal matrix  or batch of orthogonal matrices andRRRbeing an upper triangular matrix  or batch of upper triangular matrices.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What is the factorization of A?",
        "Y": "LU",
        "Z": "solve This function returns the solution to the system of linear equations represented byAX=BAX = BAX=Band the LU factorization of A, in order as a named tuplesolution, LU.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What does solve This function return the solution to?",
        "Y": "the system of linear equations represented byAX=BAX = BAX=Band the LU factorization of A",
        "Z": "solve This function returns the solution to the system of linear equations represented byAX=BAX = BAX=Band the LU factorization of A, in order as a named tuplesolution, LU.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What computes the singular value decomposition of either a matrix  or batch of matricesinput?",
        "Y": "svd",
        "Z": "svd Computes the singular value decomposition of either a matrix  or batch of matricesinput.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What returns the singular value decomposition(U,S,V)of a matrix , batches of matrices, or a spar",
        "Y": "svd_lowrank",
        "Z": "svd_lowrank Return the singular value decomposition(U,S,V)of a matrix , batches of matrices, or a sparse matirx AAA such thatA\u2248Udiag(S)VTA \\approx U diag(S) V^TA\u2248Udiag(S)VT.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What performs linear Principal Component Analysis on a low-rank matrix ?",
        "Y": "pca_lowrank",
        "Z": "pca_lowrank Performs linear Principal Component Analysis (PCA) on a low-rank matrix , batches of such matrices, or sparse matrix .",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What does symeig return eigenvalues and eigenvectors of a real symmetric or complex Hermit",
        "Y": "a named tuple",
        "Z": "symeig This function returns eigenvalues and eigenvectors of a real symmetric or complex Hermitian matrix inputor a batch thereof, represented by a named tuple (eigenvalues, eigenvectors).",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "symeig returns eigenvalues and eigenvectors of what kind of real Hermitian matrix input",
        "Y": "symmetric or complex",
        "Z": "symeig This function returns eigenvalues and eigenvectors of a real symmetric or complex Hermitian matrix inputor a batch thereof, represented by a named tuple (eigenvalues, eigenvectors).",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What function returns eigenvalues and eigenvectors of a real symmetric or complex Hermitian matrix inputor",
        "Y": "symeig",
        "Z": "symeig This function returns eigenvalues and eigenvectors of a real symmetric or complex Hermitian matrix inputor a batch thereof, represented by a named tuple (eigenvalues, eigenvectors).",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "symeig returns eigenvalues and eigenvectors of a real symmetric or complex Hermitian",
        "Y": "a batch",
        "Z": "symeig This function returns eigenvalues and eigenvectors of a real symmetric or complex Hermitian matrix inputor a batch thereof, represented by a named tuple (eigenvalues, eigenvectors).",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What does a named tuple return?",
        "Y": "eigenvalues, eigenvectors",
        "Z": "symeig This function returns eigenvalues and eigenvectors of a real symmetric or complex Hermitian matrix inputor a batch thereof, represented by a named tuple (eigenvalues, eigenvectors).",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What does lobpcg find in a symmetric positive defined generalized eigenvalue problem?",
        "Y": "k largest (or smallest) eigenvalues",
        "Z": "lobpcg Find the k largest (or smallest) eigenvalues and the corresponding eigenvectors of a symmetric positive defined generalized eigenvalue problem using matrix -free LOBPCG methods.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What type of LOBPCG methods are used to find the k largest (or smallest) eigenvalues?",
        "Y": "matrix -free",
        "Z": "lobpcg Find the k largest (or smallest) eigenvalues and the corresponding eigenvectors of a symmetric positive defined generalized eigenvalue problem using matrix -free LOBPCG methods.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "lobpcg Find the k largest (or smallest) what?",
        "Y": "eigenvalues",
        "Z": "lobpcg Find the k largest (or smallest) eigenvalues and the corresponding eigenvectors of a symmetric positive defined generalized eigenvalue problem using matrix -free LOBPCG methods.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What rule is used to Estimateydxint y,dxydxalongdim?",
        "Y": "trapezoid rule",
        "Z": "trapz Estimate\u222bydx\\int y\\,dx\u222bydxalongdim, using the trapezoid rule.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What Solves a system of equations with a triangular coefficient matirx AAA ?",
        "Y": "triangular_solve",
        "Z": "triangular_solve Solves a system of equations with a triangular coefficient matirx AAA and multiple right-hand sidesbbb.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What _solve Solves a system of equations with a triangular coefficient matirx AAA and multiple right-hand sidesb",
        "Y": "triangular",
        "Z": "triangular_solve Solves a system of equations with a triangular coefficient matirx AAA and multiple right-hand sidesbbb.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What does vdot compute of two 1D tensors?",
        "Y": "dot product",
        "Z": "vdot Computes the dot product of two 1D tensors.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What Computes the dot product of two 1D tensors?",
        "Y": "vdot",
        "Z": "vdot Computes the dot product of two 1D tensors.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What does compiled_with_cxx11_abi return if PyTorch was built with?",
        "Y": "_GLIBCXX_USE_CXX11_ABI=1",
        "Z": "compiled_with_cxx11_abi Returns whether PyTorch was built with _GLIBCXX_USE_CXX11_ABI=1",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What returns The torch.dtype that would result from performing an arithmetic operation on the provided input tensors?",
        "Y": "result_type",
        "Z": "result_type Returns The torch.dtypethat would result from performing an arithmetic operation on the provided input tensors.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What determines if a type conversion is allowed under PyTorch casting rules?",
        "Y": "can_cast",
        "Z": "can_cast Determines if a type conversion is allowed under PyTorch casting rules described in the type promotiondocumentation.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What document describes PyTorch casting rules?",
        "Y": "type promotiondocumentation",
        "Z": "can_cast Determines if a type conversion is allowed under PyTorch casting rules described in the type promotiondocumentation.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What kind of type does The torch.dtype have?",
        "Y": "smallest size and scalar kind",
        "Z": "promote_types Returns The torch.dtypewith the smallest size and scalar kind that is not smaller nor of lower kind than eithertype1ortype2.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "The torch.dtype returns the smallest size and scalar kind that is not smaller nor lower than what?",
        "Y": "eithertype1ortype2",
        "Z": "promote_types Returns The torch.dtypewith the smallest size and scalar kind that is not smaller nor of lower kind than eithertype1ortype2.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What returns true if the global deterministic flag is turned on?",
        "Y": "are_deterministic_algorithms_enabled",
        "Z": "are_deterministic_algorithms_enabled Returns True if the global deterministic flag is turned on.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "How many times per process may PyTorch warnings appear?",
        "Y": "once",
        "Z": "set_warn_always When this flag is False (default) then some PyTorch warnings may only appear once per process.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "If set_warn_always is what, then some PyTorch warnings may only appear once per process?",
        "Y": "False",
        "Z": "set_warn_always When this flag is False (default) then some PyTorch warnings may only appear once per process.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "When set_warn_always is False, some PyTorch warnings may only appear how many times per process?",
        "Y": "once",
        "Z": "set_warn_always When this flag is False (default) then some PyTorch warnings may only appear once per process.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "If set_warn_always is set to what flag (default) then some PyTorch warnings may only appear once per process?",
        "Y": "False",
        "Z": "set_warn_always When this flag is False (default) then some PyTorch warnings may only appear once per process.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What happens if the global warn_always flag is turned on?",
        "Y": "Returns True",
        "Z": "is_warn_always_enabled Returns True if the global warn_always flag is turned on.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "What returns true if the global warn_always flag is turned on?",
        "Y": "is_warn_always_enabled",
        "Z": "is_warn_always_enabled Returns True if the global warn_always flag is turned on.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "_assert A wrapper around Python's assert which is what?",
        "Y": "symbolically traceable",
        "Z": "_assert A wrapper around Python\u2019s assert which is symbolically traceable.",
        "source": "https://pytorch.org/docs/stable/torch.html#reduction-ops"
    },
    {
        "X": "conv1d Applies what type of convolution over an input signal composed of several input planes?",
        "Y": "1D",
        "Z": "conv1d Applies a 1D convolution over an input signal composed of several input planes.",
        "source": "https://pytorch.org/docs/stable/nn.functional.html"
    },
    {
        "X": "What type of convolution does conv2d apply?",
        "Y": "2D",
        "Z": "conv2d Applies a 2D convolution over an input image composed of several input planes.",
        "source": "https://pytorch.org/docs/stable/nn.functional.html"
    },
    {
        "X": "What Applies a 2D convolution over an input image composed of several input planes?",
        "Y": "conv2d",
        "Z": "conv2d Applies a 2D convolution over an input image composed of several input planes.",
        "source": "https://pytorch.org/docs/stable/nn.functional.html"
    },
    {
        "X": "What type of convolution does conv3d apply?",
        "Y": "3D",
        "Z": "conv3d Applies a 3D convolution over an input image composed of several input planes.",
        "source": "https://pytorch.org/docs/stable/nn.functional.html"
    },
    {
        "X": "What applies a 3D convolution over an input image composed of several input planes?",
        "Y": "conv3d",
        "Z": "conv3d Applies a 3D convolution over an input image composed of several input planes.",
        "source": "https://pytorch.org/docs/stable/nn.functional.html"
    },
    {
        "X": "What is a 1D transposed convolution operator?",
        "Y": "deconvolution",
        "Z": "conv_transpose1d Applies a 1D transposed convolution operator over an input signal composed of several input planes, sometimes also called \u201cdeconvolution\u201d.",
        "source": "https://pytorch.org/docs/stable/nn.functional.html"
    },
    {
        "X": "Conv_transpose1d Applies a transposed convolution operator over an input signal composed of several input planes?",
        "Y": "1D",
        "Z": "conv_transpose1d Applies a 1D transposed convolution operator over an input signal composed of several input planes, sometimes also called \u201cdeconvolution\u201d.",
        "source": "https://pytorch.org/docs/stable/nn.functional.html"
    },
    {
        "X": "What is conv_transpose1d?",
        "Y": "deconvolution",
        "Z": "conv_transpose1d Applies a 1D transposed convolution operator over an input signal composed of several input planes, sometimes also called \u201cdeconvolution\u201d.",
        "source": "https://pytorch.org/docs/stable/nn.functional.html"
    },
    {
        "X": "What applies a 1D transposed convolution operator over an input signal composed of several input planes?",
        "Y": "conv_transpose1d",
        "Z": "conv_transpose1d Applies a 1D transposed convolution operator over an input signal composed of several input planes, sometimes also called \u201cdeconvolution\u201d.",
        "source": "https://pytorch.org/docs/stable/nn.functional.html"
    },
    {
        "X": "What is conv_transpospos2d?",
        "Y": "deconvolution",
        "Z": "conv_transpose2d Applies a 2D transposed convolution operator over an input image composed of several input planes, sometimes also called \u201cdeconvolution\u201d.",
        "source": "https://pytorch.org/docs/stable/nn.functional.html"
    },
    {
        "X": "What is conv_transpose2d?",
        "Y": "deconvolution",
        "Z": "conv_transpose2d Applies a 2D transposed convolution operator over an input image composed of several input planes, sometimes also called \u201cdeconvolution\u201d.",
        "source": "https://pytorch.org/docs/stable/nn.functional.html"
    },
    {
        "X": "What is conv_transpospos3d?",
        "Y": "deconvolution",
        "Z": "conv_transpose3d Applies a 3D transposed convolution operator over an input image composed of several input planes, sometimes also called \u201cdeconvolution\u201d",
        "source": "https://pytorch.org/docs/stable/nn.functional.html"
    },
    {
        "X": "What type of transposed convolution operator does conv_transpose3d use?",
        "Y": "3D",
        "Z": "conv_transpose3d Applies a 3D transposed convolution operator over an input image composed of several input planes, sometimes also called \u201cdeconvolution\u201d",
        "source": "https://pytorch.org/docs/stable/nn.functional.html"
    },
    {
        "X": "What is conv_transpose3d?",
        "Y": "deconvolution",
        "Z": "conv_transpose3d Applies a 3D transposed convolution operator over an input image composed of several input planes, sometimes also called \u201cdeconvolution\u201d",
        "source": "https://pytorch.org/docs/stable/nn.functional.html"
    },
    {
        "X": "What type of input tensor does unfold extract local blocks from?",
        "Y": "batched input tensor",
        "Z": "unfold Extracts sliding local blocks from a batched input tensor.",
        "source": "https://pytorch.org/docs/stable/nn.functional.html"
    },
    {
        "X": "What does unfold extract from a batched input tensor?",
        "Y": "sliding local blocks",
        "Z": "unfold Extracts sliding local blocks from a batched input tensor.",
        "source": "https://pytorch.org/docs/stable/nn.functional.html"
    },
    {
        "X": "What do unfold Extracts sliding from a batched input tensor?",
        "Y": "local blocks",
        "Z": "unfold Extracts sliding local blocks from a batched input tensor.",
        "source": "https://pytorch.org/docs/stable/nn.functional.html"
    },
    {
        "X": "fold Combines an array of sliding local blocks into a large containing what?",
        "Y": "tensor",
        "Z": "fold Combines an array of sliding local blocks into a large containing tensor.",
        "source": "https://pytorch.org/docs/stable/nn.functional.html"
    },
    {
        "X": "avg_pool1d Applies what kind of pooling over an input signal composed of several input planes?",
        "Y": "1D",
        "Z": "avg_pool1d Applies a 1D average pooling over an input signal composed of several input planes.",
        "source": "https://pytorch.org/docs/stable/nn.functional.html"
    },
    {
        "X": "What Applies a 1D average pooling over an input signal composed of several input planes?",
        "Y": "nn.AvgPool1d",
        "Z": "nn.AvgPool1d Applies a 1D average pooling over an input signal composed of several input planes.",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "What Applies 2D average-pooling operation inkHkWkH times kWkHkWregions by step",
        "Y": "avg_pool2d",
        "Z": "avg_pool2d Applies 2D average-pooling operation inkH\u00d7kWkH \\times kWkH\u00d7kWregions by step sizesH\u00d7sWsH \\times sWsH\u00d7sWsteps.",
        "source": "https://pytorch.org/docs/stable/nn.functional.html"
    },
    {
        "X": "What Applies 3D average-pooling operation inkTkHkWkT times kH times",
        "Y": "avg_pool3d",
        "Z": "avg_pool3d Applies 3D average-pooling operation inkT\u00d7kH\u00d7kWkT \\times kH \\times kWkT\u00d7kH\u00d7kWregions by step sizesT\u00d7sH\u00d7sWsT \\times sH \\times sWsT\u00d7sH\u00d7sWsteps.",
        "source": "https://pytorch.org/docs/stable/nn.functional.html"
    },
    {
        "X": "How does avg_pool3d apply?",
        "Y": "3D",
        "Z": "avg_pool3d Applies 3D average-pooling operation inkT\u00d7kH\u00d7kWkT \\times kH \\times kWkT\u00d7kH\u00d7kWregions by step sizesT\u00d7sH\u00d7sWsT \\times sH \\times sWsT\u00d7sH\u00d7sWsteps.",
        "source": "https://pytorch.org/docs/stable/nn.functional.html"
    },
    {
        "X": "max_pool1d Applies a max pooling over an input signal composed of several input planes?",
        "Y": "1D",
        "Z": "max_pool1d Applies a 1D max pooling over an input signal composed of several input planes.",
        "source": "https://pytorch.org/docs/stable/nn.functional.html"
    },
    {
        "X": "max_pool1d Applies what over an input signal?",
        "Y": "a 1D max pooling",
        "Z": "max_pool1d Applies a 1D max pooling over an input signal composed of several input planes.",
        "source": "https://pytorch.org/docs/stable/nn.functional.html"
    },
    {
        "X": "max_pool3d Applies a what kind of max pooling over an input signal composed of several input planes?",
        "Y": "3D",
        "Z": "max_pool3d Applies a 3D max pooling over an input signal composed of several input planes.",
        "source": "https://pytorch.org/docs/stable/nn.functional.html"
    },
    {
        "X": "max_unpool1d Computes a partial what of MaxPool1d?",
        "Y": "inverse",
        "Z": "max_unpool1d Computes a partial inverse ofMaxPool1d.",
        "source": "https://pytorch.org/docs/stable/nn.functional.html"
    },
    {
        "X": "max_unpool2d Computes a partial what of MaxPool2d?",
        "Y": "inverse",
        "Z": "max_unpool2d Computes a partial inverse ofMaxPool2d.",
        "source": "https://pytorch.org/docs/stable/nn.functional.html"
    },
    {
        "X": "max_unpool3d Computes a partial what of MaxPool3d?",
        "Y": "inverse",
        "Z": "max_unpool3d Computes a partial inverse ofMaxPool3d.",
        "source": "https://pytorch.org/docs/stable/nn.functional.html"
    },
    {
        "X": "lp_pool1d Applies a power-average pooling over an input signal composed of several input planes?",
        "Y": "1D",
        "Z": "lp_pool1d Applies a 1D power-average pooling over an input signal composed of several input planes.",
        "source": "https://pytorch.org/docs/stable/nn.functional.html"
    },
    {
        "X": "How large is adaptive_max_pool1d?",
        "Y": "1D",
        "Z": "adaptive_max_pool1d Applies a 1D adaptive max pooling over an input signal composed of several input planes.",
        "source": "https://pytorch.org/docs/stable/nn.functional.html"
    },
    {
        "X": "What type of pooling does adaptive_max_pool2d apply?",
        "Y": "2D",
        "Z": "adaptive_max_pool2d Applies a 2D adaptive max pooling over an input signal composed of several input planes.",
        "source": "https://pytorch.org/docs/stable/nn.functional.html"
    },
    {
        "X": "What kind of pooling does adaptive_max_pool3d apply?",
        "Y": "3D",
        "Z": "adaptive_max_pool3d Applies a 3D adaptive max pooling over an input signal composed of several input planes.",
        "source": "https://pytorch.org/docs/stable/nn.functional.html"
    },
    {
        "X": "How large is adaptive_avg_pool1d?",
        "Y": "1D",
        "Z": "adaptive_avg_pool1d Applies a 1D adaptive average pooling over an input signal composed of several input planes.",
        "source": "https://pytorch.org/docs/stable/nn.functional.html"
    },
    {
        "X": "What type of pooling does adaptive_avg_pool2d apply?",
        "Y": "2D",
        "Z": "adaptive_avg_pool2d Applies a 2D adaptive average pooling over an input signal composed of several input planes.",
        "source": "https://pytorch.org/docs/stable/nn.functional.html"
    },
    {
        "X": "What kind of pooling does adaptive_avg_pool3d apply?",
        "Y": "3D",
        "Z": "adaptive_avg_pool3d Applies a 3D adaptive average pooling over an input signal composed of several input planes.",
        "source": "https://pytorch.org/docs/stable/nn.functional.html"
    },
    {
        "X": "What type of fractional max pooling does fractional_max_pool2d apply?",
        "Y": "2D",
        "Z": "fractional_max_pool2d Applies 2D fractional max pooling over an input signal composed of several input planes.",
        "source": "https://pytorch.org/docs/stable/nn.functional.html"
    },
    {
        "X": "What applies 2D fractional max pooling over an input signal composed of several input planes?",
        "Y": "fractional_max_pool2d",
        "Z": "fractional_max_pool2d Applies 2D fractional max pooling over an input signal composed of several input planes.",
        "source": "https://pytorch.org/docs/stable/nn.functional.html"
    },
    {
        "X": "What kind of fractional max pooling does fractional_max_pool3d apply?",
        "Y": "3D",
        "Z": "fractional_max_pool3d Applies 3D fractional max pooling over an input signal composed of several input planes.",
        "source": "https://pytorch.org/docs/stable/nn.functional.html"
    },
    {
        "X": "What applies 3D fractional max pooling over an input signal composed of several input planes?",
        "Y": "fractional_max_pool3d",
        "Z": "fractional_max_pool3d Applies 3D fractional max pooling over an input signal composed of several input planes.",
        "source": "https://pytorch.org/docs/stable/nn.functional.html"
    },
    {
        "X": "What is the threshold for each element of the input Tensor?",
        "Y": "Thresholds",
        "Z": "threshold Thresholds each element of the input Tensor.",
        "source": "https://pytorch.org/docs/stable/nn.functional.html"
    },
    {
        "X": "What is the term for each element of the input Tensor?",
        "Y": "nn.Threshold Thresholds",
        "Z": "nn.Threshold Thresholds each element of the input Tensor.",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "What is function that determines the threshold?",
        "Y": "threshold_ In-place version ofthreshold()",
        "Z": "threshold_ In-place version ofthreshold().",
        "source": "https://pytorch.org/docs/stable/nn.functional.html"
    },
    {
        "X": "What version of ofthreshold() is used?",
        "Y": "threshold_ In-place",
        "Z": "threshold_ In-place version ofthreshold().",
        "source": "https://pytorch.org/docs/stable/nn.functional.html"
    },
    {
        "X": "What does relu apply element-wise?",
        "Y": "rectified linear unit function",
        "Z": "relu Applies the rectified linear unit function element-wise.",
        "source": "https://pytorch.org/docs/stable/nn.functional.html"
    },
    {
        "X": "Relu Applies the rectified linear unit function what?",
        "Y": "element-wise",
        "Z": "relu Applies the rectified linear unit function element-wise.",
        "source": "https://pytorch.org/docs/stable/nn.functional.html"
    },
    {
        "X": "What does relu_ In-place version ofrelu() do?",
        "Y": "relu_ In-place version ofrelu()",
        "Z": "relu_ In-place version ofrelu().",
        "source": "https://pytorch.org/docs/stable/nn.functional.html"
    },
    {
        "X": "What Applies the HardTanh function element-wise?",
        "Y": "hardtanh",
        "Z": "hardtanh Applies the HardTanh function element-wise.",
        "source": "https://pytorch.org/docs/stable/nn.functional.html"
    },
    {
        "X": "What function does hardtanh apply element-wise?",
        "Y": "HardTanh",
        "Z": "hardtanh Applies the HardTanh function element-wise.",
        "source": "https://pytorch.org/docs/stable/nn.functional.html"
    },
    {
        "X": "How does hardtanh apply the HardTanh function?",
        "Y": "element-wise",
        "Z": "hardtanh Applies the HardTanh function element-wise.",
        "source": "https://pytorch.org/docs/stable/nn.functional.html"
    },
    {
        "X": "What does hardtanh do?",
        "Y": "hardtanh_ In-place version ofhardtanh()",
        "Z": "hardtanh_ In-place version ofhardtanh().",
        "source": "https://pytorch.org/docs/stable/nn.functional.html"
    },
    {
        "X": "What is In-place version of hardtanh()?",
        "Y": "hardtanh",
        "Z": "hardtanh_ In-place version ofhardtanh().",
        "source": "https://pytorch.org/docs/stable/nn.functional.html"
    },
    {
        "X": "How is the hardswish function described in the paper?",
        "Y": "element-wise",
        "Z": "nn.Hardswish Applies the hardswish function, element-wise, as described in the paper:",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "What applies the hardswish function, element-wise?",
        "Y": "hardswish",
        "Z": "hardswish Applies the hardswish function, element-wise, as described in the paper:",
        "source": "https://pytorch.org/docs/stable/nn.functional.html"
    },
    {
        "X": "What type of function does relu6 apply?",
        "Y": "element-wise function",
        "Z": "relu6 Applies the element-wise functionReLU6(x)=min\u2061(max\u2061(0,x),6)\\text{ReLU6}(x) = \\min(\\max(0,x), 6)ReLU6(x)=min(max(0,x),6).",
        "source": "https://pytorch.org/docs/stable/nn.functional.html"
    },
    {
        "X": "What Applies element-wise,ELU(x)=max(0,x)+min(0,(exp",
        "Y": "elu",
        "Z": "elu Applies element-wise,ELU(x)=max\u2061(0,x)+min\u2061(0,\u03b1\u2217(exp\u2061(x)\u22121))\\text{ELU}(x) = \\max(0,x) + \\min(0, \\alpha * (\\exp(x) - 1))ELU(x)=max(0,x)+min(0,\u03b1\u2217(exp(x)\u22121)).",
        "source": "https://pytorch.org/docs/stable/nn.functional.html"
    },
    {
        "X": "What is version of elu?",
        "Y": "In-place",
        "Z": "elu_ In-place version ofelu().",
        "source": "https://pytorch.org/docs/stable/nn.functional.html"
    },
    {
        "X": "What is version of ofelu()?",
        "Y": "elu_ In-place",
        "Z": "elu_ In-place version ofelu().",
        "source": "https://pytorch.org/docs/stable/nn.functional.html"
    },
    {
        "X": "What Applies element-wise?",
        "Y": "tanh",
        "Z": "tanh Applies element-wise,Tanh(x)=tanh\u2061(x)=exp\u2061(x)\u2212exp\u2061(\u2212x)exp\u2061(x)+exp\u2061(\u2212x)\\text{Tanh}(x) = \\tanh(x) = \\frac{\\exp(x) - \\exp(-x)}{\\exp(x) + \\exp(-x)}Tanh(x)=tanh(x)=exp(x)+exp(\u2212x)exp(x)\u2212exp(\u2212x)\u200b",
        "source": "https://pytorch.org/docs/stable/nn.functional.html"
    },
    {
        "X": "What Applies element-wise,SELU(x)=scale(max(0,x)+min(0,(",
        "Y": "selu",
        "Z": "selu Applies element-wise,SELU(x)=scale\u2217(max\u2061(0,x)+min\u2061(0,\u03b1\u2217(exp\u2061(x)\u22121)))\\text{SELU}(x) = scale * (\\max(0,x) + \\min(0, \\alpha * (\\exp(x) - 1)))SELU(x)=scale\u2217(max(0,x)+min(0,\u03b1\u2217(exp(x)\u22121))), with\u03b1=1.6732632423543772848170429916717\\alpha=1.6732632423543772848170429916717\u03b1=1.6732632423543772848170429916717andscale=1.0507009873554804934193349852946scale=1.0507009873554804934193349852946scale=1.0507009873554804934193349852946.",
        "source": "https://pytorch.org/docs/stable/nn.functional.html"
    },
    {
        "X": "What Applies element-wise,CELU(x)=max(0,x)+min(0,(exp",
        "Y": "celu",
        "Z": "celu Applies element-wise,CELU(x)=max\u2061(0,x)+min\u2061(0,\u03b1\u2217(exp\u2061(x/\u03b1)\u22121))\\text{CELU}(x) = \\max(0,x) + \\min(0, \\alpha * (\\exp(x/\\alpha) - 1))CELU(x)=max(0,x)+min(0,\u03b1\u2217(exp(x/\u03b1)\u22121)).",
        "source": "https://pytorch.org/docs/stable/nn.functional.html"
    },
    {
        "X": "What applies element-wise?",
        "Y": "leaky_relu",
        "Z": "leaky_relu Applies element-wise,LeakyReLU(x)=max\u2061(0,x)+negative_slope\u2217min\u2061(0,x)\\text{LeakyReLU}(x) = \\max(0, x) + \\text{negative\\_slope} * \\min(0, x)LeakyReLU(x)=max(0,x)+negative_slope\u2217min(0,x)",
        "source": "https://pytorch.org/docs/stable/nn.functional.html"
    },
    {
        "X": "What is In-place version of leaky_relu()?",
        "Y": "leaky_relu",
        "Z": "leaky_relu_ In-place version ofleaky_relu().",
        "source": "https://pytorch.org/docs/stable/nn.functional.html"
    },
    {
        "X": "What is in-place version of leaky_relu()?",
        "Y": "leaky_relu",
        "Z": "leaky_relu_ In-place version ofleaky_relu().",
        "source": "https://pytorch.org/docs/stable/nn.functional.html"
    },
    {
        "X": "What is the leaky_relu_ In-place version of?",
        "Y": "leaky_relu()",
        "Z": "leaky_relu_ In-place version ofleaky_relu().",
        "source": "https://pytorch.org/docs/stable/nn.functional.html"
    },
    {
        "X": "What Applies element-wise the functionPReLU(x)=max(0,x)+weightmin(0,x",
        "Y": "prelu",
        "Z": "prelu Applies element-wise the functionPReLU(x)=max\u2061(0,x)+weight\u2217min\u2061(0,x)\\text{PReLU}(x) = \\max(0,x) + \\text{weight} * \\min(0,x)PReLU(x)=max(0,x)+weight\u2217min(0,x)where weight is a learnable parameter.",
        "source": "https://pytorch.org/docs/stable/nn.functional.html"
    },
    {
        "X": "Prelu Applies element-wise the functionPReLU(x)=max(0,x)+ what?",
        "Y": "weight",
        "Z": "prelu Applies element-wise the functionPReLU(x)=max\u2061(0,x)+weight\u2217min\u2061(0,x)\\text{PReLU}(x) = \\max(0,x) + \\text{weight} * \\min(0,x)PReLU(x)=max(0,x)+weight\u2217min(0,x)where weight is a learnable parameter.",
        "source": "https://pytorch.org/docs/stable/nn.functional.html"
    },
    {
        "X": "What is rrelu?",
        "Y": "Randomized leaky ReLU",
        "Z": "rrelu Randomized leaky ReLU.",
        "source": "https://pytorch.org/docs/stable/nn.functional.html"
    },
    {
        "X": "What is rrelu_ In-place version ofrrelu()?",
        "Y": "rrelu_ In-place version ofrrelu()",
        "Z": "rrelu_ In-place version ofrrelu().",
        "source": "https://pytorch.org/docs/stable/nn.functional.html"
    },
    {
        "X": "What is version of ofrrelu()?",
        "Y": "rrelu_ In-place",
        "Z": "rrelu_ In-place version ofrrelu().",
        "source": "https://pytorch.org/docs/stable/nn.functional.html"
    },
    {
        "X": "What is glu?",
        "Y": "gated linear unit",
        "Z": "glu The gated linear unit.",
        "source": "https://pytorch.org/docs/stable/nn.functional.html"
    },
    {
        "X": "What type of unit is glu?",
        "Y": "gated linear unit",
        "Z": "glu The gated linear unit.",
        "source": "https://pytorch.org/docs/stable/nn.functional.html"
    },
    {
        "X": "What is the value of the functionGELU?",
        "Y": "x",
        "Z": "gelu Applies element-wise the functionGELU(x)=x\u2217\u03a6(x)\\text{GELU}(x) = x * \\Phi(x)GELU(x)=x\u2217\u03a6(x)",
        "source": "https://pytorch.org/docs/stable/nn.functional.html"
    },
    {
        "X": "What Applies element-wiseLogSigmoid(xi)=log(11+exp(xi))text",
        "Y": "logsigmoid",
        "Z": "logsigmoid Applies element-wiseLogSigmoid(xi)=log\u2061(11+exp\u2061(\u2212xi))\\text{LogSigmoid}(x_i) = \\log \\left(\\frac{1}{1 + \\exp(-x_i)}\\right)LogSigmoid(xi\u200b)=log(1+exp(\u2212xi\u200b)1\u200b)",
        "source": "https://pytorch.org/docs/stable/nn.functional.html"
    },
    {
        "X": "How does logsigmoid Applies?",
        "Y": "element-wise",
        "Z": "logsigmoid Applies element-wiseLogSigmoid(xi)=log\u2061(11+exp\u2061(\u2212xi))\\text{LogSigmoid}(x_i) = \\log \\left(\\frac{1}{1 + \\exp(-x_i)}\\right)LogSigmoid(xi\u200b)=log(1+exp(\u2212xi\u200b)1\u200b)",
        "source": "https://pytorch.org/docs/stable/nn.functional.html"
    },
    {
        "X": "What function does hardshrink apply?",
        "Y": "hard shrinkage",
        "Z": "hardshrink Applies the hard shrinkage function element-wise",
        "source": "https://pytorch.org/docs/stable/nn.functional.html"
    },
    {
        "X": "What applies the hard shrinkage function element-wise?",
        "Y": "hardshrink",
        "Z": "hardshrink Applies the hard shrinkage function element-wise",
        "source": "https://pytorch.org/docs/stable/nn.functional.html"
    },
    {
        "X": "hardshrink Applies what function element-wise?",
        "Y": "hard shrinkage",
        "Z": "hardshrink Applies the hard shrinkage function element-wise",
        "source": "https://pytorch.org/docs/stable/nn.functional.html"
    },
    {
        "X": "What is tanhshrink(x)=xTanh(x)textTanhshrink",
        "Y": "x",
        "Z": "tanhshrink Applies element-wise,Tanhshrink(x)=x\u2212Tanh(x)\\text{Tanhshrink}(x) = x - \\text{Tanh}(x)Tanhshrink(x)=x\u2212Tanh(x)",
        "source": "https://pytorch.org/docs/stable/nn.functional.html"
    },
    {
        "X": "What is the element-wise value of tanhshrink?",
        "Y": "x",
        "Z": "tanhshrink Applies element-wise,Tanhshrink(x)=x\u2212Tanh(x)\\text{Tanhshrink}(x) = x - \\text{Tanh}(x)Tanhshrink(x)=x\u2212Tanh(x)",
        "source": "https://pytorch.org/docs/stable/nn.functional.html"
    },
    {
        "X": "What does the functionSoftSign(x)=x1+xtextSoftSign(x) = frac",
        "Y": "softsign",
        "Z": "softsign Applies element-wise, the functionSoftSign(x)=x1+\u2223x\u2223\\text{SoftSign}(x) = \\frac{x}{1 + |x|}SoftSign(x)=1+\u2223x\u2223x\u200b",
        "source": "https://pytorch.org/docs/stable/nn.functional.html"
    },
    {
        "X": "What Applies element-wise, the functionSoftplus(x)=1log(1+exp(x))",
        "Y": "softplus",
        "Z": "softplus Applies element-wise, the functionSoftplus(x)=1\u03b2\u2217log\u2061(1+exp\u2061(\u03b2\u2217x))\\text{Softplus}(x) = \\frac{1}{\\beta} * \\log(1 + \\exp(\\beta * x))Softplus(x)=\u03b21\u200b\u2217log(1+exp(\u03b2\u2217x)).",
        "source": "https://pytorch.org/docs/stable/nn.functional.html"
    },
    {
        "X": "What does softmin Apply?",
        "Y": "softmin function",
        "Z": "softmin Applies a softmin function.",
        "source": "https://pytorch.org/docs/stable/nn.functional.html"
    },
    {
        "X": "What Applies a softmin function?",
        "Y": "softmin",
        "Z": "softmin Applies a softmin function.",
        "source": "https://pytorch.org/docs/stable/nn.functional.html"
    },
    {
        "X": "What does softmax Apply?",
        "Y": "softmax function",
        "Z": "softmax Applies a softmax function.",
        "source": "https://pytorch.org/docs/stable/nn.functional.html"
    },
    {
        "X": "What function does softshrink apply?",
        "Y": "soft shrinkage",
        "Z": "softshrink Applies the soft shrinkage function element wise",
        "source": "https://pytorch.org/docs/stable/nn.functional.html"
    },
    {
        "X": "What applies the soft shrinkage function element wise?",
        "Y": "softshrink",
        "Z": "softshrink Applies the soft shrinkage function element wise",
        "source": "https://pytorch.org/docs/stable/nn.functional.html"
    },
    {
        "X": "What is a sample of the Gumbel-Softmax distribution?",
        "Y": "gumbel_softmax Samples",
        "Z": "gumbel_softmax Samples from the Gumbel-Softmax distribution (Link 1Link 2) and optionally discretizes.",
        "source": "https://pytorch.org/docs/stable/nn.functional.html"
    },
    {
        "X": "What is distribution that contains samples from the Gumbel-Softmax distribution?",
        "Y": "gumbel_softmax",
        "Z": "gumbel_softmax Samples from the Gumbel-Softmax distribution (Link 1Link 2) and optionally discretizes.",
        "source": "https://pytorch.org/docs/stable/nn.functional.html"
    },
    {
        "X": "What Applies a softmax followed by a logarithm?",
        "Y": "log_softmax",
        "Z": "log_softmax Applies a softmax followed by a logarithm.",
        "source": "https://pytorch.org/docs/stable/nn.functional.html"
    },
    {
        "X": "What is followed by a log_softmax?",
        "Y": "logarithm",
        "Z": "log_softmax Applies a softmax followed by a logarithm.",
        "source": "https://pytorch.org/docs/stable/nn.functional.html"
    },
    {
        "X": "What is followed by a softmax?",
        "Y": "logarithm",
        "Z": "log_softmax Applies a softmax followed by a logarithm.",
        "source": "https://pytorch.org/docs/stable/nn.functional.html"
    },
    {
        "X": "tanh(x)=tanh(x)=exp(x)exp(x)+ex",
        "Y": "x",
        "Z": "tanh Applies element-wise,Tanh(x)=tanh\u2061(x)=exp\u2061(x)\u2212exp\u2061(\u2212x)exp\u2061(x)+exp\u2061(\u2212x)\\text{Tanh}(x) = \\tanh(x) = \\frac{\\exp(x) - \\exp(-x)}{\\exp(x) + \\exp(-x)}Tanh(x)=tanh(x)=exp(x)+exp(\u2212x)exp(x)\u2212exp(\u2212x)\u200b",
        "source": "https://pytorch.org/docs/stable/nn.functional.html"
    },
    {
        "X": "What type of function does sigmoid apply?",
        "Y": "element-wise function",
        "Z": "sigmoid Applies the element-wise functionSigmoid(x)=11+exp\u2061(\u2212x)\\text{Sigmoid}(x) = \\frac{1}{1 + \\exp(-x)}Sigmoid(x)=1+exp(\u2212x)1\u200b",
        "source": "https://pytorch.org/docs/stable/nn.functional.html"
    },
    {
        "X": "How does silu apply the Sigmoid Linear Unit function?",
        "Y": "element-wise",
        "Z": "silu Applies the Sigmoid Linear Unit (SiLU) function, element-wise.",
        "source": "https://pytorch.org/docs/stable/nn.functional.html"
    },
    {
        "X": "What Applies the Sigmoid Linear Unit (SiLU) function, element-wise?",
        "Y": "silu",
        "Z": "silu Applies the Sigmoid Linear Unit (SiLU) function, element-wise.",
        "source": "https://pytorch.org/docs/stable/nn.functional.html"
    },
    {
        "X": "How does silu apply the SiLU function?",
        "Y": "element-wise",
        "Z": "silu Applies the Sigmoid Linear Unit (SiLU) function, element-wise.",
        "source": "https://pytorch.org/docs/stable/nn.functional.html"
    },
    {
        "X": "What does mish apply element-wise?",
        "Y": "Mish function",
        "Z": "mish Applies the Mish function, element-wise.",
        "source": "https://pytorch.org/docs/stable/nn.functional.html"
    },
    {
        "X": "What aspect of the Mish function is mish applied?",
        "Y": "element-wise",
        "Z": "mish Applies the Mish function, element-wise.",
        "source": "https://pytorch.org/docs/stable/nn.functional.html"
    },
    {
        "X": "How does mish apply the Mish function?",
        "Y": "element-wise",
        "Z": "mish Applies the Mish function, element-wise.",
        "source": "https://pytorch.org/docs/stable/nn.functional.html"
    },
    {
        "X": "What function does mish apply element-wise?",
        "Y": "Mish",
        "Z": "mish Applies the Mish function, element-wise.",
        "source": "https://pytorch.org/docs/stable/nn.functional.html"
    },
    {
        "X": "What does batch_norm apply for each channel across a batch of data?",
        "Y": "Batch Normalization",
        "Z": "batch_norm Applies Batch Normalization for each channel across a batch of data.",
        "source": "https://pytorch.org/docs/stable/nn.functional.html"
    },
    {
        "X": "What Applies Batch Normalization for each channel across a batch of data?",
        "Y": "batch_norm",
        "Z": "batch_norm Applies Batch Normalization for each channel across a batch of data.",
        "source": "https://pytorch.org/docs/stable/nn.functional.html"
    },
    {
        "X": "What Applies Group Normalization for last certain number of dimensions?",
        "Y": "group_norm",
        "Z": "group_norm Applies Group Normalization for last certain number of dimensions.",
        "source": "https://pytorch.org/docs/stable/nn.functional.html"
    },
    {
        "X": "group_norm Applies what for last certain number of dimensions?",
        "Y": "Group Normalization",
        "Z": "group_norm Applies Group Normalization for last certain number of dimensions.",
        "source": "https://pytorch.org/docs/stable/nn.functional.html"
    },
    {
        "X": "What Applies Instance Normalization for each channel in each data sample in a batch?",
        "Y": "instance_norm",
        "Z": "instance_norm Applies Instance Normalization for each channel in each data sample in a batch.",
        "source": "https://pytorch.org/docs/stable/nn.functional.html"
    },
    {
        "X": "What applies Instance Normalization for each channel in each data sample in a batch?",
        "Y": "instance_norm",
        "Z": "instance_norm Applies Instance Normalization for each channel in each data sample in a batch.",
        "source": "https://pytorch.org/docs/stable/nn.functional.html"
    },
    {
        "X": "What Applies Layer Normalization for last certain number of dimensions?",
        "Y": "layer_norm",
        "Z": "layer_norm Applies Layer Normalization for last certain number of dimensions.",
        "source": "https://pytorch.org/docs/stable/nn.functional.html"
    },
    {
        "X": "What does layer_norm apply for last certain number of dimensions?",
        "Y": "Layer Normalization",
        "Z": "layer_norm Applies Layer Normalization for last certain number of dimensions.",
        "source": "https://pytorch.org/docs/stable/nn.functional.html"
    },
    {
        "X": "What applies Layer Normalization for last certain number of dimensions?",
        "Y": "layer_norm",
        "Z": "layer_norm Applies Layer Normalization for last certain number of dimensions.",
        "source": "https://pytorch.org/docs/stable/nn.functional.html"
    },
    {
        "X": "Layer_norm Applies what for last certain number of dimensions?",
        "Y": "Layer Normalization",
        "Z": "layer_norm Applies Layer Normalization for last certain number of dimensions.",
        "source": "https://pytorch.org/docs/stable/nn.functional.html"
    },
    {
        "X": "What does local_response_norm apply over an input signal composed of several input planes?",
        "Y": "local response normalization",
        "Z": "local_response_norm Applies local response normalization over an input signal composed of several input planes, where channels occupy the second dimension.",
        "source": "https://pytorch.org/docs/stable/nn.functional.html"
    },
    {
        "X": "What does local_response_norm apply to an input signal composed of several input planes?",
        "Y": "channels occupy the second dimension",
        "Z": "local_response_norm Applies local response normalization over an input signal composed of several input planes, where channels occupy the second dimension.",
        "source": "https://pytorch.org/docs/stable/nn.functional.html"
    },
    {
        "X": "What is the second dimension of the input planes?",
        "Y": "channels occupy the second dimension",
        "Z": "local_response_norm Applies local response normalization over an input signal composed of several input planes, where channels occupy the second dimension.",
        "source": "https://pytorch.org/docs/stable/nn.functional.html"
    },
    {
        "X": "What normalizes the normalization of inputs over a specified dimension?",
        "Y": "PerformsLpL_pLp",
        "Z": "normalize PerformsLpL_pLp\u200bnormalization of inputs over specified dimension.",
        "source": "https://pytorch.org/docs/stable/nn.functional.html"
    },
    {
        "X": "What does PerformsLpL_pLp normalization of inputs over specified dimension?",
        "Y": "normalize",
        "Z": "normalize PerformsLpL_pLp\u200bnormalization of inputs over specified dimension.",
        "source": "https://pytorch.org/docs/stable/nn.functional.html"
    },
    {
        "X": "What type of transformation applies a linear transformation to the incoming data?",
        "Y": "linear",
        "Z": "linear Applies a linear transformation to the incoming data:y=xAT+by = xA^T + by=xAT+b.",
        "source": "https://pytorch.org/docs/stable/nn.functional.html"
    },
    {
        "X": "y = xAT + by= xAT+b. linear Applies a linear transformation to the incoming data:y",
        "Y": "xAT+b",
        "Z": "linear Applies a linear transformation to the incoming data:y=xAT+by = xA^T + by=xAT+b.",
        "source": "https://pytorch.org/docs/stable/nn.functional.html"
    },
    {
        "X": "What type of transformation applies a bilinear transformation to the incoming data?",
        "Y": "bilinear",
        "Z": "bilinear Applies a bilinear transformation to the incoming data:y=x1TAx2+by = x_1^T A x_2 + by=x1T\u200bAx2\u200b+b",
        "source": "https://pytorch.org/docs/stable/nn.functional.html"
    },
    {
        "X": "What does alpha_dropout apply to the input?",
        "Y": "alpha dropout",
        "Z": "alpha_dropout Applies alpha dropout to the input.",
        "source": "https://pytorch.org/docs/stable/nn.functional.html"
    },
    {
        "X": "What applies alpha dropout to the input?",
        "Y": "alpha_dropout",
        "Z": "alpha_dropout Applies alpha dropout to the input.",
        "source": "https://pytorch.org/docs/stable/nn.functional.html"
    },
    {
        "X": "What is a channel a part of?",
        "Y": "feature map",
        "Z": "feature_alpha_dropout Randomly masks out entire channels (a channel is a feature map, e.g.",
        "source": "https://pytorch.org/docs/stable/nn.functional.html"
    },
    {
        "X": "What is program that randomly zeros out entire channels?",
        "Y": "nn.Dropout3d",
        "Z": "nn.Dropout3d Randomly zero out entire channels (a channel is a 3D feature map, e.g., thejjj-th channel of theiii-th sample in the batched input is a 3D tensorinput[i,j]\\text{input}[i, j]input[i,j]).",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "embedding A simple lookup table that looks up embeddings in what?",
        "Y": "a fixed dictionary and size",
        "Z": "embedding A simple lookup table that looks up embeddings in a fixed dictionary and size.",
        "source": "https://pytorch.org/docs/stable/nn.functional.html"
    },
    {
        "X": "A simple lookup table that looks up what in a fixed dictionary and size?",
        "Y": "embeddings",
        "Z": "embedding A simple lookup table that looks up embeddings in a fixed dictionary and size.",
        "source": "https://pytorch.org/docs/stable/nn.functional.html"
    },
    {
        "X": "The embedding_bag computes sums, means and maxes of embeddings without doing what?",
        "Y": "instantiating the intermediate embeddings",
        "Z": "embedding_bag Computes sums, means or maxes ofbagsof embeddings, without instantiating the intermediate embeddings.",
        "source": "https://pytorch.org/docs/stable/nn.functional.html"
    },
    {
        "X": "What Computes sums, means or maxes ofbagsof embeddings, without instantiating the intermediate embeddings",
        "Y": "embedding_bag",
        "Z": "embedding_bag Computes sums, means or maxes ofbagsof embeddings, without instantiating the intermediate embeddings.",
        "source": "https://pytorch.org/docs/stable/nn.functional.html"
    },
    {
        "X": "What takes LongTensor with index values of shape(*)and returns a tensor of shape(*,num_class",
        "Y": "one_hot",
        "Z": "one_hot Takes LongTensor with index values of shape(*)and returns a tensor of shape(*,num_classes)that have zeros everywhere except where the index of last dimension matches the corresponding value of the input tensor, in which case it will be 1.",
        "source": "https://pytorch.org/docs/stable/nn.functional.html"
    },
    {
        "X": "How many _hot takes LongTensor with index values of shape(*)and returns a tensor of shape(*",
        "Y": "one",
        "Z": "one_hot Takes LongTensor with index values of shape(*)and returns a tensor of shape(*,num_classes)that have zeros everywhere except where the index of last dimension matches the corresponding value of the input tensor, in which case it will be 1.",
        "source": "https://pytorch.org/docs/stable/nn.functional.html"
    },
    {
        "X": "What does Seetorch.nn.PairwiseDistancefor details?",
        "Y": "pairwise_distance",
        "Z": "pairwise_distance Seetorch.nn.PairwiseDistancefor details",
        "source": "https://pytorch.org/docs/stable/nn.functional.html"
    },
    {
        "X": "What does cosine_similarity return?",
        "Y": "cosine similarity",
        "Z": "cosine_similarity Returns cosine similarity between x1 and x2, computed along dim.",
        "source": "https://pytorch.org/docs/stable/nn.functional.html"
    },
    {
        "X": "What is the cosine similarity computed along?",
        "Y": "dim",
        "Z": "nn.CosineSimilarity Returns cosine similarity betweenx1x_1x1\u200bandx2x_2x2\u200b, computed along dim.",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "What returns cosine similarity between x1 and x2?",
        "Y": "cosine_similarity",
        "Z": "cosine_similarity Returns cosine similarity between x1 and x2, computed along dim.",
        "source": "https://pytorch.org/docs/stable/nn.functional.html"
    },
    {
        "X": "How is the cosine similarity between x1 and x2 computed?",
        "Y": "computed along dim",
        "Z": "cosine_similarity Returns cosine similarity between x1 and x2, computed along dim.",
        "source": "https://pytorch.org/docs/stable/nn.functional.html"
    },
    {
        "X": "What does pdist compute between every pair of row vectors in the input?",
        "Y": "p-norm distance",
        "Z": "pdist Computes the p-norm distance between every pair of row vectors in the input.",
        "source": "https://pytorch.org/docs/stable/nn.functional.html"
    },
    {
        "X": "pdist Computes the distance between every pair of row vectors in the input?",
        "Y": "p-norm",
        "Z": "pdist Computes the p-norm distance between every pair of row vectors in the input.",
        "source": "https://pytorch.org/docs/stable/nn.functional.html"
    },
    {
        "X": "What is function that measures the Binary Cross Entropy between the target and the output?",
        "Y": "binary_cross_entropy Function",
        "Z": "binary_cross_entropy Function that measures the Binary Cross Entropy between the target and the output.",
        "source": "https://pytorch.org/docs/stable/nn.functional.html"
    },
    {
        "X": "What function measures the Binary Cross Entropy between the target and the output?",
        "Y": "binary_cross_entropy",
        "Z": "binary_cross_entropy Function that measures the Binary Cross Entropy between the target and the output.",
        "source": "https://pytorch.org/docs/stable/nn.functional.html"
    },
    {
        "X": "What function measures Binary Cross Entropy between target and output logits?",
        "Y": "binary_cross_entropy_with_logits",
        "Z": "binary_cross_entropy_with_logits Function that measures Binary Cross Entropy between target and output logits.",
        "source": "https://pytorch.org/docs/stable/nn.functional.html"
    },
    {
        "X": "What is poisson_nll_loss?",
        "Y": "Poisson negative log likelihood loss",
        "Z": "poisson_nll_loss Poisson negative log likelihood loss.",
        "source": "https://pytorch.org/docs/stable/nn.functional.html"
    },
    {
        "X": "What is a cosine embedding loss?",
        "Y": "cosine_embedding_loss",
        "Z": "cosine_embedding_loss SeeCosineEmbeddingLossfor details.",
        "source": "https://pytorch.org/docs/stable/nn.functional.html"
    },
    {
        "X": "What is loss caused by cosineEmbeddingLoss?",
        "Y": "cosine_embedding_loss",
        "Z": "cosine_embedding_loss SeeCosineEmbeddingLossfor details.",
        "source": "https://pytorch.org/docs/stable/nn.functional.html"
    },
    {
        "X": "What type of loss is ctc_loss?",
        "Y": "Connectionist Temporal Classification",
        "Z": "ctc_loss The Connectionist Temporal Classification loss.",
        "source": "https://pytorch.org/docs/stable/nn.functional.html"
    },
    {
        "X": "What is ctc_loss?",
        "Y": "The Connectionist Temporal Classification",
        "Z": "ctc_loss The Connectionist Temporal Classification loss.",
        "source": "https://pytorch.org/docs/stable/nn.functional.html"
    },
    {
        "X": "What type of loss is gaussian_nll_loss?",
        "Y": "negative log",
        "Z": "gaussian_nll_loss Gaussian negative log likelihood loss.",
        "source": "https://pytorch.org/docs/stable/nn.functional.html"
    },
    {
        "X": "What is gaussian_nll_loss?",
        "Y": "negative log likelihood loss",
        "Z": "gaussian_nll_loss Gaussian negative log likelihood loss.",
        "source": "https://pytorch.org/docs/stable/nn.functional.html"
    },
    {
        "X": "What are the details of hinge_embedding_loss?",
        "Y": "SeeHingeEmbeddingLossfor",
        "Z": "hinge_embedding_loss SeeHingeEmbeddingLossfor details.",
        "source": "https://pytorch.org/docs/stable/nn.functional.html"
    },
    {
        "X": "What does SeeHingeEmbeddingLossfor details?",
        "Y": "hinge_embedding_loss",
        "Z": "hinge_embedding_loss SeeHingeEmbeddingLossfor details.",
        "source": "https://pytorch.org/docs/stable/nn.functional.html"
    },
    {
        "X": "What is the divergence of kl_div TheKullback-Leibler?",
        "Y": "Loss",
        "Z": "kl_div TheKullback-Leibler divergence Loss",
        "source": "https://pytorch.org/docs/stable/nn.functional.html"
    },
    {
        "X": "What is TheKullback-Leibler divergence Loss?",
        "Y": "kl_div",
        "Z": "kl_div TheKullback-Leibler divergence Loss",
        "source": "https://pytorch.org/docs/stable/nn.functional.html"
    },
    {
        "X": "What measures the element-wise mean squared error?",
        "Y": "mse_loss",
        "Z": "mse_loss Measures the element-wise mean squared error.",
        "source": "https://pytorch.org/docs/stable/nn.functional.html"
    },
    {
        "X": "What do you see for details?",
        "Y": "triplet_margin_with_distance_loss",
        "Z": "triplet_margin_with_distance_loss SeeTripletMarginWithDistanceLossfor details.",
        "source": "https://pytorch.org/docs/stable/nn.functional.html"
    },
    {
        "X": "What does marginRankingLoss stand for?",
        "Y": "margin_ranking_loss",
        "Z": "margin_ranking_loss SeeMarginRankingLossfor details.",
        "source": "https://pytorch.org/docs/stable/nn.functional.html"
    },
    {
        "X": "What is multilabel_margin_loss?",
        "Y": "multilabel_margin_loss",
        "Z": "multilabel_margin_loss SeeMultiLabelMarginLossfor details.",
        "source": "https://pytorch.org/docs/stable/nn.functional.html"
    },
    {
        "X": "What is file that is used for labels?",
        "Y": "multilabel_soft_margin_loss",
        "Z": "multilabel_soft_margin_loss SeeMultiLabelSoftMarginLossfor details.",
        "source": "https://pytorch.org/docs/stable/nn.functional.html"
    },
    {
        "X": "What does MultiLabelSoftMarginLoss stand for?",
        "Y": "multilabel_soft_margin_loss",
        "Z": "multilabel_soft_margin_loss SeeMultiLabelSoftMarginLossfor details.",
        "source": "https://pytorch.org/docs/stable/nn.functional.html"
    },
    {
        "X": "What is the weight of the multi_margin_loss?",
        "Y": "weight=None",
        "Z": "multi_margin_loss multi_margin_loss(input, target, p=1, margin=1, weight=None, size_average=None,",
        "source": "https://pytorch.org/docs/stable/nn.functional.html"
    },
    {
        "X": "What is the term for multi_margin_loss(input, target, p=1, margin=1, weight=None,",
        "Y": "multi_margin_loss",
        "Z": "multi_margin_loss multi_margin_loss(input, target, p=1, margin=1, weight=None, size_average=None,",
        "source": "https://pytorch.org/docs/stable/nn.functional.html"
    },
    {
        "X": "What uses a squared term if the absolute element-wise error falls below delta?",
        "Y": "huber_loss Function",
        "Z": "huber_loss Function that uses a squared term if the absolute element-wise error falls below delta and a delta-scaled L1 term otherwise.",
        "source": "https://pytorch.org/docs/stable/nn.functional.html"
    },
    {
        "X": "What does the huber_loss function use a squared term for?",
        "Y": "if the absolute element-wise error falls below delta",
        "Z": "huber_loss Function that uses a squared term if the absolute element-wise error falls below delta and a delta-scaled L1 term otherwise.",
        "source": "https://pytorch.org/docs/stable/nn.functional.html"
    },
    {
        "X": "What function uses a squared term if the absolute element-wise error falls below delta?",
        "Y": "huber_loss Function",
        "Z": "huber_loss Function that uses a squared term if the absolute element-wise error falls below delta and a delta-scaled L1 term otherwise.",
        "source": "https://pytorch.org/docs/stable/nn.functional.html"
    },
    {
        "X": "What uses a squared term if the absolute element-wise error falls below beta?",
        "Y": "smooth_l1_loss Function",
        "Z": "smooth_l1_loss Function that uses a squared term if the absolute element-wise error falls below beta and an L1 term otherwise.",
        "source": "https://pytorch.org/docs/stable/nn.functional.html"
    },
    {
        "X": "What term does the smooth_l1_loss function use if the absolute element-wise error falls below beta?",
        "Y": "squared term",
        "Z": "smooth_l1_loss Function that uses a squared term if the absolute element-wise error falls below beta and an L1 term otherwise.",
        "source": "https://pytorch.org/docs/stable/nn.functional.html"
    },
    {
        "X": "What is loss that occurs when you lose a lot of money?",
        "Y": "soft_margin_loss",
        "Z": "soft_margin_loss SeeSoftMarginLossfor details.",
        "source": "https://pytorch.org/docs/stable/nn.functional.html"
    },
    {
        "X": "What is the name of a triplet?",
        "Y": "triplet_margin_loss",
        "Z": "triplet_margin_loss SeeTripletMarginLossfor details",
        "source": "https://pytorch.org/docs/stable/nn.functional.html"
    },
    {
        "X": "What is triplet_margin_loss?",
        "Y": "triplet_margin_loss",
        "Z": "triplet_margin_loss SeeTripletMarginLossfor details",
        "source": "https://pytorch.org/docs/stable/nn.functional.html"
    },
    {
        "X": "What does triplet_margin_with_distance_loss refer to?",
        "Y": "triplet_margin_with_distance_loss",
        "Z": "triplet_margin_with_distance_loss SeeTripletMarginWithDistanceLossfor details.",
        "source": "https://pytorch.org/docs/stable/nn.functional.html"
    },
    {
        "X": "What rearranges elements in a tensor of shape?",
        "Y": "pixel_shuffle",
        "Z": "pixel_shuffle Rearranges elements in a tensor of shape(\u2217,C\u00d7r2,H,W)(*, C \\times r^2, H, W)(\u2217,C\u00d7r2,H,W)to a tensor of shape(\u2217,C,H\u00d7r,W\u00d7r)(*, C, H \\times r, W \\times r)(\u2217,C,H\u00d7r,W\u00d7r), where r is theupscale_factor.",
        "source": "https://pytorch.org/docs/stable/nn.functional.html"
    },
    {
        "X": "What Rearranges elements in a tensor of shape(,Cr2,H,W)(*, C",
        "Y": "pixel_shuffle",
        "Z": "pixel_shuffle Rearranges elements in a tensor of shape(\u2217,C\u00d7r2,H,W)(*, C \\times r^2, H, W)(\u2217,C\u00d7r2,H,W)to a tensor of shape(\u2217,C,H\u00d7r,W\u00d7r)(*, C, H \\times r, W \\times r)(\u2217,C,H\u00d7r,W\u00d7r), where r is theupscale_factor.",
        "source": "https://pytorch.org/docs/stable/nn.functional.html"
    },
    {
        "X": "What is pad?",
        "Y": "Pads tensor",
        "Z": "pad Pads tensor.",
        "source": "https://pytorch.org/docs/stable/nn.functional.html"
    },
    {
        "X": "What is pad pad?",
        "Y": "pad Pads tensor",
        "Z": "pad Pads tensor.",
        "source": "https://pytorch.org/docs/stable/nn.functional.html"
    },
    {
        "X": "What is the term for pad Pads?",
        "Y": "pad Pads tensor",
        "Z": "pad Pads tensor.",
        "source": "https://pytorch.org/docs/stable/nn.functional.html"
    },
    {
        "X": "What does the interpolate Down/up samples the input to?",
        "Y": "the givensizeor the givenscale_factor",
        "Z": "interpolate Down/up samples the input to either the givensizeor the givenscale_factor",
        "source": "https://pytorch.org/docs/stable/nn.functional.html"
    },
    {
        "X": "What does the interpolate Down/up sample the input to?",
        "Y": "the givenscale_factor",
        "Z": "interpolate Down/up samples the input to either the givensizeor the givenscale_factor",
        "source": "https://pytorch.org/docs/stable/nn.functional.html"
    },
    {
        "X": "What is an upsample?",
        "Y": "the input to either the givensizeor the givenscale_factor",
        "Z": "upsample Upsamples the input to either the givensizeor the givenscale_factor",
        "source": "https://pytorch.org/docs/stable/nn.functional.html"
    },
    {
        "X": "What upsamples the input to either the givensize or the givenscale_factor?",
        "Y": "upsample",
        "Z": "upsample Upsamples the input to either the givensizeor the givenscale_factor",
        "source": "https://pytorch.org/docs/stable/nn.functional.html"
    },
    {
        "X": "What does upsample_nearest use?",
        "Y": "nearest neighbours\u2019 pixel values",
        "Z": "upsample_nearest Upsamples the input, using nearest neighbours\u2019 pixel values.",
        "source": "https://pytorch.org/docs/stable/nn.functional.html"
    },
    {
        "X": "What upsamples the input, using nearest neighbours' pixel values?",
        "Y": "upsample_nearest",
        "Z": "upsample_nearest Upsamples the input, using nearest neighbours\u2019 pixel values.",
        "source": "https://pytorch.org/docs/stable/nn.functional.html"
    },
    {
        "X": "Upsample_nearest Upsamples the input using what pixel values?",
        "Y": "nearest neighbours",
        "Z": "upsample_nearest Upsamples the input, using nearest neighbours\u2019 pixel values.",
        "source": "https://pytorch.org/docs/stable/nn.functional.html"
    },
    {
        "X": "What type of upsampling does upsample?",
        "Y": "bilinear",
        "Z": "upsample_bilinear Upsamples the input, using bilinear upsampling.",
        "source": "https://pytorch.org/docs/stable/nn.functional.html"
    },
    {
        "X": "What upsamples the input using bilinear upsampling?",
        "Y": "upsample_bilinear",
        "Z": "upsample_bilinear Upsamples the input, using bilinear upsampling.",
        "source": "https://pytorch.org/docs/stable/nn.functional.html"
    },
    {
        "X": "What computes theoutputusinginputvalues and pixel locations from a flow-fieldgrid?",
        "Y": "grid_sample",
        "Z": "grid_sample Given aninput and a flow-fieldgrid, computes theoutputusinginputvalues and pixel locations fromgrid.",
        "source": "https://pytorch.org/docs/stable/nn.functional.html"
    },
    {
        "X": "What generates a 2D or 3D flow field?",
        "Y": "affine_grid",
        "Z": "affine_grid Generates a 2D or 3D flow field (sampling grid), given a batch of affine matricestheta.",
        "source": "https://pytorch.org/docs/stable/nn.functional.html"
    },
    {
        "X": "What is the batch of affine_grid given?",
        "Y": "affine matricestheta",
        "Z": "affine_grid Generates a 2D or 3D flow field (sampling grid), given a batch of affine matricestheta.",
        "source": "https://pytorch.org/docs/stable/nn.functional.html"
    },
    {
        "X": "How many bits does float32ortorch.float torch have?",
        "Y": "32",
        "Z": "32-bit floating point torch.float32ortorch.float torch.*.FloatTensor",
        "source": "https://pytorch.org/docs/stable/tensor_attributes.html#type-promotion-doc"
    },
    {
        "X": "What is a 32-bit torch?",
        "Y": "floating point torch",
        "Z": "32-bit floating point torch.float32ortorch.float torch.*.FloatTensor",
        "source": "https://pytorch.org/docs/stable/tensor_attributes.html#type-promotion-doc"
    },
    {
        "X": "What is 32-bit floating point torch?",
        "Y": "*.FloatTensor",
        "Z": "32-bit floating point torch.float32ortorch.float torch.*.FloatTensor",
        "source": "https://pytorch.org/docs/stable/tensor_attributes.html#type-promotion-doc"
    },
    {
        "X": "What is the 32-bit version of the float32ortorch?",
        "Y": "floating point torch",
        "Z": "32-bit floating point torch.float32ortorch.float torch.*.FloatTensor",
        "source": "https://pytorch.org/docs/stable/tensor_attributes.html#type-promotion-doc"
    },
    {
        "X": "What is floating point torch?",
        "Y": "*",
        "Z": "32-bit floating point torch.float32ortorch.float torch.*.FloatTensor",
        "source": "https://pytorch.org/docs/stable/tensor_attributes.html#type-promotion-doc"
    },
    {
        "X": "What is the version of the floating point torch?",
        "Y": "64-bit",
        "Z": "64-bit floating point torch.float64ortorch.double torch.*.DoubleTensor",
        "source": "https://pytorch.org/docs/stable/tensor_attributes.html#type-promotion-doc"
    },
    {
        "X": "What is 64-bit floating point torch?",
        "Y": "*.DoubleTensor",
        "Z": "64-bit floating point torch.float64ortorch.double torch.*.DoubleTensor",
        "source": "https://pytorch.org/docs/stable/tensor_attributes.html#type-promotion-doc"
    },
    {
        "X": "What is a floating point torch?",
        "Y": "double torch",
        "Z": "64-bit floating point torch.float64ortorch.double torch.*.DoubleTensor",
        "source": "https://pytorch.org/docs/stable/tensor_attributes.html#type-promotion-doc"
    },
    {
        "X": "What is the floating point torch?",
        "Y": "64-bit",
        "Z": "64-bit floating point torch.float64ortorch.double torch.*.DoubleTensor",
        "source": "https://pytorch.org/docs/stable/tensor_attributes.html#type-promotion-doc"
    },
    {
        "X": "What is float64ortorch?",
        "Y": "DoubleTensor",
        "Z": "64-bit floating point torch.float64ortorch.double torch.*.DoubleTensor",
        "source": "https://pytorch.org/docs/stable/tensor_attributes.html#type-promotion-doc"
    },
    {
        "X": "What is the version of the complex torch?",
        "Y": "64-bit",
        "Z": "64-bit complex torch.complex64ortorch.cfloat",
        "source": "https://pytorch.org/docs/stable/tensor_attributes.html#type-promotion-doc"
    },
    {
        "X": "What is the version of complex torch.complex64ortorch.cfloat?",
        "Y": "64-bit",
        "Z": "64-bit complex torch.complex64ortorch.cfloat",
        "source": "https://pytorch.org/docs/stable/tensor_attributes.html#type-promotion-doc"
    },
    {
        "X": "What is a 64-bit complex torch?",
        "Y": "cfloat",
        "Z": "64-bit complex torch.complex64ortorch.cfloat",
        "source": "https://pytorch.org/docs/stable/tensor_attributes.html#type-promotion-doc"
    },
    {
        "X": "How many bits is the complex torch?",
        "Y": "128",
        "Z": "128-bit complex torch.complex128ortorch.cdouble",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is torch.complex128ortorch.cdouble?",
        "Y": "complex",
        "Z": "128-bit complex torch.complex128ortorch.cdouble",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is 128-bit complex torch?",
        "Y": "cdouble",
        "Z": "128-bit complex torch.complex128ortorch.cdouble",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "How many bits does a floating point1 torch have?",
        "Y": "16",
        "Z": "16-bit floating point1 torch.float16ortorch.half torch.*.HalfTensor",
        "source": "https://pytorch.org/docs/stable/tensor_attributes.html#type-promotion-doc"
    },
    {
        "X": "What is 16-bit floating point1 torch?",
        "Y": "*.HalfTensor",
        "Z": "16-bit floating point1 torch.float16ortorch.half torch.*.HalfTensor",
        "source": "https://pytorch.org/docs/stable/tensor_attributes.html#type-promotion-doc"
    },
    {
        "X": "What is a 16-bit floating point1 torch?",
        "Y": "half torch",
        "Z": "16-bit floating point1 torch.float16ortorch.half torch.*.HalfTensor",
        "source": "https://pytorch.org/docs/stable/tensor_attributes.html#type-promotion-doc"
    },
    {
        "X": "What is the 16-bit version of a torch?",
        "Y": "floating point",
        "Z": "16-bit floating point1 torch.float16ortorch.half torch.*.HalfTensor",
        "source": "https://pytorch.org/docs/stable/tensor_attributes.html#type-promotion-doc"
    },
    {
        "X": "What is a 16-bit floating point torch?",
        "Y": "HalfTensor",
        "Z": "16-bit floating point1 torch.float16ortorch.half torch.*.HalfTensor",
        "source": "https://pytorch.org/docs/stable/tensor_attributes.html#type-promotion-doc"
    },
    {
        "X": "How many bits does a bfloat16 torch have?",
        "Y": "16",
        "Z": "16-bit floating point2 torch.bfloat16 torch.*.BFloat16Tensor",
        "source": "https://pytorch.org/docs/stable/tensor_attributes.html#type-promotion-doc"
    },
    {
        "X": "What is 16-bit floating point2 torch?",
        "Y": "*.BFloat16Tensor",
        "Z": "16-bit floating point2 torch.bfloat16 torch.*.BFloat16Tensor",
        "source": "https://pytorch.org/docs/stable/tensor_attributes.html#type-promotion-doc"
    },
    {
        "X": "What is the 16-bit torch?",
        "Y": "floating point2",
        "Z": "16-bit floating point2 torch.bfloat16 torch.*.BFloat16Tensor",
        "source": "https://pytorch.org/docs/stable/tensor_attributes.html#type-promotion-doc"
    },
    {
        "X": "How many bits is a torch?",
        "Y": "8",
        "Z": "8-bit integer (signed) torch.int8 torch.CharTensor torch.cuda.CharTensor",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is an 8-bit integer?",
        "Y": "unsigned",
        "Z": "8-bit integer (unsigned) torch.uint8 torch.ByteTensor torch.cuda.ByteTensor",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is 8-bit integer (unsigned) torch?",
        "Y": "*.ByteTensor",
        "Z": "8-bit integer (unsigned) torch.uint8 torch.*.ByteTensor",
        "source": "https://pytorch.org/docs/stable/tensor_attributes.html#type-promotion-doc"
    },
    {
        "X": "What is 8-bit integer?",
        "Y": "unsigned",
        "Z": "8-bit integer (unsigned) torch.uint8 torch.*.ByteTensor",
        "source": "https://pytorch.org/docs/stable/tensor_attributes.html#type-promotion-doc"
    },
    {
        "X": "What is the unsigned torch?",
        "Y": "8-bit integer",
        "Z": "8-bit integer (unsigned) torch.uint8 torch.ByteTensor torch.cuda.ByteTensor",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is 8-bit integer (signed) torch?",
        "Y": "*.CharTensor",
        "Z": "8-bit integer (signed) torch.int8 torch.*.CharTensor",
        "source": "https://pytorch.org/docs/stable/tensor_attributes.html#type-promotion-doc"
    },
    {
        "X": "How many bits is the torch?",
        "Y": "8",
        "Z": "8-bit integer (unsigned) torch.uint8 torch.ByteTensor torch.cuda.ByteTensor",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is short torch?",
        "Y": "ShortTensor",
        "Z": "16-bit integer (signed) torch.int16ortorch.short torch.*.ShortTensor",
        "source": "https://pytorch.org/docs/stable/tensor_attributes.html#type-promotion-doc"
    },
    {
        "X": "How many bit integers does torch.int16ortorch.short torch have?",
        "Y": "16",
        "Z": "16-bit integer (signed) torch.int16ortorch.short torch.*.ShortTensor",
        "source": "https://pytorch.org/docs/stable/tensor_attributes.html#type-promotion-doc"
    },
    {
        "X": "What is 32-bit integer (signed) torch?",
        "Y": "*.IntTensor",
        "Z": "32-bit integer (signed) torch.int32ortorch.int torch.*.IntTensor",
        "source": "https://pytorch.org/docs/stable/tensor_attributes.html#type-promotion-doc"
    },
    {
        "X": "How many bits are in a long torch?",
        "Y": "64",
        "Z": "64-bit integer (signed) torch.int64ortorch.long torch.*.LongTensor",
        "source": "https://pytorch.org/docs/stable/tensor_attributes.html#type-promotion-doc"
    },
    {
        "X": "What is 64-bit integer (signed) torch?",
        "Y": "*.LongTensor",
        "Z": "64-bit integer (signed) torch.int64ortorch.long torch.*.LongTensor",
        "source": "https://pytorch.org/docs/stable/tensor_attributes.html#type-promotion-doc"
    },
    {
        "X": "What is a long torch?",
        "Y": "LongTensor",
        "Z": "64-bit integer (signed) torch.int64ortorch.long torch.*.LongTensor",
        "source": "https://pytorch.org/docs/stable/tensor_attributes.html#type-promotion-doc"
    },
    {
        "X": "Int64ortorch.long torch is what?",
        "Y": "64-bit",
        "Z": "64-bit integer (signed) torch.int64ortorch.long torch.*.LongTensor",
        "source": "https://pytorch.org/docs/stable/tensor_attributes.html#type-promotion-doc"
    },
    {
        "X": "What is a bool torch?",
        "Y": "Boolean torch",
        "Z": "Boolean torch.bool torch.*.BoolTensor",
        "source": "https://pytorch.org/docs/stable/tensor_attributes.html#type-promotion-doc"
    },
    {
        "X": "What is a Boolean torch?",
        "Y": "*.BoolTensor",
        "Z": "Boolean torch.bool torch.*.BoolTensor",
        "source": "https://pytorch.org/docs/stable/tensor_attributes.html#type-promotion-doc"
    },
    {
        "X": "What is group that adds a param group to theOptimizersparam_groups?",
        "Y": "Optimizer",
        "Z": "Optimizer.add_param_group Add a param group to theOptimizersparam_groups.",
        "source": "https://pytorch.org/docs/stable/optim.html"
    },
    {
        "X": "What add a param group to theOptimizersparam_groups?",
        "Y": "Optimizer.add_param_group",
        "Z": "Optimizer.add_param_group Add a param group to theOptimizersparam_groups.",
        "source": "https://pytorch.org/docs/stable/optim.html"
    },
    {
        "X": "What is dict that loads the optimizer state?",
        "Y": "load_state_dict",
        "Z": "Optimizer.load_state_dict Loads the optimizer state.",
        "source": "https://pytorch.org/docs/stable/optim.html"
    },
    {
        "X": "What is function that loads the optimizer state?",
        "Y": "Optimizer.load_state_dict",
        "Z": "Optimizer.load_state_dict Loads the optimizer state.",
        "source": "https://pytorch.org/docs/stable/optim.html"
    },
    {
        "X": "What grad sets the gradients of all optimizedtorch.Tensors to zero?",
        "Y": "zero",
        "Z": "Optimizer.zero_grad Sets the gradients of all optimizedtorch.Tensors to zero.",
        "source": "https://pytorch.org/docs/stable/optim.html"
    },
    {
        "X": "What does Adadelta implement?",
        "Y": "Adadelta algorithm",
        "Z": "Adadelta Implements Adadelta algorithm.",
        "source": "https://pytorch.org/docs/stable/optim.html"
    },
    {
        "X": "What implements the Adadelta algorithm?",
        "Y": "Adadelta",
        "Z": "Adadelta Implements Adadelta algorithm.",
        "source": "https://pytorch.org/docs/stable/optim.html"
    },
    {
        "X": "Adadelta Implements what?",
        "Y": "Adadelta algorithm",
        "Z": "Adadelta Implements Adadelta algorithm.",
        "source": "https://pytorch.org/docs/stable/optim.html"
    },
    {
        "X": "What does Adagrad implement?",
        "Y": "Adagrad algorithm",
        "Z": "Adagrad Implements Adagrad algorithm.",
        "source": "https://pytorch.org/docs/stable/optim.html"
    },
    {
        "X": "What implements the Adam algorithm?",
        "Y": "Adam",
        "Z": "Adam Implements Adam algorithm.",
        "source": "https://pytorch.org/docs/stable/optim.html"
    },
    {
        "X": "What does Adam implement?",
        "Y": "Adam algorithm",
        "Z": "Adam Implements Adam algorithm.",
        "source": "https://pytorch.org/docs/stable/optim.html"
    },
    {
        "X": "What implements the AdamW algorithm?",
        "Y": "AdamW",
        "Z": "AdamW Implements AdamW algorithm.",
        "source": "https://pytorch.org/docs/stable/optim.html"
    },
    {
        "X": "What does AdamW implement?",
        "Y": "AdamW algorithm",
        "Z": "AdamW Implements AdamW algorithm.",
        "source": "https://pytorch.org/docs/stable/optim.html"
    },
    {
        "X": "What type of Adam algorithm does SparseAdam implement?",
        "Y": "lazy",
        "Z": "SparseAdam Implements lazy version of Adam algorithm suitable for sparse tensors.",
        "source": "https://pytorch.org/docs/stable/optim.html"
    },
    {
        "X": "What implements a lazy version of Adam algorithm?",
        "Y": "SparseAdam",
        "Z": "SparseAdam Implements lazy version of Adam algorithm suitable for sparse tensors.",
        "source": "https://pytorch.org/docs/stable/optim.html"
    },
    {
        "X": "What implements lazy version of Adam algorithm?",
        "Y": "SparseAdam",
        "Z": "SparseAdam Implements lazy version of Adam algorithm suitable for sparse tensors.",
        "source": "https://pytorch.org/docs/stable/optim.html"
    },
    {
        "X": "SparseAdam implements lazy version of Adam algorithm suitable for what?",
        "Y": "sparse tensors",
        "Z": "SparseAdam Implements lazy version of Adam algorithm suitable for sparse tensors.",
        "source": "https://pytorch.org/docs/stable/optim.html"
    },
    {
        "X": "What implements the Adamax algorithm?",
        "Y": "Adamax",
        "Z": "Adamax Implements Adamax algorithm (a variant of Adam based on infinity norm).",
        "source": "https://pytorch.org/docs/stable/optim.html"
    },
    {
        "X": "What is the Adamax algorithm based on?",
        "Y": "infinity norm",
        "Z": "Adamax Implements Adamax algorithm (a variant of Adam based on infinity norm).",
        "source": "https://pytorch.org/docs/stable/optim.html"
    },
    {
        "X": "Adamax Implements is a variant of Adam based on what?",
        "Y": "infinity norm",
        "Z": "Adamax Implements Adamax algorithm (a variant of Adam based on infinity norm).",
        "source": "https://pytorch.org/docs/stable/optim.html"
    },
    {
        "X": "What does ASGD implement?",
        "Y": "Averaged Stochastic Gradient Descent",
        "Z": "ASGD Implements Averaged Stochastic Gradient Descent.",
        "source": "https://pytorch.org/docs/stable/optim.html"
    },
    {
        "X": "What does LBFGS implement?",
        "Y": "L-BFGS algorithm",
        "Z": "LBFGS Implements L-BFGS algorithm, heavily inspired byminFunc.",
        "source": "https://pytorch.org/docs/stable/optim.html"
    },
    {
        "X": "LBFGS is heavily inspired by what algorithm?",
        "Y": "minFunc",
        "Z": "LBFGS Implements L-BFGS algorithm, heavily inspired byminFunc.",
        "source": "https://pytorch.org/docs/stable/optim.html"
    },
    {
        "X": "What algorithm does LBFGS implement?",
        "Y": "L-BFGS",
        "Z": "LBFGS Implements L-BFGS algorithm, heavily inspired byminFunc.",
        "source": "https://pytorch.org/docs/stable/optim.html"
    },
    {
        "X": "What does RMSprop implement?",
        "Y": "RMSprop algorithm",
        "Z": "RMSprop Implements RMSprop algorithm.",
        "source": "https://pytorch.org/docs/stable/optim.html"
    },
    {
        "X": "What implements RMSprop algorithm?",
        "Y": "RMSprop",
        "Z": "RMSprop Implements RMSprop algorithm.",
        "source": "https://pytorch.org/docs/stable/optim.html"
    },
    {
        "X": "What implements the resilient backpropagation algorithm?",
        "Y": "Rprop",
        "Z": "Rprop Implements the resilient backpropagation algorithm.",
        "source": "https://pytorch.org/docs/stable/optim.html"
    },
    {
        "X": "What does Rprop implement?",
        "Y": "resilient backpropagation algorithm",
        "Z": "Rprop Implements the resilient backpropagation algorithm.",
        "source": "https://pytorch.org/docs/stable/optim.html"
    },
    {
        "X": "What does SGD implement?",
        "Y": "stochastic gradient descent",
        "Z": "SGD Implements stochastic gradient descent (optionally with momentum).",
        "source": "https://pytorch.org/docs/stable/optim.html"
    },
    {
        "X": "SGD Implements stochastic gradient descent (optionally with what?",
        "Y": "momentum",
        "Z": "SGD Implements stochastic gradient descent (optionally with momentum).",
        "source": "https://pytorch.org/docs/stable/optim.html"
    },
    {
        "X": "SGD implements stochastic gradient descent (optionally with what?",
        "Y": "momentum",
        "Z": "SGD Implements stochastic gradient descent (optionally with momentum).",
        "source": "https://pytorch.org/docs/stable/optim.html"
    },
    {
        "X": "What does MultiplicativeLR use to multiply the learning rate of each parameter group by the factor given in the specified function?",
        "Y": "lr_scheduler",
        "Z": "lr_scheduler.MultiplicativeLR Multiply the learning rate of each parameter group by the factor given in the specified function.",
        "source": "https://pytorch.org/docs/stable/optim.html"
    },
    {
        "X": "What is lr_scheduler.MultiplicativeLR?",
        "Y": "Multiply the learning rate of each parameter group by the factor given in the specified function",
        "Z": "lr_scheduler.MultiplicativeLR Multiply the learning rate of each parameter group by the factor given in the specified function.",
        "source": "https://pytorch.org/docs/stable/optim.html"
    },
    {
        "X": "What is program that Decays the learning rate of each parameter group by gamma every step_size ep",
        "Y": "lr_scheduler",
        "Z": "lr_scheduler.StepLR Decays the learning rate of each parameter group by gamma every step_size epochs.",
        "source": "https://pytorch.org/docs/stable/optim.html"
    },
    {
        "X": "MultiStepLR Decays the learning rate by gamma once the number of epoch reaches one of the milestones",
        "Y": "lr_scheduler",
        "Z": "lr_scheduler.MultiStepLR Decays the learning rate of each parameter group by gamma once the number of epoch reaches one of the milestones.",
        "source": "https://pytorch.org/docs/stable/optim.html"
    },
    {
        "X": "What does lr_scheduler.ExponentialLR Decay the learning rate of each parameter group by every epoch",
        "Y": "gamma",
        "Z": "lr_scheduler.ExponentialLR Decays the learning rate of each parameter group by gamma every epoch.",
        "source": "https://pytorch.org/docs/stable/optim.html"
    },
    {
        "X": "What does lr_scheduler.CosineAnnealingLR Set?",
        "Y": "the learning rate",
        "Z": "lr_scheduler.CosineAnnealingLR Set the learning rate of each parameter group using a cosine annealing schedule, where\u03b7max\\eta_{max}\u03b7max\u200bis set to the initial lr andTcurT_{cur}Tcur\u200bis the number of epochs since the last restart in SGDR:",
        "source": "https://pytorch.org/docs/stable/optim.html"
    },
    {
        "X": "What is program that reduces learning rate when a metric has stopped improving?",
        "Y": "lr_scheduler",
        "Z": "lr_scheduler.ReduceLROnPlateau Reduce learning rate when a metric has stopped improving.",
        "source": "https://pytorch.org/docs/stable/optim.html"
    },
    {
        "X": "What does lr_scheduler.ReduceLROnPlateau Reduce when a metric has stopped improving?",
        "Y": "learning rate",
        "Z": "lr_scheduler.ReduceLROnPlateau Reduce learning rate when a metric has stopped improving.",
        "source": "https://pytorch.org/docs/stable/optim.html"
    },
    {
        "X": "What sets the learning rate of each parameter group according to cyclical learning rate policy?",
        "Y": "lr_scheduler.CyclicLR",
        "Z": "lr_scheduler.CyclicLR Sets the learning rate of each parameter group according to cyclical learning rate policy (CLR).",
        "source": "https://pytorch.org/docs/stable/optim.html"
    },
    {
        "X": "lr_scheduler.OneCycleLR Sets the learning rate of each parameter group according to what policy?",
        "Y": "1cycle learning rate policy",
        "Z": "lr_scheduler.OneCycleLR Sets the learning rate of each parameter group according to the 1cycle learning rate policy.",
        "source": "https://pytorch.org/docs/stable/optim.html"
    },
    {
        "X": "What is the learning rate policy for each parameter group?",
        "Y": "1cycle",
        "Z": "lr_scheduler.OneCycleLR Sets the learning rate of each parameter group according to the 1cycle learning rate policy.",
        "source": "https://pytorch.org/docs/stable/optim.html"
    },
    {
        "X": "What is used to set the learning rate of each parameter group using a cosine annealing schedule?",
        "Y": "lr_scheduler",
        "Z": "lr_scheduler.CosineAnnealingWarmRestarts Set the learning rate of each parameter group using a cosine annealing schedule, where\u03b7max\\eta_{max}\u03b7max\u200bis set to the initial lr,TcurT_{cur}Tcur\u200bis the number of epochs since the last restart andTiT_{i}Ti\u200bis the number of epochs between two warm restarts in SGDR:",
        "source": "https://pytorch.org/docs/stable/optim.html"
    },
    {
        "X": "Parameter A kind of Tensor that is to be considered what type of parameter?",
        "Y": "module",
        "Z": "Parameter A kind of Tensor that is to be considered a module parameter.",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "Parameter A kind of what is to be considered a module parameter?",
        "Y": "Tensor",
        "Z": "Parameter A kind of Tensor that is to be considered a module parameter.",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "What is a Sequential A?",
        "Y": "sequential container",
        "Z": "Sequential A sequential container.",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "ModuleList holds what in a list?",
        "Y": "submodules",
        "Z": "ModuleList Holds submodules in a list.",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "register_module_forward_pre_hook Registers a forward pre-hook common to what?",
        "Y": "all modules",
        "Z": "register_module_forward_pre_hook Registers a forward pre-hook common to all modules.",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "What registers a global forward hook for all the modules?",
        "Y": "register_module_forward_hook",
        "Z": "register_module_forward_hook Registers a global forward hook for all the modules",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "What does register_module_forward_hook register a global forward hook for?",
        "Y": "all the modules",
        "Z": "register_module_forward_hook Registers a global forward hook for all the modules",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "What registers a backward hook common to all the modules?",
        "Y": "register_module_backward_hook",
        "Z": "register_module_backward_hook Registers a backward hook common to all the modules.",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "What does register_module_backward_hook register?",
        "Y": "backward hook",
        "Z": "register_module_backward_hook Registers a backward hook common to all the modules.",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "register_module_backward_hook Registers a backward hook common to what?",
        "Y": "all the modules",
        "Z": "register_module_backward_hook Registers a backward hook common to all the modules.",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "nn.Conv1d Applies what type of convolution over an input signal?",
        "Y": "1D",
        "Z": "nn.Conv1d Applies a 1D convolution over an input signal composed of several input planes.",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "Conv2d Applies a 2D convolution over an input signal composed of several input planes?",
        "Y": "nn",
        "Z": "nn.Conv2d Applies a 2D convolution over an input signal composed of several input planes.",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "Conv3d Applies a 3D convolution over an input signal composed of several input planes?",
        "Y": "nn",
        "Z": "nn.Conv3d Applies a 3D convolution over an input signal composed of several input planes.",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "What is 1D transposed convolution operator?",
        "Y": "nn",
        "Z": "nn.ConvTranspose1d Applies a 1D transposed convolution operator over an input image composed of several input planes.",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "What Applies a 1D transposed convolution operator over an input image composed of several input planes?",
        "Y": "nn.ConvTranspose1d",
        "Z": "nn.ConvTranspose1d Applies a 1D transposed convolution operator over an input image composed of several input planes.",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "What is 2D transposed convolution operator?",
        "Y": "nn",
        "Z": "nn.ConvTranspose2d Applies a 2D transposed convolution operator over an input image composed of several input planes.",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "What Applies a 2D transposed convolution operator over an input image composed of several input planes?",
        "Y": "nn.ConvTranspose2d",
        "Z": "nn.ConvTranspose2d Applies a 2D transposed convolution operator over an input image composed of several input planes.",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "What is 3D transposed convolution operator?",
        "Y": "nn",
        "Z": "nn.ConvTranspose3d Applies a 3D transposed convolution operator over an input image composed of several input planes.",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "What is the lazy initialization of of theConv1d that is inferred from the input.size(1)?",
        "Y": "thein_channelsargument",
        "Z": "nn.LazyConv1d a torch.nn.Conv1dmodule with lazy initialization of thein_channelsargument of theConv1dthat is inferred from the input.size(1).",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "What is the lazy initialization of thein_channelsargument of theConv1d that is inferred from?",
        "Y": "the input.size",
        "Z": "nn.LazyConv1d a torch.nn.Conv1dmodule with lazy initialization of thein_channelsargument of theConv1dthat is inferred from the input.size(1).",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "What is thein_channelsargument of theConv1d that is inferred from the input.size(1)?",
        "Y": "lazy initialization",
        "Z": "nn.LazyConv1d a torch.nn.Conv1dmodule with lazy initialization of thein_channelsargument of theConv1dthat is inferred from the input.size(1).",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "What is the lazy initialization of of theConv2d that is inferred from the input.size(1)?",
        "Y": "thein_channelsargument",
        "Z": "nn.LazyConv2d a torch.nn.Conv2dmodule with lazy initialization of thein_channelsargument of theConv2dthat is inferred from the input.size(1).",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "What is the lazy initialization of thein_channelsargument of theConv2d that is inferred from?",
        "Y": "the input.size",
        "Z": "nn.LazyConv2d a torch.nn.Conv2dmodule with lazy initialization of thein_channelsargument of theConv2dthat is inferred from the input.size(1).",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "What is inferred from the input.size(1)?",
        "Y": "thenum_featuresargument of theBatchNorm3d",
        "Z": "nn.LazyBatchNorm3d a torch.nn.BatchNorm3dmodule with lazy initialization of thenum_featuresargument of theBatchNorm3dthat is inferred from the input.size(1).",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "What is the lazy initialization of of theConv3d that is inferred from the input.size(1)?",
        "Y": "thein_channelsargument",
        "Z": "nn.LazyConv3d a torch.nn.Conv3dmodule with lazy initialization of thein_channelsargument of theConv3dthat is inferred from the input.size(1).",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "What is thein_channelsargument of theConv3d that is inferred from the input.size(1)?",
        "Y": "lazy initialization",
        "Z": "nn.LazyConv3d a torch.nn.Conv3dmodule with lazy initialization of thein_channelsargument of theConv3dthat is inferred from the input.size(1).",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "The lazy initialization of thein_channelsargument of theConvTranspose1d is inferred from what?",
        "Y": "the input.size",
        "Z": "nn.LazyConvTranspose1d a torch.nn.ConvTranspose1dmodule with lazy initialization of thein_channelsargument of theConvTranspose1dthat is inferred from the input.size(1).",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "The lazy initialization of thein_channelsargument of theConvTranspose2d is inferred from what?",
        "Y": "the input.size",
        "Z": "nn.LazyConvTranspose2d a torch.nn.ConvTranspose2dmodule with lazy initialization of thein_channelsargument of theConvTranspose2dthat is inferred from the input.size(1).",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "What is the lazy initialization of of theConvTranspose3d that is inferred from the input.size(1)?",
        "Y": "thein_channelsargument",
        "Z": "nn.LazyConvTranspose3d a torch.nn.ConvTranspose3dmodule with lazy initialization of thein_channelsargument of theConvTranspose3dthat is inferred from the input.size(1).",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "The lazy initialization of thein_channelsargument of theConvTranspose3d is inferred from what?",
        "Y": "the input.size",
        "Z": "nn.LazyConvTranspose3d a torch.nn.ConvTranspose3dmodule with lazy initialization of thein_channelsargument of theConvTranspose3dthat is inferred from the input.size(1).",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "Unfold Extracts sliding what from a batched input tensor?",
        "Y": "local blocks",
        "Z": "nn.Unfold Extracts sliding local blocks from a batched input tensor.",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "What combine an array of sliding local blocks into a large containing tensor?",
        "Y": "nn.Fold",
        "Z": "nn.Fold Combines an array of sliding local blocks into a large containing tensor.",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "nn.MaxPool1d Applies a max pooling over an input signal composed of several input planes?",
        "Y": "1D",
        "Z": "nn.MaxPool1d Applies a 1D max pooling over an input signal composed of several input planes.",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "What applies a 1D max pooling over an input signal composed of several input planes?",
        "Y": "nn.MaxPool1d",
        "Z": "nn.MaxPool1d Applies a 1D max pooling over an input signal composed of several input planes.",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "nn.MaxPool2d Applies a what kind of max pooling over an input signal?",
        "Y": "2D",
        "Z": "nn.MaxPool2d Applies a 2D max pooling over an input signal composed of several input planes.",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "MaxPool3d Applies a 3D max pooling over an input signal composed of several input planes?",
        "Y": "nn",
        "Z": "nn.MaxPool3d Applies a 3D max pooling over an input signal composed of several input planes.",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "What is the value of the inverse of MaxUnpool1d?",
        "Y": "nn",
        "Z": "nn.MaxUnpool1d Computes a partial inverse ofMaxPool1d.",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "nn.MaxUnpool1d Computes a partial what of MaxPool1d?",
        "Y": "inverse",
        "Z": "nn.MaxUnpool1d Computes a partial inverse ofMaxPool1d.",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "What is the value of the inverse of MaxUnpool2d?",
        "Y": "nn",
        "Z": "nn.MaxUnpool2d Computes a partial inverse ofMaxPool2d.",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "nn.MaxUnpool2d Computes a partial what of MaxPool2d?",
        "Y": "inverse",
        "Z": "nn.MaxUnpool2d Computes a partial inverse ofMaxPool2d.",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "What is the value of the inverse of MaxUnpool3d?",
        "Y": "nn",
        "Z": "nn.MaxUnpool3d Computes a partial inverse ofMaxPool3d.",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "nn.AvgPool1d Applies what type of pooling over an input signal?",
        "Y": "1D",
        "Z": "nn.AvgPool1d Applies a 1D average pooling over an input signal composed of several input planes.",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "What Applies a 2D average pooling over an input signal composed of several input planes?",
        "Y": "nn.AvgPool2d",
        "Z": "nn.AvgPool2d Applies a 2D average pooling over an input signal composed of several input planes.",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "What Applies a 3D average pooling over an input signal composed of several input planes?",
        "Y": "nn.AvgPool3d",
        "Z": "nn.AvgPool3d Applies a 3D average pooling over an input signal composed of several input planes.",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "What kind of fractional max pooling does nn.FractionalMaxPool2d apply?",
        "Y": "2D",
        "Z": "nn.FractionalMaxPool2d Applies a 2D fractional max pooling over an input signal composed of several input planes.",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "What kind of pooling does nn.FractionalMaxPool3d apply?",
        "Y": "3D",
        "Z": "nn.FractionalMaxPool3d Applies a 3D fractional max pooling over an input signal composed of several input planes.",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "nn.LPPool1d Applies a power-average pooling over an input signal composed of several input planes?",
        "Y": "1D",
        "Z": "nn.LPPool1d Applies a 1D power-average pooling over an input signal composed of several input planes.",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "nn.LPPool2d Applies a power-average pooling over an input signal composed of several input planes in",
        "Y": "2D",
        "Z": "nn.LPPool2d Applies a 2D power-average pooling over an input signal composed of several input planes.",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "What is the value of AdaptiveMaxPool1d?",
        "Y": "nn",
        "Z": "nn.AdaptiveMaxPool1d Applies a 1D adaptive max pooling over an input signal composed of several input planes.",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "What is the value of AdaptiveMaxPool2d?",
        "Y": "nn",
        "Z": "nn.AdaptiveMaxPool2d Applies a 2D adaptive max pooling over an input signal composed of several input planes.",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "What is the value of AdaptiveMaxPool3d?",
        "Y": "nn",
        "Z": "nn.AdaptiveMaxPool3d Applies a 3D adaptive max pooling over an input signal composed of several input planes.",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "AdaptiveAvgPool1d Applies what kind of pooling over an input signal?",
        "Y": "1D",
        "Z": "nn.AdaptiveAvgPool1d Applies a 1D adaptive average pooling over an input signal composed of several input planes.",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "What is the value of AdaptiveAvgPool2d?",
        "Y": "nn",
        "Z": "nn.AdaptiveAvgPool2d Applies a 2D adaptive average pooling over an input signal composed of several input planes.",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "What type of pooling does AdaptiveAvgPool3d apply?",
        "Y": "3D",
        "Z": "nn.AdaptiveAvgPool3d Applies a 3D adaptive average pooling over an input signal composed of several input planes.",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "What does nn.ReflectionPad1d Pad the input tensor using?",
        "Y": "reflection of the input boundary",
        "Z": "nn.ReflectionPad1d Pads the input tensor using the reflection of the input boundary.",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "What does nn.ReflectionPad2d Pads the input tensor using?",
        "Y": "reflection of the input boundary",
        "Z": "nn.ReflectionPad2d Pads the input tensor using the reflection of the input boundary.",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "What are the input tensor boundaries with a constant value?",
        "Y": "nn.ConstantPad3d Pads",
        "Z": "nn.ConstantPad3d Pads the input tensor boundaries with a constant value.",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "What type of function does nn.ELU apply?",
        "Y": "element-wise",
        "Z": "nn.ELU Applies the element-wise function:",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "nn.ELU Applies what?",
        "Y": "element-wise function",
        "Z": "nn.ELU Applies the element-wise function:",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "What function does Hardshrink apply?",
        "Y": "hard shrinkage",
        "Z": "nn.Hardshrink Applies the hard shrinkage function element-wise:",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "nn.Hardshrink Applies the hard shrinkage function what?",
        "Y": "element-wise",
        "Z": "nn.Hardshrink Applies the hard shrinkage function element-wise:",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "What does nn.Hardsigmoid apply?",
        "Y": "element-wise function",
        "Z": "nn.Hardsigmoid Applies the element-wise function:",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "Which function does nn.Hardtanh apply element-wise?",
        "Y": "HardTanh",
        "Z": "nn.Hardtanh Applies the HardTanh function element-wise",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "How does HardTanh apply the HardTanh function?",
        "Y": "element-wise",
        "Z": "nn.Hardtanh Applies the HardTanh function element-wise",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "What function does nn.Hardtanh apply element-wise?",
        "Y": "HardTanh",
        "Z": "nn.Hardtanh Applies the HardTanh function element-wise",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "What does nn.Hardswish Apply?",
        "Y": "hardswish function",
        "Z": "nn.Hardswish Applies the hardswish function, element-wise, as described in the paper:",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "nn.Hardswish Applies what function, element-wise?",
        "Y": "hardswish",
        "Z": "nn.Hardswish Applies the hardswish function, element-wise, as described in the paper:",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "What kind of function does nn.LeakyReLU apply?",
        "Y": "element-wise",
        "Z": "nn.LeakyReLU Applies the element-wise function:",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "What does nn.LeakyReLU apply?",
        "Y": "element-wise function",
        "Z": "nn.LeakyReLU Applies the element-wise function:",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "What does nn.LogSigmoid apply?",
        "Y": "element-wise function",
        "Z": "nn.LogSigmoid Applies the element-wise function:",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "nn.PReLU Applies what?",
        "Y": "element-wise function",
        "Z": "nn.PReLU Applies the element-wise function:",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "What does nn.ReLU apply element-wise?",
        "Y": "rectified linear unit function",
        "Z": "nn.ReLU Applies the rectified linear unit function element-wise:",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "nn.ReLU Applies the rectified linear unit function what?",
        "Y": "element-wise",
        "Z": "nn.ReLU Applies the rectified linear unit function element-wise:",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "What kind of function does nn.ReLU6 apply?",
        "Y": "element-wise",
        "Z": "nn.ReLU6 Applies the element-wise function:",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "nn.ReLU6 Applies what?",
        "Y": "element-wise function",
        "Z": "nn.ReLU6 Applies the element-wise function:",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "How is the randomized leaky rectified liner unit function described in the paper?",
        "Y": "element-wise",
        "Z": "nn.RReLU Applies the randomized leaky rectified liner unit function, element-wise, as described in the paper:",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "How does nn.RReLU apply the randomized leaky rectified liner unit function?",
        "Y": "element-wise",
        "Z": "nn.RReLU Applies the randomized leaky rectified liner unit function, element-wise, as described in the paper:",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "What is nn.SELU?",
        "Y": "Applied element-wise",
        "Z": "nn.SELU Applied element-wise, as:",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "How is nn.SELU applied?",
        "Y": "element-wise",
        "Z": "nn.SELU Applied element-wise, as:",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "What kind of function does nn.CELU apply?",
        "Y": "element-wise",
        "Z": "nn.CELU Applies the element-wise function:",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "What does nn.CELU apply?",
        "Y": "element-wise function",
        "Z": "nn.CELU Applies the element-wise function:",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "What function does nn.GELU apply?",
        "Y": "Gaussian Error Linear Units",
        "Z": "nn.GELU Applies the Gaussian Error Linear Units function:",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "What does nn.Sigmoid apply?",
        "Y": "element-wise function",
        "Z": "nn.Sigmoid Applies the element-wise function:",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "How does nn.SiLU apply the Sigmoid Linear Unit function?",
        "Y": "element-wise",
        "Z": "nn.SiLU Applies the Sigmoid Linear Unit (SiLU) function, element-wise.",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "How does nn.Mish apply the Mish function?",
        "Y": "element-wise",
        "Z": "nn.Mish Applies the Mish function, element-wise.",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "What kind of function does nn.Softplus apply?",
        "Y": "element-wise function",
        "Z": "nn.Softplus Applies the element-wise function:",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "What function does Softshrink apply?",
        "Y": "soft shrinkage",
        "Z": "nn.Softshrink Applies the soft shrinkage function element wise:",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "What function does nn.Softshrink apply element wise?",
        "Y": "soft shrinkage",
        "Z": "nn.Softshrink Applies the soft shrinkage function element wise:",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "How does nn.Softshrink apply the soft shrinkage function?",
        "Y": "element wise",
        "Z": "nn.Softshrink Applies the soft shrinkage function element wise:",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "What kind of function does nn.Softsign apply?",
        "Y": "element-wise",
        "Z": "nn.Softsign Applies the element-wise function:",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "What type of function does nn.Tanh apply?",
        "Y": "element-wise function",
        "Z": "nn.Tanh Applies the element-wise function:",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "nn.Tanhshrink Applies what?",
        "Y": "the element-wise function",
        "Z": "nn.Tanhshrink Applies the element-wise function:",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "nn.Threshold Thresholds each element of what input?",
        "Y": "Tensor",
        "Z": "nn.Threshold Thresholds each element of the input Tensor.",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "What Thresholds each element of the input Tensor?",
        "Y": "Threshold",
        "Z": "nn.Threshold Thresholds each element of the input Tensor.",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "What Applies the Softmin function to an n-dimensional input Tensor?",
        "Y": "nn.Softmin",
        "Z": "nn.Softmin Applies the Softmin function to an n-dimensional input Tensor rescaling them so that the elements of the n-dimensional output Tensor lie in the range[0, 1]and sum to 1.",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "What is the range of the elements of the n-dimensional output Tensor?",
        "Y": "0,1",
        "Z": "nn.Softmax Applies the Softmax function to an n-dimensional input Tensor rescaling them so that the elements of the n-dimensional output Tensor lie in the range [0,1] and sum to 1.",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "How does nn.Softmax2d apply SoftMax to each spatial location?",
        "Y": "over features",
        "Z": "nn.Softmax2d Applies SoftMax over features to each spatial location.",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "nn.Softmax2d Applies what over features to each spatial location?",
        "Y": "SoftMax",
        "Z": "nn.Softmax2d Applies SoftMax over features to each spatial location.",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "What type of input Tensor does nn.LogSoftmax apply the function to?",
        "Y": "n-dimensional",
        "Z": "nn.LogSoftmax Applies thelog\u2061(Softmax(x))\\log(\\text{Softmax}(x))log(Softmax(x))function to an n-dimensional input Tensor.",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "Who wrote the Efficient softmax approximation for GPUs?",
        "Y": "Edouard Grave, Armand Joulin, Moustapha Ciss\u00e9, David Grangier, and Herv\u00e9 J\u00e9gou",
        "Z": "nn.AdaptiveLogSoftmaxWithLoss Efficient softmax approximation as described inEfficient softmax approximation for GPUs by Edouard Grave, Armand Joulin, Moustapha Ciss\u00e9, David Grangier, and Herv\u00e9 J\u00e9gou.",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "Along with Edouard Grave, Armand Joulin, Moustapha Ciss\u00e9, David Grangier, and what other person did they",
        "Y": "Herv\u00e9 J\u00e9gou",
        "Z": "nn.AdaptiveLogSoftmaxWithLoss Efficient softmax approximation as described inEfficient softmax approximation for GPUs by Edouard Grave, Armand Joulin, Moustapha Ciss\u00e9, David Grangier, and Herv\u00e9 J\u00e9gou.",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "What is the value of the number that applies Batch Normalization over a 2D or 3D input?",
        "Y": "nn",
        "Z": "nn.BatchNorm1d Applies Batch Normalization over a 2D or 3D input (a mini-batch of 1D inputs with optional additional channel dimension) as described in the paperBatch Normalization: Accelerating Deep Network Training by Reducing Internal Covariate Shift.",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "The lazy initialization of thenum_featuresargument of theBatchNorm1d is inferred from what?",
        "Y": "the input.size(1)",
        "Z": "nn.LazyBatchNorm1d a torch.nn.BatchNorm1dmodule with lazy initialization of thenum_featuresargument of theBatchNorm1dthat is inferred from the input.size(1).",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "The lazy initialization of thenum_featuresargument of theBatchNorm2d is inferred from what?",
        "Y": "the input.size(1)",
        "Z": "nn.LazyBatchNorm2d a torch.nn.BatchNorm2dmodule with lazy initialization of thenum_featuresargument of theBatchNorm2dthat is inferred from the input.size(1).",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "The lazy initialization of thenum_featuresargument of theBatchNorm3d is inferred from what?",
        "Y": "the input.size(1)",
        "Z": "nn.LazyBatchNorm3d a torch.nn.BatchNorm3dmodule with lazy initialization of thenum_featuresargument of theBatchNorm3dthat is inferred from the input.size(1).",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "What Applies Group Normalization over a mini-batch of inputs?",
        "Y": "nn.GroupNorm",
        "Z": "nn.GroupNorm Applies Group Normalization over a mini-batch of inputs as described in the paperGroup Normalization",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "InstanceNorm1d Applies Instance Normalization over a 3D input?",
        "Y": "nn",
        "Z": "nn.InstanceNorm1d Applies Instance Normalization over a 3D input (a mini-batch of 1D inputs with optional additional channel dimension) as described in the paperInstance Normalization: The Missing Ingredient for Fast Stylization.",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "What is a 3D input?",
        "Y": "a mini-batch of 1D inputs with optional additional channel dimension",
        "Z": "nn.InstanceNorm1d Applies Instance Normalization over a 3D input (a mini-batch of 1D inputs with optional additional channel dimension) as described in the paperInstance Normalization: The Missing Ingredient for Fast Stylization.",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "What is paper that describes Instance Normalization over a 4D input?",
        "Y": "Instance Normalization: The Missing Ingredient for Fast Stylization",
        "Z": "nn.InstanceNorm2d Applies Instance Normalization over a 4D input (a mini-batch of 2D inputs with additional channel dimension) as described in the paperInstance Normalization: The Missing Ingredient for Fast Stylization.",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "nn.InstanceNorm2d Applies Instance Normalization over what input?",
        "Y": "4D",
        "Z": "nn.InstanceNorm2d Applies Instance Normalization over a 4D input (a mini-batch of 2D inputs with additional channel dimension) as described in the paperInstance Normalization: The Missing Ingredient for Fast Stylization.",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "What is paper that describes Instance Normalization over a 5D input?",
        "Y": "Instance Normalization: The Missing Ingredient for Fast Stylization",
        "Z": "nn.InstanceNorm3d Applies Instance Normalization over a 5D input (a mini-batch of 3D inputs with additional channel dimension) as described in the paperInstance Normalization: The Missing Ingredient for Fast Stylization.",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "nn.InstanceNorm3d Applies Instance Normalization over what input?",
        "Y": "5D",
        "Z": "nn.InstanceNorm3d Applies Instance Normalization over a 5D input (a mini-batch of 3D inputs with additional channel dimension) as described in the paperInstance Normalization: The Missing Ingredient for Fast Stylization.",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "What document describes Layer Normalization over a mini-batch of inputs?",
        "Y": "paperLayer Normalization",
        "Z": "nn.LayerNorm Applies Layer Normalization over a mini-batch of inputs as described in the paperLayer Normalization",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "What does nn.LayerNorm apply over a mini-batch of inputs?",
        "Y": "Layer Normalization",
        "Z": "nn.LayerNorm Applies Layer Normalization over a mini-batch of inputs as described in the paperLayer Normalization",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "What does nn.LocalResponseNorm apply over an input signal composed of several input planes?",
        "Y": "local response normalization",
        "Z": "nn.LocalResponseNorm Applies local response normalization over an input signal composed of several input planes, where channels occupy the second dimension.",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "What does local response normalization apply to an input signal composed of several input planes?",
        "Y": "channels occupy the second dimension",
        "Z": "nn.LocalResponseNorm Applies local response normalization over an input signal composed of several input planes, where channels occupy the second dimension.",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "What occupy the second dimension of the input plane?",
        "Y": "channels",
        "Z": "nn.LocalResponseNorm Applies local response normalization over an input signal composed of several input planes, where channels occupy the second dimension.",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "What dimension do channels occupy?",
        "Y": "second dimension",
        "Z": "nn.LocalResponseNorm Applies local response normalization over an input signal composed of several input planes, where channels occupy the second dimension.",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "What is enzyme that is responsible for the RNNBase?",
        "Y": "nn.RNNBase",
        "Z": "nn.RNNBase",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "What is the name for nn.RNNBase?",
        "Y": "nn.RNNBase",
        "Z": "nn.RNNBase",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "nn.RNN Applies a multi-layer Elman RNN withtanhtanhtanhorReLU",
        "Y": "input sequence",
        "Z": "nn.RNN Applies a multi-layer Elman RNN withtanh\u2061\\tanhtanhorReLU\\text{ReLU}ReLUnon-linearity to an input sequence.",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "What is multi-layer long short-term memory (LSTM) RNN that is applied to an input sequence?",
        "Y": "nn",
        "Z": "nn.LSTM Applies a multi-layer long short-term memory (LSTM) RNN to an input sequence.",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "nn.LSTM Applies a what type of long short-term memory RNN to an input sequence?",
        "Y": "multi-layer",
        "Z": "nn.LSTM Applies a multi-layer long short-term memory (LSTM) RNN to an input sequence.",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "What is GRU that applies a multi-layer gated recurrent unit to an input sequence?",
        "Y": "nn",
        "Z": "nn.GRU Applies a multi-layer gated recurrent unit (GRU) RNN to an input sequence.",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "What is nn.GRU?",
        "Y": "multi-layer gated recurrent unit",
        "Z": "nn.GRU Applies a multi-layer gated recurrent unit (GRU) RNN to an input sequence.",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "What type of non-linearity does an Elman RNN cell have?",
        "Y": "tanh or ReLU non-linearity",
        "Z": "nn.RNNCell An Elman RNN cell with tanh or ReLU non-linearity.",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "What is LSTMCell?",
        "Y": "long short-term memory",
        "Z": "nn.LSTMCell A long short-term memory (LSTM) cell.",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "What is gated recurrent unit cell?",
        "Y": "GRU",
        "Z": "nn.GRUCell A gated recurrent unit (GRU) cell",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "What type of transformer is a transformer?",
        "Y": "transformer",
        "Z": "nn.Transformer A transformer model.",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "What is TransformerEncoder?",
        "Y": "nn",
        "Z": "nn.TransformerEncoder TransformerEncoder is a stack of N encoder layers",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "What is nn.TransformerEncoder a stack of?",
        "Y": "N encoder layers",
        "Z": "nn.TransformerEncoder TransformerEncoder is a stack of N encoder layers",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "What is the stack of N decoder layers?",
        "Y": "nn",
        "Z": "nn.TransformerDecoder TransformerDecoder is a stack of N decoder layers",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "How many decoder layers does TransformerDecoder have?",
        "Y": "N",
        "Z": "nn.TransformerDecoder TransformerDecoder is a stack of N decoder layers",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "What is a stack of N decoder layers called?",
        "Y": "TransformerDecoder",
        "Z": "nn.TransformerDecoder TransformerDecoder is a stack of N decoder layers",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "Is nn.Identity a placeholder identity operator?",
        "Y": "argument-insensitive",
        "Z": "nn.Identity A placeholder identity operator that is argument-insensitive.",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "nn.Identity A placeholder identity operator that is what?",
        "Y": "argument-insensitive",
        "Z": "nn.Identity A placeholder identity operator that is argument-insensitive.",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "What type of identity operator is argument-insensitive?",
        "Y": "placeholder",
        "Z": "nn.Identity A placeholder identity operator that is argument-insensitive.",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "What is y=?",
        "Y": "xAT+b",
        "Z": "nn.Linear Applies a linear transformation to the incoming data:y=xAT+by = xA^T + by=xAT+b",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "What does nn.LazyLinear a torch.nn.Linearmodule do?",
        "Y": "wherein_featuresis inferred",
        "Z": "nn.LazyLinear a torch.nn.Linearmodule wherein_featuresis inferred.",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "What type of Atorch is nn.LazyLinear Atorch?",
        "Y": "Linearmodule",
        "Z": "nn.LazyLinear a torch.nn.Linearmodule wherein_featuresis inferred.",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "What is program that randomly zeroes some of the elements of the input tensor with probabilitypusing samples from a",
        "Y": "nn.Dropout",
        "Z": "nn.Dropout During training, randomly zeroes some of the elements of the input tensor with probabilitypusing samples from a Bernoulli distribution.",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "What randomly zeroes some elements of the input tensor with probabilitypusing samples from a Bernoulli distribution?",
        "Y": "nn.Dropout",
        "Z": "nn.Dropout During training, randomly zeroes some of the elements of the input tensor with probabilitypusing samples from a Bernoulli distribution.",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "What does Embedding store?",
        "Y": "embeddings of a fixed dictionary and size",
        "Z": "nn.Embedding A simple lookup table that stores embeddings of a fixed dictionary and size.",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "A simple lookup table that stores what of a fixed dictionary and size?",
        "Y": "embeddings",
        "Z": "nn.Embedding A simple lookup table that stores embeddings of a fixed dictionary and size.",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "What is the value of the EmbeddingBag?",
        "Y": "nn",
        "Z": "nn.EmbeddingBag Computes sums or means of \u2018bags\u2019 of embeddings, without instantiating the intermediate embeddings.",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "What Computes sums or means of \u2018bags\u2019 of embeddings without instantiating the intermediate embeddings?",
        "Y": "nn.EmbeddingBag",
        "Z": "nn.EmbeddingBag Computes sums or means of \u2018bags\u2019 of embeddings, without instantiating the intermediate embeddings.",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "What does nn.CosineSimilarity return?",
        "Y": "cosine similarity",
        "Z": "nn.CosineSimilarity Returns cosine similarity betweenx1x_1x1\u200bandx2x_2x2\u200b, computed along dim.",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "What returns cosine similarity betweenx1x_1x1 andx2x_2x2?",
        "Y": "nn.CosineSimilarity",
        "Z": "nn.CosineSimilarity Returns cosine similarity betweenx1x_1x1\u200bandx2x_2x2\u200b, computed along dim.",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "CosineSimilarity Returns cosine similarity betweenx1x_1x1 andx2x_2x2",
        "Y": "computed along dim",
        "Z": "nn.CosineSimilarity Returns cosine similarity betweenx1x_1x1\u200bandx2x_2x2\u200b, computed along dim.",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "What does nn.PairwiseDistance use to compute the batchwise pairwise distance between vectorsv1v_1v1",
        "Y": "p-norm",
        "Z": "nn.PairwiseDistance Computes the batchwise pairwise distance between vectorsv1v_1v1\u200b,v2v_2v2\u200busing the p-norm:",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "What is the batchwise pairwise distance between vectorsv1v_1v1,v2v_2v2 using the p",
        "Y": "nn.PairwiseDistance Computes",
        "Z": "nn.PairwiseDistance Computes the batchwise pairwise distance between vectorsv1v_1v1\u200b,v2v_2v2\u200busing the p-norm:",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "What is used to calculate the batchwise pairwise distance between vectorsv1v_1v1,v2v_2v2?",
        "Y": "p-norm",
        "Z": "nn.PairwiseDistance Computes the batchwise pairwise distance between vectorsv1v_1v1\u200b,v2v_2v2\u200busing the p-norm:",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "What computes the batchwise pairwise distance between vectorsv1v_1v1,v2v_2v2 using the",
        "Y": "nn.PairwiseDistance",
        "Z": "nn.PairwiseDistance Computes the batchwise pairwise distance between vectorsv1v_1v1\u200b,v2v_2v2\u200busing the p-norm:",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "What creates a criterion that measures the mean absolute error?",
        "Y": "nn.L1Loss",
        "Z": "nn.L1Loss Creates a criterion that measures the mean absolute error (MAE) between each element in the inputxxxand targetyyy.",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "What creates a criterion that measures the mean squared error?",
        "Y": "nn.MSELoss",
        "Z": "nn.MSELoss Creates a criterion that measures the mean squared error (squared L2 norm) between each element in the inputxxxand targetyyy.",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "What is the criterion that measures the mean squared error?",
        "Y": "squared L2 norm",
        "Z": "nn.MSELoss Creates a criterion that measures the mean squared error (squared L2 norm) between each element in the inputxxxand targetyyy.",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "What is nn.CTCLoss?",
        "Y": "The Connectionist Temporal Classification",
        "Z": "nn.CTCLoss The Connectionist Temporal Classification loss.",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "What type of distribution is the target?",
        "Y": "Poisson distribution",
        "Z": "nn.PoissonNLLLoss Negative log likelihood loss with Poisson distribution of target.",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "What is nn.PoissonNLLLoss?",
        "Y": "Negative log likelihood loss",
        "Z": "nn.PoissonNLLLoss Negative log likelihood loss with Poisson distribution of target.",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "What is the result of nn.GaussianNLLLoss Gaussian?",
        "Y": "negative log likelihood loss",
        "Z": "nn.GaussianNLLLoss Gaussian negative log likelihood loss.",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "What is nn.GaussianNLLLoss Gaussian?",
        "Y": "negative log likelihood loss",
        "Z": "nn.GaussianNLLLoss Gaussian negative log likelihood loss.",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "What is Kullback-Leibler divergence loss measure?",
        "Y": "nn.KLDivLoss",
        "Z": "nn.KLDivLoss The Kullback-Leibler divergence loss measure",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "What is the divergence loss measure?",
        "Y": "Kullback-Leibler",
        "Z": "nn.KLDivLoss The Kullback-Leibler divergence loss measure",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "What does nn.BCELoss measure between the target and the output?",
        "Y": "Binary Cross Entropy",
        "Z": "nn.BCELoss Creates a criterion that measures the Binary Cross Entropy between the target and the output:",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "What does nn.BCELoss create that measures the Binary Cross Entropy between the target and the output?",
        "Y": "criterion",
        "Z": "nn.BCELoss Creates a criterion that measures the Binary Cross Entropy between the target and the output:",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "What is loss that combines aSigmoidlayer and theBCELossin?",
        "Y": "nn.BCEWithLogitsLoss",
        "Z": "nn.BCEWithLogitsLoss This loss combines aSigmoidlayer and theBCELossin one single class.",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "What two classes does nn.BCEWithLogitsLoss combine?",
        "Y": "aSigmoidlayer and theBCELossin",
        "Z": "nn.BCEWithLogitsLoss This loss combines aSigmoidlayer and theBCELossin one single class.",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "What label contains 1 or -1?",
        "Y": "1D mini-batch tensoryyy",
        "Z": "nn.MarginRankingLoss Creates a criterion that measures the loss given inputsx1x1x1,x2x2x2, two 1D mini-batchTensors, and a label 1D mini-batch tensoryyy(containing 1 or -1).",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "What is the label of the 1D mini-batch tensoryyy?",
        "Y": "1 or -1",
        "Z": "nn.MarginRankingLoss Creates a criterion that measures the loss given inputsx1x1x1,x2x2x2, two 1D mini-batchTensors, and a label 1D mini-batch tensoryyy(containing 1 or -1).",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "What does the label 1D mini-batch tensoryyyy contain?",
        "Y": "1 or -1)",
        "Z": "nn.MarginRankingLoss Creates a criterion that measures the loss given inputsx1x1x1,x2x2x2, two 1D mini-batchTensors, and a label 1D mini-batch tensoryyy(containing 1 or -1).",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "What measures the loss given an input tensorxxxand a labels tensoryyy?",
        "Y": "nn.HingeEmbeddingLoss",
        "Z": "nn.HingeEmbeddingLoss Measures the loss given an input tensorxxxand a labels tensoryyy(containing 1 or -1).",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "What is the value of MultiLabelMarginLoss?",
        "Y": "nn",
        "Z": "nn.MultiLabelMarginLoss Creates a criterion that optimizes a multi-class multi-classification hinge loss (margin-based loss) between inputxxx(a 2D mini-batchTensor) and outputyyy(which is a 2DTensorof target class indices).",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "What does nn.HuberLoss use if the absolute element-wise error falls below delta?",
        "Y": "a squared term",
        "Z": "nn.HuberLoss Creates a criterion that uses a squared term if the absolute element-wise error falls below delta and a delta-scaled L1 term otherwise.",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "What does nn.HuberLoss create?",
        "Y": "criterion",
        "Z": "nn.HuberLoss Creates a criterion that uses a squared term if the absolute element-wise error falls below delta and a delta-scaled L1 term otherwise.",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "What does nn.SmoothL1Loss use if the absolute element-wise error falls below beta?",
        "Y": "a squared term",
        "Z": "nn.SmoothL1Loss Creates a criterion that uses a squared term if the absolute element-wise error falls below beta and an L1 term otherwise.",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "What creates a criterion that uses a squared term if the absolute element-wise error falls below beta?",
        "Y": "nn.SmoothL1Loss",
        "Z": "nn.SmoothL1Loss Creates a criterion that uses a squared term if the absolute element-wise error falls below beta and an L1 term otherwise.",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "What term does nn.SmoothL1Loss use if the absolute element-wise error falls below beta?",
        "Y": "squared term",
        "Z": "nn.SmoothL1Loss Creates a criterion that uses a squared term if the absolute element-wise error falls below beta and an L1 term otherwise.",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "What Loss creates a criterion that uses a squared term if the absolute element-wise error falls below beta?",
        "Y": "L1",
        "Z": "nn.SmoothL1Loss Creates a criterion that uses a squared term if the absolute element-wise error falls below beta and an L1 term otherwise.",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "What creates a criterion that optimizes a two-class classification logistic loss between input tensorxxxand target",
        "Y": "nn.SoftMarginLoss",
        "Z": "nn.SoftMarginLoss Creates a criterion that optimizes a two-class classification logistic loss between input tensorxxxand target tensoryyy(containing 1 or -1).",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "What does nn.SoftMarginLoss create?",
        "Y": "criterion",
        "Z": "nn.SoftMarginLoss Creates a criterion that optimizes a two-class classification logistic loss between input tensorxxxand target tensoryyy(containing 1 or -1).",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "What does nn.MultiLabelSoftMarginLoss create a criterion that optimizes?",
        "Y": "multi-label one-versus-all loss based on max-entropy",
        "Z": "nn.MultiLabelSoftMarginLoss Creates a criterion that optimizes a multi-label one-versus-all loss based on max-entropy, between inputxxxand targetyyyof size(N,C)(N, C)(N,C).",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "What does nn.CosineEmbeddingLoss create?",
        "Y": "criterion",
        "Z": "nn.CosineEmbeddingLoss Creates a criterion that measures the loss given input tensorsx1x_1x1\u200b,x2x_2x2\u200band a Tensorlabelyyywith values 1 or -1.",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "What is the value of MultiMarginLoss?",
        "Y": "nn",
        "Z": "nn.MultiMarginLoss Creates a criterion that optimizes a multi-class classification hinge loss (margin-based loss) between inputxxx(a 2D mini-batchTensor) and outputyyy(which is a 1D tensor of target class indices,0\u2264y\u2264x.size(1)\u221210 \\leq y \\leq \\text{x.size}(1)-10\u2264y\u2264x.size(1)\u22121):",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "What is outputyyy?",
        "Y": "a 1D tensor of target class indices",
        "Z": "nn.MultiMarginLoss Creates a criterion that optimizes a multi-class classification hinge loss (margin-based loss) between inputxxx(a 2D mini-batchTensor) and outputyyy(which is a 1D tensor of target class indices,0\u2264y\u2264x.size(1)\u221210 \\leq y \\leq \\text{x.size}(1)-10\u2264y\u2264x.size(1)\u22121):",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "What does nn.TripletMarginWithDistanceLoss measure?",
        "Y": "triplet loss",
        "Z": "nn.TripletMarginWithDistanceLoss Creates a criterion that measures the triplet loss given input tensorsaaa,ppp, andnnn(representing anchor, positive, and negative examples, respectively), and a nonnegative, real-valued function (\u201cdistance function\u201d) used to compute the relationship between the anchor and positive example (\u201cpositive distance\u201d) and the anchor and negative example (\u201cnegative distance\u201d).",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "What does nn.TripletMarginWithDistanceLoss create?",
        "Y": "criterion",
        "Z": "nn.TripletMarginWithDistanceLoss Creates a criterion that measures the triplet loss given input tensorsaaa,ppp, andnnn(representing anchor, positive, and negative examples, respectively), and a nonnegative, real-valued function (\u201cdistance function\u201d) used to compute the relationship between the anchor and positive example (\u201cpositive distance\u201d) and the anchor and negative example (\u201cnegative distance\u201d).",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "What type of factor is r?",
        "Y": "upscale",
        "Z": "nn.PixelShuffle Rearranges elements in a tensor of shape(\u2217,C\u00d7r2,H,W)(*, C \\times r^2, H, W)(\u2217,C\u00d7r2,H,W)to a tensor of shape(\u2217,C,H\u00d7r,W\u00d7r)(*, C, H \\times r, W \\times r)(\u2217,C,H\u00d7r,W\u00d7r), where r is an upscale factor.",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "What is the value of the PixelUnshuffle?",
        "Y": "nn",
        "Z": "nn.PixelUnshuffle Reverses thePixelShuffleoperation by rearranging elements in a tensor of shape(\u2217,C,H\u00d7r,W\u00d7r)(*, C, H \\times r, W \\times r)(\u2217,C,H\u00d7r,W\u00d7r)to a tensor of shape(\u2217,C\u00d7r2,H,W)(*, C \\times r^2, H, W)(\u2217,C\u00d7r2,H,W), where r is a downscale factor.",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "What is thePixelShuffleoperation by rearranging elements in a tensor of shape(,C,H",
        "Y": "r",
        "Z": "nn.PixelUnshuffle Reverses thePixelShuffleoperation by rearranging elements in a tensor of shape(\u2217,C,H\u00d7r,W\u00d7r)(*, C, H \\times r, W \\times r)(\u2217,C,H\u00d7r,W\u00d7r)to a tensor of shape(\u2217,C\u00d7r2,H,W)(*, C \\times r^2, H, W)(\u2217,C\u00d7r2,H,W), where r is a downscale factor.",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "What is Upsample?",
        "Y": "nn",
        "Z": "nn.Upsample Upsamples a given multi-channel 1D (temporal), 2D (spatial) or 3D (volumetric) data.",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "What type of data does nn.Upsample Upsample?",
        "Y": "multi-channel",
        "Z": "nn.Upsample Upsamples a given multi-channel 1D (temporal), 2D (spatial) or 3D (volumetric) data.",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "What does UpsamplingNearest2d do?",
        "Y": "upsampling",
        "Z": "nn.UpsamplingNearest2d Applies a 2D nearest neighbor upsampling to an input signal composed of several input channels.",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "nn.UpsamplingNearest2d Applies a 2D upsampling to an input signal composed of several input",
        "Y": "nearest neighbor",
        "Z": "nn.UpsamplingNearest2d Applies a 2D nearest neighbor upsampling to an input signal composed of several input channels.",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "What type of upsampling does nn.UpsamplingBilinear2d apply?",
        "Y": "bilinear",
        "Z": "nn.UpsamplingBilinear2d Applies a 2D bilinear upsampling to an input signal composed of several input channels.",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "What Applies a 2D bilinear upsampling to an input signal composed of several input channels?",
        "Y": "nn.UpsamplingBilinear2d",
        "Z": "nn.UpsamplingBilinear2d Applies a 2D bilinear upsampling to an input signal composed of several input channels.",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "At what level does nn.DataParallel implement data parallelism?",
        "Y": "module level",
        "Z": "nn.DataParallel Implements data parallelism at the module level.",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "What does nn.DataParallel implement at the module level?",
        "Y": "data parallelism",
        "Z": "nn.DataParallel Implements data parallelism at the module level.",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "What is nn.parallel.DistributedDataParallel based on?",
        "Y": "ontorch.distributedpackage",
        "Z": "nn.parallel.DistributedDataParallel Implements distributed data parallelism that is based ontorch.distributedpackage at the module level.",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "At what level is distributed data parallelism based?",
        "Y": "module level",
        "Z": "nn.parallel.DistributedDataParallel Implements distributed data parallelism that is based ontorch.distributedpackage at the module level.",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "What is clip that shows the gradient norm of an iterable of parameters?",
        "Y": "clip_grad_norm",
        "Z": "clip_grad_norm_ Clips gradient norm of an iterable of parameters.",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "What is clip that shows the gradient of an iterable of parameters at specified value?",
        "Y": "clip_grad_value",
        "Z": "clip_grad_value_ Clips gradient of an iterable of parameters at specified value.",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "What is clips gradient of an iterable of parameters at specified value?",
        "Y": "clip_grad_value",
        "Z": "clip_grad_value_ Clips gradient of an iterable of parameters at specified value.",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "At what value does clip_grad_value represent a gradient of an iterable of parameters?",
        "Y": "specified value",
        "Z": "clip_grad_value_ Clips gradient of an iterable of parameters at specified value.",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "How many vectors do parameters_to_vector convert to?",
        "Y": "one",
        "Z": "parameters_to_vector Convert parameters to one vector",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "What does _to_vector Convert parameters to one vector?",
        "Y": "parameters",
        "Z": "parameters_to_vector Convert parameters to one vector",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "parameters_to_vector Convert parameters to how many vectors?",
        "Y": "one",
        "Z": "parameters_to_vector Convert parameters to one vector",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "How many vectors does vector_to_parameters convert to the parameters?",
        "Y": "one",
        "Z": "vector_to_parameters Convert one vector to the parameters",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "What is the conversion of one vector to the parameters?",
        "Y": "vector_to_parameters",
        "Z": "vector_to_parameters Convert one vector to the parameters",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "What is prune.BasePruningMethod used for?",
        "Y": "new pruning techniques",
        "Z": "prune.BasePruningMethod Abstract base class for creation of new pruning techniques.",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "What is the abstract base class for creation of new pruning techniques?",
        "Y": "prune.BasePruningMethod",
        "Z": "prune.BasePruningMethod Abstract base class for creation of new pruning techniques.",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "What is container holding a sequence of methods for iterative pruning?",
        "Y": "prune",
        "Z": "prune.PruningContainer Container holding a sequence of pruning methods for iterative pruning.",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "For what type of pruning is prune.PruningContainer used?",
        "Y": "iterative pruning",
        "Z": "prune.PruningContainer Container holding a sequence of pruning methods for iterative pruning.",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "What does prune.Identity Utility generate the pruning parametrization with?",
        "Y": "mask of ones",
        "Z": "prune.Identity Utility pruning method that does not prune any units but generates the pruning parametrization with a mask of ones.",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "What is pruning method that does not prune any units but generates the pruning parametrization with a mask of ones?",
        "Y": "prune",
        "Z": "prune.Identity Utility pruning method that does not prune any units but generates the pruning parametrization with a mask of ones.",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "What does the prune.Identity pruning method generate?",
        "Y": "pruning parametrization",
        "Z": "prune.Identity Utility pruning method that does not prune any units but generates the pruning parametrization with a mask of ones.",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "What is currently unpruned?",
        "Y": "RandomUnstructured Prune",
        "Z": "prune.RandomUnstructured Prune (currently unpruned) units in a tensor at random.",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "At what frequency are prune.RandomUnstructured Prune units in a tensor?",
        "Y": "random",
        "Z": "prune.RandomUnstructured Prune (currently unpruned) units in a tensor at random.",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "How can prune.L1Unstructured Prune units in a tensor be pruned?",
        "Y": "zeroing out the ones with the lowest L1-norm",
        "Z": "prune.L1Unstructured Prune (currently unpruned) units in a tensor by zeroing out the ones with the lowest L1-norm.",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "What are currently unpruned units in a tensor?",
        "Y": "prune.L1Unstructured Prune",
        "Z": "prune.L1Unstructured Prune (currently unpruned) units in a tensor by zeroing out the ones with the lowest L1-norm.",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "What is prune.L1Unstructured Prune units in?",
        "Y": "tensor",
        "Z": "prune.L1Unstructured Prune (currently unpruned) units in a tensor by zeroing out the ones with the lowest L1-norm.",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "What does RandomStructured Prune?",
        "Y": "prune",
        "Z": "prune.RandomStructured Prune entire (currently unpruned) channels in a tensor at random.",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "At what frequency do prune.RandomStructured Prune entire channels in a tensor?",
        "Y": "random",
        "Z": "prune.RandomStructured Prune entire (currently unpruned) channels in a tensor at random.",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "What tensor is prune.LnStructured based on?",
        "Y": "Ln-norm",
        "Z": "prune.LnStructured Prune entire (currently unpruned) channels in a tensor based on their Ln-norm.",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "What is entire (currently unpruned) channels in a tensor based on their Ln-",
        "Y": "prune.LnStructured Prune",
        "Z": "prune.LnStructured Prune entire (currently unpruned) channels in a tensor based on their Ln-norm.",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "What type of tree is a CustomFromMask?",
        "Y": "prune",
        "Z": "prune.CustomFromMask",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "What is prune?",
        "Y": "CustomFromMask",
        "Z": "prune.CustomFromMask",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "What is prune tensor?",
        "Y": "random",
        "Z": "prune.random_unstructured Prunes tensor corresponding to parameter callednameinmoduleby removing the specifiedamountof (currently unpruned) units selected at random.",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "What does prune.l1_unstructured Prunes tensor do by removing the specifiedamountof?",
        "Y": "removing the specifiedamountof",
        "Z": "prune.l1_unstructured Prunes tensor corresponding to parameter callednameinmoduleby removing the specifiedamountof (currently unpruned) units with the lowest L1-norm.",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "What type of prunes tensors?",
        "Y": "global_unstructured",
        "Z": "prune.global_unstructured Globally prunes tensors corresponding to all parameters inparametersby applying the specifiedpruning_method.",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "What does prune.global_unstructured globally prune?",
        "Y": "tensors",
        "Z": "prune.global_unstructured Globally prunes tensors corresponding to all parameters inparametersby applying the specifiedpruning_method.",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "Prunes tensor corresponding to parameter callednameinmodule by applying what?",
        "Y": "pre-computed mask inmask",
        "Z": "prune.custom_from_mask Prunes tensor corresponding to parameter callednameinmoduleby applying the pre-computed mask inmask.",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "What type of mask inmask does prune.custom_from_mask use?",
        "Y": "pre-computed",
        "Z": "prune.custom_from_mask Prunes tensor corresponding to parameter callednameinmoduleby applying the pre-computed mask inmask.",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "What Prunes tensor corresponding to parameter callednameinmodule by applying the pre-computed mask inmask?",
        "Y": "prune.custom_from_mask",
        "Z": "prune.custom_from_mask Prunes tensor corresponding to parameter callednameinmoduleby applying the pre-computed mask inmask.",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "Where does prune.remove remove the pruning method from?",
        "Y": "forward hook",
        "Z": "prune.remove Removes the pruning reparameterization from a module and the pruning method from the forward hook.",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "What does weight_norm apply to a parameter in a given module?",
        "Y": "weight normalization",
        "Z": "weight_norm Applies weight normalization to a parameter in the given module.",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "What applies weight normalization to a parameter in the given module?",
        "Y": "weight_norm",
        "Z": "weight_norm Applies weight normalization to a parameter in the given module.",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "weight_norm Applies what to a parameter in a given module?",
        "Y": "weight normalization",
        "Z": "weight_norm Applies weight normalization to a parameter in the given module.",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "What removes the weight normalization reparameterization from a module?",
        "Y": "remove_weight_norm",
        "Z": "remove_weight_norm Removes the weight normalization reparameterization from a module.",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "What does spectral_norm apply to a parameter in a given module?",
        "Y": "spectral normalization",
        "Z": "spectral_norm Applies spectral normalization to a parameter in the given module.",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "What Applies spectral normalization to a parameter in the given module?",
        "Y": "spectral_norm",
        "Z": "spectral_norm Applies spectral normalization to a parameter in the given module.",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "What removes the spectral normalization reparameterization from a module?",
        "Y": "remove_spectral_norm",
        "Z": "remove_spectral_norm Removes the spectral normalization reparameterization from a module.",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "What does remove_spectral_norm remove from a module?",
        "Y": "spectral normalization reparameterization",
        "Z": "remove_spectral_norm Removes the spectral normalization reparameterization from a module.",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "What applies spectral normalization to a parameter in a given module?",
        "Y": "parametrizations",
        "Z": "parametrizations.spectral_norm Applies spectral normalization to a parameter in the given module.",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "What does spectral_norm do?",
        "Y": "parametrizations",
        "Z": "parametrizations.spectral_norm Applies spectral normalization to a parameter in the given module.",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "In what type of module does parametrize.register_parametrization add a parametrization to a tensor?",
        "Y": "module",
        "Z": "parametrize.register_parametrization Adds a parametrization to a tensor in a module.",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "What does remove the parametrizations on a tensor in a module?",
        "Y": "parametrize",
        "Z": "parametrize.remove_parametrizations Removes the parametrizations on a tensor in a module.",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "What type of module does parametrize.remove_parametrizations remove the parametrizations on a tensor in?",
        "Y": "module",
        "Z": "parametrize.remove_parametrizations Removes the parametrizations on a tensor in a module.",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "The parametrize.cached Context manager enables the caching system within what?",
        "Y": "parametrizations",
        "Z": "parametrize.cached Context manager that enables the caching system within parametrizations registered withregister_parametrization().",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "What does the parametrize.cached Context manager enable the caching system within?",
        "Y": "parametrizations registered withregister_parametrization()",
        "Z": "parametrize.cached Context manager that enables the caching system within parametrizations registered withregister_parametrization().",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "What is Context manager that enables the caching system within parametrizations registered withregister_parametrization()?",
        "Y": "parametrize.cached",
        "Z": "parametrize.cached Context manager that enables the caching system within parametrizations registered withregister_parametrization().",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "What ReturnsTrue if module has an active parametrization?",
        "Y": "parametrize.is_parametrized",
        "Z": "parametrize.is_parametrized ReturnsTrue if module has an active parametrization.",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "What is container that holds and manages the originalparameter or buffer of a parametrizedtorch.nn.",
        "Y": "parametrize.ParametrizationList",
        "Z": "parametrize.ParametrizationList A sequential container that holds and manages theoriginalparameter or buffer of a parametrizedtorch.nn.Module.",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "What is a parametrize.ParametrizationList a sequential container that holds and manages theoriginalparameter or buffer of?",
        "Y": "parametrizedtorch",
        "Z": "parametrize.ParametrizationList A sequential container that holds and manages theoriginalparameter or buffer of a parametrizedtorch.nn.Module.",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "What holds the data and list ofbatch_sizesof a packed sequence?",
        "Y": "nn.utils.rnn.PackedSequence",
        "Z": "nn.utils.rnn.PackedSequence Holds the data and list ofbatch_sizesof a packed sequence.",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "What type of sequence contains padded sequences of variable length?",
        "Y": "Tensor",
        "Z": "nn.utils.rnn.pack_padded_sequence Packs a Tensor containing padded sequences of variable length.",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "What type of sequences are padded sequences?",
        "Y": "variable length",
        "Z": "nn.utils.rnn.pack_padded_sequence Packs a Tensor containing padded sequences of variable length.",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "What type of sequences does nn.utils.rnn.pack_padded_sequence Pack a Tensor",
        "Y": "padded sequences",
        "Z": "nn.utils.rnn.pack_padded_sequence Packs a Tensor containing padded sequences of variable length.",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "Pads a packed batch of what?",
        "Y": "variable length sequences",
        "Z": "nn.utils.rnn.pad_packed_sequence Pads a packed batch of variable length sequences.",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "What type of Tensors does nn.utils.rnn.pad_sequence Pad a list of?",
        "Y": "variable length",
        "Z": "nn.utils.rnn.pad_sequence Pad a list of variable length Tensors withpadding_value",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "Pad a list of variable length what?",
        "Y": "Tensors",
        "Z": "nn.utils.rnn.pad_sequence Pad a list of variable length Tensors withpadding_value",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "What type of Tensors does nn.utils.rnn.pack_sequence pack?",
        "Y": "variable length",
        "Z": "nn.utils.rnn.pack_sequence Packs a list of variable length Tensors",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "What is the variable length of a pack?",
        "Y": "Tensors",
        "Z": "nn.utils.rnn.pack_sequence Packs a list of variable length Tensors",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "nn.Flatten Flattens a contiguous range of what into a tensor?",
        "Y": "dims",
        "Z": "nn.Flatten Flattens a contiguous range of dims into a tensor.",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "nn.Flatten Flattens a contiguous range of dims into what?",
        "Y": "tensor",
        "Z": "nn.Flatten Flattens a contiguous range of dims into a tensor.",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "What does nn.Unflatten unflatten?",
        "Y": "tensor dim",
        "Z": "nn.Unflatten Unflattens a tensor dim expanding it to a desired shape.",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "What does Unflatten do to a tensor dim?",
        "Y": "expanding it to a desired shape",
        "Z": "nn.Unflatten Unflattens a tensor dim expanding it to a desired shape.",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "What is modules that lazily initialize parameters?",
        "Y": "lazy modules",
        "Z": "nn.modules.lazy.LazyModuleMixin A mixin for modules that lazily initialize parameters, also known as \u201clazy modules.\u201d",
        "source": "https://pytorch.org/docs/stable/nn.html"
    },
    {
        "X": "What is False sorted_sequence[i-1]values[m][n]...[l][x",
        "Y": "1-D",
        "Z": "1-D False sorted_sequence[i-1]<values[m][n]...[l][x]<=sorted_sequence[i]",
        "source": "https://pytorch.org/docs/stable/generated/torch.searchsorted.html#torch.searchsorted"
    },
    {
        "X": "What is sorted_sequence[i-1]values[m][n]...[l][x]=",
        "Y": "False",
        "Z": "1-D False sorted_sequence[i-1]<values[m][n]...[l][x]<=sorted_sequence[i]",
        "source": "https://pytorch.org/docs/stable/generated/torch.searchsorted.html#torch.searchsorted"
    },
    {
        "X": "sorted_sequence[i-1]=values[m][n]?",
        "Y": "True",
        "Z": "1-D True sorted_sequence[i-1]<=values[m][n]...[l][x]<sorted_sequence[i]",
        "source": "https://pytorch.org/docs/stable/generated/torch.searchsorted.html#torch.searchsorted"
    },
    {
        "X": "What is true sorted_sequence[i-1]=values[m][n]?",
        "Y": "1-D",
        "Z": "1-D True sorted_sequence[i-1]<=values[m][n]...[l][x]<sorted_sequence[i]",
        "source": "https://pytorch.org/docs/stable/generated/torch.searchsorted.html#torch.searchsorted"
    },
    {
        "X": "What is the default value for sorted_sequence[m][n]?",
        "Y": "False",
        "Z": "N-D False sorted_sequence[m][n]...[l][i-1]<values[m][n]...[l][x]<=sorted_sequence[m][n]...[l][i]",
        "source": "https://pytorch.org/docs/stable/generated/torch.searchsorted.html#torch.searchsorted"
    },
    {
        "X": "What is the value of sorted_sequence[m]?",
        "Y": "True",
        "Z": "N-D True sorted_sequence[m][n]...[l][i-1]<=values[m][n]...[l][x]<sorted_sequence[m][n]...[l][i]",
        "source": "https://pytorch.org/docs/stable/generated/torch.searchsorted.html#torch.searchsorted"
    },
    {
        "X": "What is the latest version of Microsoft Visual Studio?",
        "Y": "Visual Studio 2019",
        "Z": "10.1 Visual Studio 2019 (16.X) (_MSC_VER< 1930) 1.3.0 ~ 1.7.0",
        "source": "https://github.com/pytorch/pytorch/blob/master/CONTRIBUTING.md"
    },
    {
        "X": "10.1 Visual Studio 2019 (16.X) (_MSC_VER 1930)  1.7.0?",
        "Y": "1.3.0",
        "Z": "10.1 Visual Studio 2019 (16.X) (_MSC_VER< 1930) 1.3.0 ~ 1.7.0",
        "source": "https://github.com/pytorch/pytorch/blob/master/CONTRIBUTING.md"
    },
    {
        "X": "What is the version number of Visual Studio 2019?",
        "Y": "10.2",
        "Z": "10.2 Visual Studio 2019 (16.X) (_MSC_VER< 1930) 1.5.0 ~ 1.7.0",
        "source": "https://github.com/pytorch/pytorch/blob/master/CONTRIBUTING.md"
    },
    {
        "X": "What is the latest version of Visual Studio?",
        "Y": "Visual Studio 2019",
        "Z": "11.0 Visual Studio 2019 (16.X) (_MSC_VER< 1930) 1.7.0",
        "source": "https://github.com/pytorch/pytorch/blob/master/CONTRIBUTING.md"
    },
    {
        "X": "fft Computes the one dimensional discrete what of input?",
        "Y": "Fourier transform",
        "Z": "fft Computes the one dimensional discrete Fourier transform of input.",
        "source": "https://pytorch.org/docs/stable/fft.html"
    },
    {
        "X": "ifft Computes the one dimensional inverse discrete what of input?",
        "Y": "Fourier transform",
        "Z": "ifft Computes the one dimensional inverse discrete Fourier transform of input.",
        "source": "https://pytorch.org/docs/stable/fft.html"
    },
    {
        "X": "What computes the 2 dimensional inverse discrete Fourier transform of input?",
        "Y": "ifft2",
        "Z": "ifft2 Computes the 2 dimensional inverse discrete Fourier transform of input.",
        "source": "https://pytorch.org/docs/stable/fft.html"
    },
    {
        "X": "What Computes the 2 dimensional inverse discrete Fourier transform of input?",
        "Y": "ifft2",
        "Z": "ifft2 Computes the 2 dimensional inverse discrete Fourier transform of input.",
        "source": "https://pytorch.org/docs/stable/fft.html"
    },
    {
        "X": "fftn Computes the N dimensional discrete what?",
        "Y": "Fourier transform",
        "Z": "fftn Computes the N dimensional discrete Fourier transform of input.",
        "source": "https://pytorch.org/docs/stable/fft.html"
    },
    {
        "X": "What does fftn compute?",
        "Y": "N dimensional discrete Fourier transform",
        "Z": "fftn Computes the N dimensional discrete Fourier transform of input.",
        "source": "https://pytorch.org/docs/stable/fft.html"
    },
    {
        "X": "fftn Computes the N dimensional discrete what of input?",
        "Y": "Fourier transform",
        "Z": "fftn Computes the N dimensional discrete Fourier transform of input.",
        "source": "https://pytorch.org/docs/stable/fft.html"
    },
    {
        "X": "ifftn Computes the N dimensional inverse discrete what?",
        "Y": "Fourier transform",
        "Z": "ifftn Computes the N dimensional inverse discrete Fourier transform of input.",
        "source": "https://pytorch.org/docs/stable/fft.html"
    },
    {
        "X": "What does ifftn compute?",
        "Y": "N dimensional inverse discrete Fourier transform",
        "Z": "ifftn Computes the N dimensional inverse discrete Fourier transform of input.",
        "source": "https://pytorch.org/docs/stable/fft.html"
    },
    {
        "X": "What computes the N dimensional inverse discrete Fourier transform of input?",
        "Y": "ifftn",
        "Z": "ifftn Computes the N dimensional inverse discrete Fourier transform of input.",
        "source": "https://pytorch.org/docs/stable/fft.html"
    },
    {
        "X": "rfft Computes what kind of transform of real-valuedinput?",
        "Y": "one dimensional Fourier transform",
        "Z": "rfft Computes the one dimensional Fourier transform of real-valuedinput.",
        "source": "https://pytorch.org/docs/stable/fft.html"
    },
    {
        "X": "What Computes the one dimensional Fourier transform of real-valuedinput?",
        "Y": "rfft",
        "Z": "rfft Computes the one dimensional Fourier transform of real-valuedinput.",
        "source": "https://pytorch.org/docs/stable/fft.html"
    },
    {
        "X": "rfft Computes the one dimensional what of real-valuedinput?",
        "Y": "Fourier transform",
        "Z": "rfft Computes the one dimensional Fourier transform of real-valuedinput.",
        "source": "https://pytorch.org/docs/stable/fft.html"
    },
    {
        "X": "What Computes the inverse ofrfft()?",
        "Y": "irfft",
        "Z": "irfft Computes the inverse ofrfft().",
        "source": "https://pytorch.org/docs/stable/fft.html"
    },
    {
        "X": "What Computes the 2-dimensional discrete Fourier transform of realinput?",
        "Y": "rfft2",
        "Z": "rfft2 Computes the 2-dimensional discrete Fourier transform of realinput.",
        "source": "https://pytorch.org/docs/stable/fft.html"
    },
    {
        "X": "rfft2 Computes the 2-dimensional discrete Fourier transform of what?",
        "Y": "realinput",
        "Z": "rfft2 Computes the 2-dimensional discrete Fourier transform of realinput.",
        "source": "https://pytorch.org/docs/stable/fft.html"
    },
    {
        "X": "What Computes the inverse ofrfft2()?",
        "Y": "irfft2",
        "Z": "irfft2 Computes the inverse ofrfft2().",
        "source": "https://pytorch.org/docs/stable/fft.html"
    },
    {
        "X": "What does rfftn compute?",
        "Y": "N-dimensional discrete Fourier transform",
        "Z": "rfftn Computes the N-dimensional discrete Fourier transform of realinput.",
        "source": "https://pytorch.org/docs/stable/fft.html"
    },
    {
        "X": "rfftn Computes the N-dimensional discrete Fourier transform of what?",
        "Y": "realinput",
        "Z": "rfftn Computes the N-dimensional discrete Fourier transform of realinput.",
        "source": "https://pytorch.org/docs/stable/fft.html"
    },
    {
        "X": "What Computes the inverse ofrfftn()?",
        "Y": "irfftn",
        "Z": "irfftn Computes the inverse ofrfftn().",
        "source": "https://pytorch.org/docs/stable/fft.html"
    },
    {
        "X": "hfft Computes the one dimensional discrete what transform of a Hermitian symmetricinputsignal?",
        "Y": "Fourier",
        "Z": "hfft Computes the one dimensional discrete Fourier transform of a Hermitian symmetricinputsignal.",
        "source": "https://pytorch.org/docs/stable/fft.html"
    },
    {
        "X": "hfft Computes the one dimensional discrete what of a Hermitian symmetricinputsignal?",
        "Y": "Fourier transform",
        "Z": "hfft Computes the one dimensional discrete Fourier transform of a Hermitian symmetricinputsignal.",
        "source": "https://pytorch.org/docs/stable/fft.html"
    },
    {
        "X": "hfft Computes the one dimensional discrete Fourier transform of what?",
        "Y": "Hermitian symmetricinputsignal",
        "Z": "hfft Computes the one dimensional discrete Fourier transform of a Hermitian symmetricinputsignal.",
        "source": "https://pytorch.org/docs/stable/fft.html"
    },
    {
        "X": "What Computes the inverse ofhfft()?",
        "Y": "ihfft",
        "Z": "ihfft Computes the inverse ofhfft().",
        "source": "https://pytorch.org/docs/stable/fft.html"
    },
    {
        "X": "What computes the discrete Fourier Transform sample frequencies for a signal of sizen?",
        "Y": "fftfreq",
        "Z": "fftfreq Computes the discrete Fourier Transform sample frequencies for a signal of sizen.",
        "source": "https://pytorch.org/docs/stable/fft.html"
    },
    {
        "X": "fftfreq Computes the discrete what?",
        "Y": "Fourier Transform",
        "Z": "fftfreq Computes the discrete Fourier Transform sample frequencies for a signal of sizen.",
        "source": "https://pytorch.org/docs/stable/fft.html"
    },
    {
        "X": "rfftfreq Computes the sample frequencies forrfft()with a signal of what?",
        "Y": "sizen",
        "Z": "rfftfreq Computes the sample frequencies forrfft()with a signal of sizen.",
        "source": "https://pytorch.org/docs/stable/fft.html"
    },
    {
        "X": "What computes the sample frequencies forrfft?",
        "Y": "rfftfreq",
        "Z": "rfftfreq Computes the sample frequencies forrfft()with a signal of sizen.",
        "source": "https://pytorch.org/docs/stable/fft.html"
    },
    {
        "X": "What Computes the sample frequencies forrfft() with a signal of sizen?",
        "Y": "rfftfreq",
        "Z": "rfftfreq Computes the sample frequencies forrfft()with a signal of sizen.",
        "source": "https://pytorch.org/docs/stable/fft.html"
    },
    {
        "X": "fftshift reorders what dimension of FFT data?",
        "Y": "n-dimensional",
        "Z": "fftshift Reorders n-dimensional FFT data, as provided byfftn(), to have negative frequency terms first.",
        "source": "https://pytorch.org/docs/stable/fft.html"
    },
    {
        "X": "What does fftshift order FFT data to have first?",
        "Y": "negative frequency terms",
        "Z": "fftshift Reorders n-dimensional FFT data, as provided byfftn(), to have negative frequency terms first.",
        "source": "https://pytorch.org/docs/stable/fft.html"
    },
    {
        "X": "fftshift Reorders n-dimensional FFT data as provided by what?",
        "Y": "byfftn()",
        "Z": "fftshift Reorders n-dimensional FFT data, as provided byfftn(), to have negative frequency terms first.",
        "source": "https://pytorch.org/docs/stable/fft.html"
    },
    {
        "X": "What is function that does offftshift?",
        "Y": "ifftshift Inverse offftshift()",
        "Z": "ifftshift Inverse offftshift().",
        "source": "https://pytorch.org/docs/stable/fft.html"
    },
    {
        "X": "What is ifftshift Inverse?",
        "Y": "offftshift",
        "Z": "ifftshift Inverse offftshift().",
        "source": "https://pytorch.org/docs/stable/fft.html"
    },
    {
        "X": "What does i-1 mean?",
        "Y": "True boundaries",
        "Z": "True boundaries[i-1]<=input[m][n]...[l][x]<boundaries[i]",
        "source": "https://pytorch.org/docs/stable/generated/torch.bucketize.html#torch.bucketize"
    },
    {
        "X": "What does [i-1]input[m][n]...[l][x]=boundaries[i]?",
        "Y": "False boundaries",
        "Z": "False boundaries[i-1]<input[m][n]...[l][x]<=boundaries[i]",
        "source": "https://pytorch.org/docs/stable/generated/torch.bucketize.html#torch.bucketize"
    },
    {
        "X": "What does [i-1]=input[m][n]...[l][x]boundaries[i]?",
        "Y": "True boundaries",
        "Z": "True boundaries[i-1]<=input[m][n]...[l][x]<boundaries[i]",
        "source": "https://pytorch.org/docs/stable/generated/torch.bucketize.html#torch.bucketize"
    },
    {
        "X": "What does ornn.Module return?",
        "Y": "aScriptModuleorScriptFunction",
        "Z": "script Scripting a function ornn.Modulewill inspect the source code, compile it as TorchScript code using the TorchScript compiler, and return aScriptModuleorScriptFunction.",
        "source": "https://pytorch.org/docs/stable/jit.html"
    },
    {
        "X": "What type of compilation is used to optimize a function?",
        "Y": "just-in-time compilation",
        "Z": "trace Trace a function and return an executable  orScriptFunctionthat will be optimized using just-in-time compilation.",
        "source": "https://pytorch.org/docs/stable/jit.html"
    },
    {
        "X": "What will return an executable orScriptFunction that will be optimized using just-in-time compilation?",
        "Y": "trace Trace",
        "Z": "trace Trace a function and return an executable  orScriptFunctionthat will be optimized using just-in-time compilation.",
        "source": "https://pytorch.org/docs/stable/jit.html"
    },
    {
        "X": "What does script_if_tracing call when it is first called during tracing?",
        "Y": "Compilesfn",
        "Z": "script_if_tracing Compilesfnwhen it is first called during tracing.",
        "source": "https://pytorch.org/docs/stable/jit.html"
    },
    {
        "X": "What compilesfn when it is first called during tracing?",
        "Y": "script_if_tracing",
        "Z": "script_if_tracing Compilesfnwhen it is first called during tracing.",
        "source": "https://pytorch.org/docs/stable/jit.html"
    },
    {
        "X": "What does Compilesfn do when it is first called during tracing?",
        "Y": "script_if_tracing",
        "Z": "script_if_tracing Compilesfnwhen it is first called during tracing.",
        "source": "https://pytorch.org/docs/stable/jit.html"
    },
    {
        "X": "What is module that returns an executableScriptModule that will be optimized using just-in-time compilation?",
        "Y": "trace_module",
        "Z": "trace_module Trace a module and return an executableScriptModulethat will be optimized using just-in-time compilation.",
        "source": "https://pytorch.org/docs/stable/jit.html"
    },
    {
        "X": "what does fork create?",
        "Y": "an asynchronous task executingfunc",
        "Z": "fork Creates an asynchronous task executingfuncand a reference to the value of the result of this execution.",
        "source": "https://pytorch.org/docs/stable/jit.html"
    },
    {
        "X": "What creates an asynchronous task executingfuncand a reference to the value of the result of this execution?",
        "Y": "fork",
        "Z": "fork Creates an asynchronous task executingfuncand a reference to the value of the result of this execution.",
        "source": "https://pytorch.org/docs/stable/jit.html"
    },
    {
        "X": "What is the name of a.Future[T]asynchronous task?",
        "Y": "a torch.jit",
        "Z": "wait Forces completion of a torch.jit.Future[T]asynchronous task, returning the result of the task.",
        "source": "https://pytorch.org/docs/stable/jit.html"
    },
    {
        "X": "What does a torch.jit.Future[T]asynchronous wait for?",
        "Y": "Forces",
        "Z": "wait Forces completion of a torch.jit.Future[T]asynchronous task, returning the result of the task.",
        "source": "https://pytorch.org/docs/stable/jit.html"
    },
    {
        "X": "ScriptModule A wrapper around what?",
        "Y": "C++torch::jit::Module",
        "Z": "ScriptModule A wrapper around C++torch::jit::Module.",
        "source": "https://pytorch.org/docs/stable/jit.html"
    },
    {
        "X": "What is a wrapper around C++torch?",
        "Y": "ScriptModule",
        "Z": "ScriptModule A wrapper around C++torch::jit::Module.",
        "source": "https://pytorch.org/docs/stable/jit.html"
    },
    {
        "X": "What is ScriptModule a wrapper around?",
        "Y": "C++torch::jit::Module",
        "Z": "ScriptModule A wrapper around C++torch::jit::Module.",
        "source": "https://pytorch.org/docs/stable/jit.html"
    },
    {
        "X": "What is ScriptFunction functionally equivalent to?",
        "Y": "aScriptModule",
        "Z": "ScriptFunction Functionally equivalent to aScriptModule, but represents a single function and does not have any attributes or Parameters.",
        "source": "https://pytorch.org/docs/stable/jit.html"
    },
    {
        "X": "What does freeze Freezing aScriptModule do?",
        "Y": "clone it",
        "Z": "freeze Freezing aScriptModulewill clone it and attempt to inline the cloned module\u2019s submodules, parameters, and attributes as constants in the TorchScript IR Graph.",
        "source": "https://pytorch.org/docs/stable/jit.html"
    },
    {
        "X": "What does freeze Freezing attempt to inline the cloned module's submodules, parameters, and attributes as constants in",
        "Y": "TorchScript IR Graph",
        "Z": "freeze Freezing aScriptModulewill clone it and attempt to inline the cloned module\u2019s submodules, parameters, and attributes as constants in the TorchScript IR Graph.",
        "source": "https://pytorch.org/docs/stable/jit.html"
    },
    {
        "X": "How do you save an offline version of this module for use in a separate process?",
        "Y": "save",
        "Z": "save Save an offline version of this module for use in a separate process.",
        "source": "https://pytorch.org/docs/stable/jit.html"
    },
    {
        "X": "What kind of version of this module can be saved for use in a separate process?",
        "Y": "offline",
        "Z": "save Save an offline version of this module for use in a separate process.",
        "source": "https://pytorch.org/docs/stable/jit.html"
    },
    {
        "X": "What did load Load aScriptModuleorScriptFunctionpreviously save?",
        "Y": "with torch.jit.save",
        "Z": "load Load aScriptModuleorScriptFunctionpreviously saved with torch.jit.save",
        "source": "https://pytorch.org/docs/stable/jit.html"
    },
    {
        "X": "What was previously saved with torch.jit.saved?",
        "Y": "Load aScriptModuleorScriptFunction",
        "Z": "load Load aScriptModuleorScriptFunctionpreviously saved with torch.jit.save",
        "source": "https://pytorch.org/docs/stable/jit.html"
    },
    {
        "X": "What did load Load aScriptModuleorScriptFunctionpreviously saved?",
        "Y": "with torch.jit.save",
        "Z": "load Load aScriptModuleorScriptFunctionpreviously saved with torch.jit.save",
        "source": "https://pytorch.org/docs/stable/jit.html"
    },
    {
        "X": "What language does ignore indicate to the compiler that a function or method should be ignored and left as?",
        "Y": "Python",
        "Z": "ignore This decorator indicates to the compiler that a function or method should be ignored and left as a Python function.",
        "source": "https://pytorch.org/docs/stable/jit.html"
    },
    {
        "X": "What does the decorator indicate to the compiler that should be ignored and left as a Python function?",
        "Y": "a function or method",
        "Z": "ignore This decorator indicates to the compiler that a function or method should be ignored and left as a Python function.",
        "source": "https://pytorch.org/docs/stable/jit.html"
    },
    {
        "X": "The decorator indicates to the compiler that a function or method should be what and left as a Python function?",
        "Y": "ignored",
        "Z": "ignore This decorator indicates to the compiler that a function or method should be ignored and left as a Python function.",
        "source": "https://pytorch.org/docs/stable/jit.html"
    },
    {
        "X": "What indicates to the compiler that a function or method should be ignored and replaced with the raising of an exception?",
        "Y": "decorator",
        "Z": "unused This decorator indicates to the compiler that a function or method should be ignored and replaced with the raising of an exception.",
        "source": "https://pytorch.org/docs/stable/jit.html"
    },
    {
        "X": "The isinstance function provides for conatiner type refinement in what?",
        "Y": "TorchScript",
        "Z": "isinstance This function provides for conatiner type refinement in TorchScript.",
        "source": "https://pytorch.org/docs/stable/jit.html"
    },
    {
        "X": "What does isinstance provide for in TorchScript?",
        "Y": "conatiner type refinement",
        "Z": "isinstance This function provides for conatiner type refinement in TorchScript.",
        "source": "https://pytorch.org/docs/stable/jit.html"
    },
    {
        "X": "What function provides for conatiner type refinement in TorchScript?",
        "Y": "isinstance",
        "Z": "isinstance This function provides for conatiner type refinement in TorchScript.",
        "source": "https://pytorch.org/docs/stable/jit.html"
    },
    {
        "X": "isinstance provides for conatiner type refinement in what?",
        "Y": "TorchScript",
        "Z": "isinstance This function provides for conatiner type refinement in TorchScript.",
        "source": "https://pytorch.org/docs/stable/jit.html"
    },
    {
        "X": "What does Attribute This method indicate to the TorchScript compiler that the left-hand side expression is a class instance of?",
        "Y": "attribute",
        "Z": "Attribute This method is a pass-through function that returnsvalue, mostly used to indicate to the TorchScript compiler that the left-hand side expression is a class instance attribute with type oftype.",
        "source": "https://pytorch.org/docs/stable/jit.html"
    },
    {
        "X": "What compiler uses Attribute This method to indicate that the left-hand side expression is a class instance attribute with type oftype?",
        "Y": "TorchScript",
        "Z": "Attribute This method is a pass-through function that returnsvalue, mostly used to indicate to the TorchScript compiler that the left-hand side expression is a class instance attribute with type oftype.",
        "source": "https://pytorch.org/docs/stable/jit.html"
    },
    {
        "X": "Attribute This method is used to indicate to the TorchScript compiler that the left-hand side expression is a what?",
        "Y": "class instance attribute",
        "Z": "Attribute This method is a pass-through function that returnsvalue, mostly used to indicate to the TorchScript compiler that the left-hand side expression is a class instance attribute with type oftype.",
        "source": "https://pytorch.org/docs/stable/jit.html"
    },
    {
        "X": "Attribute This method is mostly used to indicate to whom that the left-hand side expression is a class instance attribute with type oftype?",
        "Y": "the TorchScript compiler",
        "Z": "Attribute This method is a pass-through function that returnsvalue, mostly used to indicate to the TorchScript compiler that the left-hand side expression is a class instance attribute with type oftype.",
        "source": "https://pytorch.org/docs/stable/jit.html"
    },
    {
        "X": "Attribute This method is mostly used to indicate to the TorchScript compiler that the left-hand side expression is what?",
        "Y": "a class instance attribute with type oftype",
        "Z": "Attribute This method is a pass-through function that returnsvalue, mostly used to indicate to the TorchScript compiler that the left-hand side expression is a class instance attribute with type oftype.",
        "source": "https://pytorch.org/docs/stable/jit.html"
    },
    {
        "X": "Who uses the annotate method to hint at the type of the value?",
        "Y": "TorchScript compiler",
        "Z": "annotate This method is a pass-through function that returnsthe_value, used to hint TorchScript compiler the type ofthe_value.",
        "source": "https://pytorch.org/docs/stable/jit.html"
    },
    {
        "X": "What is a pass-through function that returns the_value?",
        "Y": "annotate",
        "Z": "annotate This method is a pass-through function that returnsthe_value, used to hint TorchScript compiler the type ofthe_value.",
        "source": "https://pytorch.org/docs/stable/jit.html"
    },
    {
        "X": "What compiler uses the annotate method to hint at the type of the_value?",
        "Y": "TorchScript",
        "Z": "annotate This method is a pass-through function that returnsthe_value, used to hint TorchScript compiler the type ofthe_value.",
        "source": "https://pytorch.org/docs/stable/jit.html"
    },
    {
        "X": "What is 'fro'?",
        "Y": "Frobenius norm",
        "Z": "\u2019fro\u2019 Frobenius norm \u2013",
        "source": "https://pytorch.org/docs/stable/generated/torch.norm.html#torch.norm"
    },
    {
        "X": "What is the term for 'fro'?",
        "Y": "Frobenius norm",
        "Z": "\u2019fro\u2019 Frobenius norm \u2013",
        "source": "https://pytorch.org/docs/stable/generated/torch.norm.html#torch.norm"
    },
    {
        "X": "What is the definition of a nuclear standard?",
        "Y": "nuclear norm",
        "Z": "\u2018nuc\u2019 nuclear norm \u2013",
        "source": "https://pytorch.org/docs/stable/generated/torch.norm.html#torch.norm"
    },
    {
        "X": "What is \u2018nuc\u2019?",
        "Y": "nuclear norm",
        "Z": "\u2018nuc\u2019 nuclear norm \u2013",
        "source": "https://pytorch.org/docs/stable/generated/torch.norm.html#torch.norm"
    },
    {
        "X": "What is the sum of abs(x)**ord)**(1./ord)?",
        "Y": "Number",
        "Z": "Number \u2013 sum(abs(x)**ord)**(1./ord)",
        "source": "https://pytorch.org/docs/stable/generated/torch.norm.html#torch.norm"
    },
    {
        "X": "What is a number?",
        "Y": "sum(abs(x)**ord)**(1./ord)",
        "Z": "Number \u2013 sum(abs(x)**ord)**(1./ord)",
        "source": "https://pytorch.org/docs/stable/generated/torch.norm.html#torch.norm"
    },
    {
        "X": "What is Linear / Identity 111?",
        "Y": "Linear / Identity 111",
        "Z": "Linear / Identity 111",
        "source": "https://pytorch.org/docs/stable/nn.init.html"
    },
    {
        "X": "What is the definition of Linear / Identity 111?",
        "Y": "Linear / Identity 111",
        "Z": "Linear / Identity 111",
        "source": "https://pytorch.org/docs/stable/nn.init.html"
    },
    {
        "X": "How many Conv1,2,3D are there?",
        "Y": "111",
        "Z": "Conv{1,2,3}D 111",
        "source": "https://pytorch.org/docs/stable/nn.init.html"
    },
    {
        "X": "How many conv1,2,3D?",
        "Y": "111",
        "Z": "Conv{1,2,3}D 111",
        "source": "https://pytorch.org/docs/stable/nn.init.html"
    },
    {
        "X": "What is Sigmoid 111?",
        "Y": "Sigmoid 111",
        "Z": "Sigmoid 111",
        "source": "https://pytorch.org/docs/stable/nn.init.html"
    },
    {
        "X": "What is Sigmoid?",
        "Y": "Sigmoid 111",
        "Z": "Sigmoid 111",
        "source": "https://pytorch.org/docs/stable/nn.init.html"
    },
    {
        "X": "What is the term for 53frac5335?",
        "Y": "Tanh",
        "Z": "Tanh 53\\frac{5}{3}35\u200b",
        "source": "https://pytorch.org/docs/stable/nn.init.html"
    },
    {
        "X": "How many lines does Leaky Relu have?",
        "Y": "21",
        "Z": "Leaky Relu 21+negative_slope2\\sqrt{\\frac{2}{1 + \\text{negative\\_slope}^2}}1+negative_slope22\u200b\u200b",
        "source": "https://pytorch.org/docs/stable/nn.init.html"
    },
    {
        "X": "Who is responsible for 21+negative_slope2sqrtfrac21 + textnegative_s",
        "Y": "Leaky Relu",
        "Z": "Leaky Relu 21+negative_slope2\\sqrt{\\frac{2}{1 + \\text{negative\\_slope}^2}}1+negative_slope22\u200b\u200b",
        "source": "https://pytorch.org/docs/stable/nn.init.html"
    },
    {
        "X": "What is negative slope2sqrtfrac21 + textnegative_slope",
        "Y": "Leaky Relu 21",
        "Z": "Leaky Relu 21+negative_slope2\\sqrt{\\frac{2}{1 + \\text{negative\\_slope}^2}}1+negative_slope22\u200b\u200b",
        "source": "https://pytorch.org/docs/stable/nn.init.html"
    },
    {
        "X": "What is a float32ortorch?",
        "Y": "32-bit floating point torch",
        "Z": "32-bit floating point torch.float32ortorch.float torch.FloatTensor torch.cuda.FloatTensor",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "How many bits is float32ortorch?",
        "Y": "32",
        "Z": "32-bit floating point torch.float32ortorch.float torch.FloatTensor torch.cuda.FloatTensor",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "How many bits are in a floating point1 torch?",
        "Y": "16",
        "Z": "16-bit floating point1 torch.float16ortorch.half torch.HalfTensor torch.cuda.HalfTensor",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What torch is a cuda?",
        "Y": "HalfTensor",
        "Z": "16-bit floating point1 torch.float16ortorch.half torch.HalfTensor torch.cuda.HalfTensor",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What type of torch is the bfloat16 torch?",
        "Y": "16-bit floating point2 torch",
        "Z": "16-bit floating point2 torch.bfloat16 torch.BFloat16Tensor torch.cuda.BFloat16Tensor",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is bfloat16 torch?",
        "Y": "16-bit floating point2 torch",
        "Z": "16-bit floating point2 torch.bfloat16 torch.BFloat16Tensor torch.cuda.BFloat16Tensor",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What type of torch is complex32?",
        "Y": "32-bit",
        "Z": "32-bit complex torch.complex32",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is 32-bit complex torch?",
        "Y": "complex32",
        "Z": "32-bit complex torch.complex32",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is the bit count for a complex torch?",
        "Y": "64",
        "Z": "64-bit complex torch.complex64",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is 64-bit version of the torch?",
        "Y": "complex torch.complex64",
        "Z": "64-bit complex torch.complex64",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What kind of complex torch is complex64?",
        "Y": "64-bit",
        "Z": "64-bit complex torch.complex64",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is 64-bit complex torch?",
        "Y": "complex64",
        "Z": "64-bit complex torch.complex64",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "Int8 torch.cuda.CharTensor torch.cuda.CharTensor torch.cuda.",
        "Y": "8-bit",
        "Z": "8-bit integer (signed) torch.int8 torch.CharTensor torch.cuda.CharTensor",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "How many bit integers are in the torch?",
        "Y": "32",
        "Z": "32-bit integer (signed) torch.int32ortorch.int torch.IntTensor torch.cuda.IntTensor",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "Int32ortorch.int torch.cuda.IntTensor torch.cuda.IntT",
        "Y": "32-bit",
        "Z": "32-bit integer (signed) torch.int32ortorch.int torch.IntTensor torch.cuda.IntTensor",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What type of integer is the torch?",
        "Y": "64-bit",
        "Z": "64-bit integer (signed) torch.int64ortorch.long torch.LongTensor torch.cuda.LongTensor",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is the torch.cuda.LongTensor?",
        "Y": "LongTensor",
        "Z": "64-bit integer (signed) torch.int64ortorch.long torch.LongTensor torch.cuda.LongTensor",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is the BoolTensor torch?",
        "Y": "Boolean torch",
        "Z": "Boolean torch.bool torch.BoolTensor torch.cuda.BoolTensor",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is torch?",
        "Y": "Boolean torch",
        "Z": "Boolean torch.bool torch.BoolTensor torch.cuda.BoolTensor",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is a quantized torch?",
        "Y": "4-bit integer",
        "Z": "quantized 4-bit integer (unsigned)3 torch.quint4x2 torch.ByteTensor /",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is a torch that is unsigned?",
        "Y": "quantized 8-bit integer",
        "Z": "quantized 8-bit integer (unsigned) torch.quint8 torch.ByteTensor /",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is torch.qint8?",
        "Y": "quantized 8-bit integer",
        "Z": "quantized 8-bit integer (signed) torch.qint8 torch.CharTensor /",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is torch.qfint32?",
        "Y": "32-bit integer",
        "Z": "quantized 32-bit integer (signed) torch.qfint32 torch.IntTensor /",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is torch.IntTensor?",
        "Y": "quantized 32-bit integer",
        "Z": "quantized 32-bit integer (signed) torch.qfint32 torch.IntTensor /",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What type of torch is unsigned?",
        "Y": "quantized 4-bit integer",
        "Z": "quantized 4-bit integer (unsigned)3 torch.quint4x2 torch.ByteTensor /",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is a quantized 4-bit integer (unsigned)3 torch?",
        "Y": "ByteTensor",
        "Z": "quantized 4-bit integer (unsigned)3 torch.quint4x2 torch.ByteTensor /",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is quantized 4-bit integer (unsigned)3 torch?",
        "Y": "quantized 4-bit integer (unsigned)3 torch",
        "Z": "quantized 4-bit integer (unsigned)3 torch.quint4x2 torch.ByteTensor /",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What returns a new Tensor withdataas the tensor data?",
        "Y": "Tensor.new_tensor",
        "Z": "Tensor.new_tensor Returns a new Tensor withdataas the tensor data.",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "Tensor.new_full returns a Tensor of what size?",
        "Y": "size filled",
        "Z": "Tensor.new_full Returns a Tensor of  size filled with fill_value.",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What returns a Tensor of  size filled with fill_value?",
        "Y": "Tensor.new_full",
        "Z": "Tensor.new_full Returns a Tensor of  size filled with fill_value.",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What type of Tensor does new_empty return?",
        "Y": "size filled with uninitialized data",
        "Z": "Tensor.new_empty Returns a Tensor of  size filled with uninitialized data.",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What returns a Tensor of  size filled with uninitialized data?",
        "Y": "Tensor.new_empty",
        "Z": "Tensor.new_empty Returns a Tensor of  size filled with uninitialized data.",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What type of data does Tensor.new_empty return?",
        "Y": "uninitialized data",
        "Z": "Tensor.new_empty Returns a Tensor of  size filled with uninitialized data.",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What type of Tensor is returned by Tensor.new_ones?",
        "Y": "size filled",
        "Z": "Tensor.new_ones Returns a Tensor of  size filled with1.",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is the Tensor returned by Tensor.new_ones?",
        "Y": "size filled with1",
        "Z": "Tensor.new_ones Returns a Tensor of  size filled with1.",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What type of Tensor returns a Tensor?",
        "Y": "size filled",
        "Z": "Tensor.new_zeros Returns a Tensor of  size filled with0.",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is device where the Tensor is located?",
        "Y": "thetorch",
        "Z": "Tensor.device Is The torch.devicewhere this Tensor is.",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is first call to compute gradients for itself?",
        "Y": "tobackward()",
        "Z": "torch.Tensor.grad This attribute is None bydefault and becomes a Tensor the first time a call to backward() computes gradients forself.",
        "source": "https://pytorch.org/docs/stable/autograd.html"
    },
    {
        "X": "What attribute is None byby default?",
        "Y": "Tensor.grad",
        "Z": "Tensor.grad This attribute is None bydefault and becomes a Tensor the first time a call to backward() computes gradients forself.",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Tensor.ndim Alias fordim?",
        "Y": "Tensor.ndim Alias fordim",
        "Z": "Tensor.ndim Alias fordim()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Alias fordim?",
        "Y": "Tensor.ndim",
        "Z": "Tensor.ndim Alias fordim()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is.abs Seetorch.abs()?",
        "Y": "Tensor",
        "Z": "Tensor.abs Seetorch.abs()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Tensor.abs?",
        "Y": "Seetorch",
        "Z": "Tensor.abs Seetorch.abs()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Seetorch.abs() function?",
        "Y": "Tensor.abs",
        "Z": "Tensor.abs Seetorch.abs()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What does Tensor.abs_ In-place version ofabs() do?",
        "Y": "Tensor.abs_ In-place version ofabs()",
        "Z": "Tensor.abs_ In-place version ofabs()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is version ofabs()?",
        "Y": "Tensor.abs_ In-place",
        "Z": "Tensor.abs_ In-place version ofabs()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is program that creates Alias forabs?",
        "Y": "Tensor",
        "Z": "Tensor.absolute Alias forabs()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What type of Alias are forabs?",
        "Y": "Tensor.absolute Alias",
        "Z": "Tensor.absolute Alias forabs()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is the Tensor.absolute_ In-place version of?",
        "Y": "absolute()Alias forabs_()",
        "Z": "Tensor.absolute_ In-place version ofabsolute()Alias forabs_()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is in-place version of absolute()Alias forabs_()?",
        "Y": "Tensor.absolute_ In-place version",
        "Z": "Tensor.absolute_ In-place version ofabsolute()Alias forabs_()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Seetorch.acos?",
        "Y": "Tensor.acos",
        "Z": "Tensor.acos Seetorch.acos()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Tensor.acos?",
        "Y": "Seetorch.acos",
        "Z": "Tensor.acos Seetorch.acos()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What does Tensor.acos_ In-place version ofacos() do?",
        "Y": "Tensor.acos_ In-place version ofacos()",
        "Z": "Tensor.acos_ In-place version ofacos()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is in-place version ofacos?",
        "Y": "Tensor.acos",
        "Z": "Tensor.acos_ In-place version ofacos()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Tensor.arccos?",
        "Y": "Seetorch.arccos",
        "Z": "Tensor.arccos Seetorch.arccos()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is arccos function?",
        "Y": "Tensor.arccos_ In-place version ofarccos()",
        "Z": "Tensor.arccos_ In-place version ofarccos()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is In-place version ofarccos?",
        "Y": "Tensor.arccos",
        "Z": "Tensor.arccos_ In-place version ofarccos()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is a scalar or tensor toselftensor?",
        "Y": "Tensor",
        "Z": "Tensor.add Add a scalar or tensor toselftensor.",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is a tensor toselftensor?",
        "Y": "scalar",
        "Z": "Tensor.add Add a scalar or tensor toselftensor.",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is add function?",
        "Y": "Tensor.add_ In-place version ofadd()",
        "Z": "Tensor.add_ In-place version ofadd()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is version of add()?",
        "Y": "Tensor.add_ In-place",
        "Z": "Tensor.add_ In-place version ofadd()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is the Seetorch?",
        "Y": "Tensor",
        "Z": "Tensor.addmm Seetorch.addmm()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Tensor.addbmm?",
        "Y": "Seetorch",
        "Z": "Tensor.addbmm Seetorch.addbmm()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is the term for a Seetorch?",
        "Y": "Tensor",
        "Z": "Tensor.addmm Seetorch.addmm()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is in-place version of addbmm()?",
        "Y": "Tensor.addbmm_ In-place version ofaddbmm()",
        "Z": "Tensor.addbmm_ In-place version ofaddbmm()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What version ofaddbmm() is used?",
        "Y": "Tensor.addbmm_ In-place",
        "Z": "Tensor.addbmm_ In-place version ofaddbmm()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is file?",
        "Y": "Tensor.trunc Seetorch.trunc",
        "Z": "Tensor.trunc Seetorch.trunc()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What does Seetorch.addcdiv() call?",
        "Y": "Tensor.addcdiv",
        "Z": "Tensor.addcdiv Seetorch.addcdiv()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is in-place version of addcdiv()?",
        "Y": "Tensor.addcdiv_ In-place version ofaddcdiv()",
        "Z": "Tensor.addcdiv_ In-place version ofaddcdiv()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is version ofaddcdiv()?",
        "Y": "Tensor.addcdiv_ In-place",
        "Z": "Tensor.addcdiv_ In-place version ofaddcdiv()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is program?",
        "Y": "Tensor.addcmul Seetorch.addcmul",
        "Z": "Tensor.addcmul Seetorch.addcmul()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Tensor?",
        "Y": "Seetorch",
        "Z": "Tensor.xlogy Seetorch.xlogy()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What does Seetorch.addcmul() do?",
        "Y": "Tensor.addcmul",
        "Z": "Tensor.addcmul Seetorch.addcmul()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is in-place version of addcmul()?",
        "Y": "Tensor.addcmul_ In-place version ofaddcmul()",
        "Z": "Tensor.addcmul_ In-place version ofaddcmul()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What version ofaddcmul() is used?",
        "Y": "Tensor.addcmul_ In-place",
        "Z": "Tensor.addcmul_ In-place version ofaddcmul()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is in-place version of addmm()?",
        "Y": "Tensor.addmm_ In-place version ofaddmm()",
        "Z": "Tensor.addmm_ In-place version ofaddmm()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is version ofaddmm()?",
        "Y": "Tensor.addmm_ In-place",
        "Z": "Tensor.addmm_ In-place version ofaddmm()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What does Tensor.addmv Seetorch.addmv do?",
        "Y": "Tensor.addmv Seetorch.addmv()",
        "Z": "Tensor.addmv Seetorch.addmv()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Tensor.addmv?",
        "Y": "Seetorch",
        "Z": "Tensor.addmv Seetorch.addmv()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Seetorch.addmv() function?",
        "Y": "Tensor.addmv",
        "Z": "Tensor.addmv Seetorch.addmv()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is function used by addmv()?",
        "Y": "Tensor.addmv_ In-place version ofaddmv()",
        "Z": "Tensor.addmv_ In-place version ofaddmv()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What version ofaddmv() is used?",
        "Y": "Tensor.addmv_ In-place",
        "Z": "Tensor.addmv_ In-place version ofaddmv()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What does Tensor.addr do?",
        "Y": "Tensor.addr Seetorch.addr()",
        "Z": "Tensor.addr Seetorch.addr()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Tensor.addr?",
        "Y": "Seetorch.addr",
        "Z": "Tensor.addr Seetorch.addr()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Seetorch.addr?",
        "Y": "Tensor.addr",
        "Z": "Tensor.addr Seetorch.addr()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is in-place version ofaddr()?",
        "Y": "Tensor.addr_ In-place version ofaddr()",
        "Z": "Tensor.addr_ In-place version ofaddr()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is version ofaddr()?",
        "Y": "Tensor.addr_ In-place",
        "Z": "Tensor.addr_ In-place version ofaddr()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is company that owns the Seetorch?",
        "Y": "Tensor.allclose Seetorch.allclose",
        "Z": "Tensor.allclose Seetorch.allclose()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What does Tensor.allclose?",
        "Y": "Seetorch",
        "Z": "Tensor.allclose Seetorch.allclose()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Tensor.amax Seetorch.amax?",
        "Y": "Tensor.amax Seetorch.amax",
        "Z": "Tensor.amax Seetorch.amax()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Seetorch.amin?",
        "Y": "Tensor.amin",
        "Z": "Tensor.amin Seetorch.amin()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Tensor.amin Seetorch.amin?",
        "Y": "Tensor.amin Seetorch.amin",
        "Z": "Tensor.amin Seetorch.amin()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Tensor.angle Seetorch.angle?",
        "Y": "Tensor.angle Seetorch.angle",
        "Z": "Tensor.angle Seetorch.angle()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is a Tensor.angle?",
        "Y": "Tensor.angle Seetorch.angle",
        "Z": "Tensor.angle Seetorch.angle()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What does Tensor.apply_ apply to each element in the tensor?",
        "Y": "functioncallable",
        "Z": "Tensor.apply_ Applies the functioncallableto each element in the tensor, replacing each element with the value returned bycallable.",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What applies the functioncallableto each element in the tensor?",
        "Y": "Tensor.apply_",
        "Z": "Tensor.apply_ Applies the functioncallableto each element in the tensor, replacing each element with the value returned bycallable.",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Tensor.argmax Seetorch.argmax?",
        "Y": "Tensor.argmax Seetorch.argmax",
        "Z": "Tensor.argmax Seetorch.argmax()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Seetorch.argmax() function?",
        "Y": "Tensor.argmax",
        "Z": "Tensor.argmax Seetorch.argmax()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Tensor.argmin?",
        "Y": "Seetorch",
        "Z": "Tensor.argmin Seetorch.argmin()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Seetorch.argmin?",
        "Y": "Tensor.argmin",
        "Z": "Tensor.argmin Seetorch.argmin()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What does Tensor.argsort Seetorch.argsort() do?",
        "Y": "Tensor.argsort Seetorch.argsort()",
        "Z": "Tensor.argsort Seetorch.argsort()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is In-place version ofasin()?",
        "Y": "Tensor.asin",
        "Z": "Tensor.asin_ In-place version ofasin()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What does Seetorch.arcsin call?",
        "Y": "Tensor.arcsin",
        "Z": "Tensor.arcsin Seetorch.arcsin()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Tensor.arcsin?",
        "Y": "Seetorch.arcsin",
        "Z": "Tensor.arcsin Seetorch.arcsin()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Seetorch.arcsin?",
        "Y": "Tensor.arcsin",
        "Z": "Tensor.arcsin Seetorch.arcsin()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is in-place version of arcsin()?",
        "Y": "Tensor.arcsin_ In-place version ofarcsin()",
        "Z": "Tensor.arcsin_ In-place version ofarcsin()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is In-place version ofarcsin()?",
        "Y": "Tensor.arcsin",
        "Z": "Tensor.arcsin_ In-place version ofarcsin()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What does Tensor.as_strided Seetorch.as_strided() do?",
        "Y": "Tensor.as_strided Seetorch.as_strided()",
        "Z": "Tensor.as_strided Seetorch.as_strided()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is a Tensor.as_strided?",
        "Y": "Seetorch",
        "Z": "Tensor.as_strided Seetorch.as_strided()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Tensor.atan Seetorch.atan?",
        "Y": "Tensor.atan Seetorch.atan",
        "Z": "Tensor.atan Seetorch.atan()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Tensor.atan?",
        "Y": "Tensor.atan Seetorch.atan",
        "Z": "Tensor.atan Seetorch.atan()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is in-place version of atan?",
        "Y": "Tensor.atan_ In-place version ofatan()",
        "Z": "Tensor.atan_ In-place version ofatan()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is In-place version of atan?",
        "Y": "Tensor.atan",
        "Z": "Tensor.atan_ In-place version ofatan()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Seetorch.arctan?",
        "Y": "Tensor.arctan",
        "Z": "Tensor.arctan Seetorch.arctan()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is in-place version of arctan?",
        "Y": "Tensor.arctan_ In-place version ofarctan()",
        "Z": "Tensor.arctan_ In-place version ofarctan()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is In-place version ofarctan?",
        "Y": "Tensor.arctan",
        "Z": "Tensor.arctan_ In-place version ofarctan()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What does Tensor.atan2 Seetorch.atan2() do?",
        "Y": "Tensor.atan2 Seetorch.atan2()",
        "Z": "Tensor.atan2 Seetorch.atan2()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Tensor.atan2 Seetorch.atan2()?",
        "Y": "Tensor.atan2 Seetorch.atan2()",
        "Z": "Tensor.atan2 Seetorch.atan2()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is in-place version of atan2()?",
        "Y": "Tensor.atan2_ In-place version ofatan2()",
        "Z": "Tensor.atan2_ In-place version ofatan2()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is version of atan2()?",
        "Y": "Tensor.atan2_ In-place",
        "Z": "Tensor.atan2_ In-place version ofatan2()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Tensor.all Seetorch?",
        "Y": "Tensor.all Seetorch.all",
        "Z": "Tensor.all Seetorch.all()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is a Seetorch?",
        "Y": "Tensor",
        "Z": "Tensor.any Seetorch.any()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What computes the gradient of current tensor w.r.t?",
        "Y": "Tensor",
        "Z": "Tensor.backward Computes the gradient of current tensor w.r.t.",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What computes the gradient of current tensor w.r.t.?",
        "Y": "Tensor.backward",
        "Z": "Tensor.backward Computes the gradient of current tensor w.r.t.",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is a baddbmm Seetorch?",
        "Y": "Tensor",
        "Z": "Tensor.baddbmm Seetorch.baddbmm()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is In-place version ofbaddbmm()?",
        "Y": "Tensor.baddbmm_ In-place version ofbaddbmm()",
        "Z": "Tensor.baddbmm_ In-place version ofbaddbmm()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is version ofbaddbmm()?",
        "Y": "Tensor.baddbmm_ In-place",
        "Z": "Tensor.baddbmm_ In-place version ofbaddbmm()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "Eachresult[i]textttresult[i]result[i]is what?",
        "Y": "independently sampled",
        "Z": "Tensor.bernoulli Returns a result tensor where eachresult[i]\\texttt{result[i]}result[i]is independently sampled fromBernoulli(self[i])\\text{Bernoulli}(\\texttt{self[i]})Bernoulli(self[i]).",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What fills each location ofselfwith an independent sample fromBernoulli(p)textBernoulli(",
        "Y": "Tensor.bernoulli",
        "Z": "Tensor.bernoulli_ Fills each location ofselfwith an independent sample fromBernoulli(p)\\text{Bernoulli}(\\texttt{p})Bernoulli(p).",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is equivalent to self.to(torch.bfloat16)?",
        "Y": "self.bfloat16",
        "Z": "Tensor.bfloat16 self.bfloat16()is equivalent toself.to(torch.bfloat16).",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is self.bfloat16 equivalent to?",
        "Y": "self.to(torch.bfloat16)",
        "Z": "Tensor.bfloat16 self.bfloat16()is equivalent toself.to(torch.bfloat16).",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Tensor.bincount?",
        "Y": "Seetorch.bincount()",
        "Z": "Tensor.bincount Seetorch.bincount()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Seetorch.bincount function?",
        "Y": "Tensor.bincount",
        "Z": "Tensor.bincount Seetorch.bincount()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is component that makes a bitwise_not Seetorch.bitwise_not()?",
        "Y": "Tensor",
        "Z": "Tensor.bitwise_not Seetorch.bitwise_not()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is in-place version ofbitwise_not?",
        "Y": "Tensor",
        "Z": "Tensor.bitwise_not_ In-place version ofbitwise_not()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is In-place version ofbitwise_not()?",
        "Y": "Tensor.bitwise_not",
        "Z": "Tensor.bitwise_not_ In-place version ofbitwise_not()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is a bitwise and Seetorch?",
        "Y": "Tensor",
        "Z": "Tensor.bitwise_and Seetorch.bitwise_and()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is the.bitwise_and_ In-place version ofbitwise_and?",
        "Y": "Tensor",
        "Z": "Tensor.bitwise_and_ In-place version ofbitwise_and()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What version of bitwise_and() is used?",
        "Y": "Tensor.bitwise_and_ In-place",
        "Z": "Tensor.bitwise_and_ In-place version ofbitwise_and()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is function?",
        "Y": "Tensor.diagonal Seetorch.diagonal()",
        "Z": "Tensor.diagonal Seetorch.diagonal()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Seetorch.bitwise_or?",
        "Y": "Tensor.bitwise_or",
        "Z": "Tensor.bitwise_or Seetorch.bitwise_or()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is In-place version ofbitwise_or?",
        "Y": "Tensor.bitwise_or_ In-place version ofbitwise_or()",
        "Z": "Tensor.bitwise_or_ In-place version ofbitwise_or()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is the In-place version ofbitwise_or?",
        "Y": "Tensor.bitwise_or",
        "Z": "Tensor.bitwise_or_ In-place version ofbitwise_or()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is function that determines a bitwise xor?",
        "Y": "Tensor.bitwise_xor",
        "Z": "Tensor.bitwise_xor Seetorch.bitwise_xor()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Tensor.bitwise_xor?",
        "Y": "Seetorch",
        "Z": "Tensor.bitwise_xor Seetorch.bitwise_xor()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is In-place version ofbitwise_xor?",
        "Y": "Tensor.bitwise_xor",
        "Z": "Tensor.bitwise_xor_ In-place version ofbitwise_xor()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is the In-place version ofbitwise_xor?",
        "Y": "Tensor.bitwise_xor",
        "Z": "Tensor.bitwise_xor_ In-place version ofbitwise_xor()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is equivalent toself.to(torch.bool)?",
        "Y": "self.bool()",
        "Z": "Tensor.bool self.bool()is equivalent toself.to(torch.bool).",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is the equivalent of self.bool()?",
        "Y": "self.to(torch.bool)",
        "Z": "Tensor.bool self.bool()is equivalent toself.to(torch.bool).",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is tensor.byte self.byte() equivalent to?",
        "Y": "self.to(torch.uint8)",
        "Z": "Tensor.byte self.byte()is equivalent toself.to(torch.uint8).",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is program that broadcasts to Seetorch?",
        "Y": "Tensor",
        "Z": "Tensor.broadcast_to Seetorch.broadcast_to().",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What does Tensor.broadcast_to?",
        "Y": "Seetorch",
        "Z": "Tensor.broadcast_to Seetorch.broadcast_to().",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What does Seetorch.broadcast_to() do?",
        "Y": "Tensor.broadcast_to",
        "Z": "Tensor.broadcast_to Seetorch.broadcast_to().",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What distribution does Tensor.cauchy come from?",
        "Y": "Cauchy",
        "Z": "Tensor.cauchy_ Fills the tensor with numbers drawn from the Cauchy distribution:",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "Tensor.cauchy_ Fills the tensor with numbers drawn from what distribution?",
        "Y": "Cauchy",
        "Z": "Tensor.cauchy_ Fills the tensor with numbers drawn from the Cauchy distribution:",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is a tent?",
        "Y": "Tensor.ceil Seetorch.ceil",
        "Z": "Tensor.ceil Seetorch.ceil()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Tensor.ceil?",
        "Y": "Seetorch",
        "Z": "Tensor.ceil Seetorch.ceil()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is in-place version of the in-place version of the in-place version of the in-place version of the in",
        "Y": "Tensor.t_ In-place version oft()",
        "Z": "Tensor.t_ In-place version oft()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is version ofceil()?",
        "Y": "Tensor.ceil_ In-place",
        "Z": "Tensor.ceil_ In-place version ofceil()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is equivalent to self.to(torch.int8)?",
        "Y": "self.char()",
        "Z": "Tensor.char self.char()is equivalent toself.to(torch.int8).",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is tensor.char self.char() equivalent to?",
        "Y": "self.to(torch.int8)",
        "Z": "Tensor.char self.char()is equivalent toself.to(torch.int8).",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is cholesky?",
        "Y": "Tensor.cholesky Seetorch.cholesky",
        "Z": "Tensor.cholesky Seetorch.cholesky()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is the name of Seetorch.cholesky?",
        "Y": "Tensor.cholesky",
        "Z": "Tensor.cholesky Seetorch.cholesky()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is inverse of the Seetorch.cholesky_inverse?",
        "Y": "Tensor.cholesky_inverse",
        "Z": "Tensor.cholesky_inverse Seetorch.cholesky_inverse()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Seetorch.cholesky_inverse?",
        "Y": "Tensor.cholesky_inverse",
        "Z": "Tensor.cholesky_inverse Seetorch.cholesky_inverse()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What does Tensor.cholesky_solve?",
        "Y": "Seetorch.cholesky_solve",
        "Z": "Tensor.cholesky_solve Seetorch.cholesky_solve()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What does Seetorch.cholesky_solve do?",
        "Y": "Tensor.cholesky_solve",
        "Z": "Tensor.cholesky_solve Seetorch.cholesky_solve()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What does Seetorch.cholesky_solve() do?",
        "Y": "Tensor.cholesky_solve",
        "Z": "Tensor.cholesky_solve Seetorch.cholesky_solve()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is.chunk Seetorch.chunk()?",
        "Y": "Tensor",
        "Z": "Tensor.chunk Seetorch.chunk()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is a clam?",
        "Y": "Tensor.clamp Seetorch.clamp",
        "Z": "Tensor.clamp Seetorch.clamp()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Tensor.clamp?",
        "Y": "Seetorch.clamp",
        "Z": "Tensor.clamp Seetorch.clamp()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Seetorch.clamp() function?",
        "Y": "Tensor.clamp",
        "Z": "Tensor.clamp Seetorch.clamp()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What does Tensor.clamp_ In-place version ofclamp() do?",
        "Y": "Tensor.clamp_ In-place version ofclamp()",
        "Z": "Tensor.clamp_ In-place version ofclamp()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What version ofclamp() does Tensor.clamp_ In-place?",
        "Y": "Tensor.clamp_ In-place",
        "Z": "Tensor.clamp_ In-place version ofclamp()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Alias forclamp()?",
        "Y": "Tensor.clip",
        "Z": "Tensor.clip Alias forclamp().",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Alias forclamp?",
        "Y": "Tensor.clip_ Alias forclamp_()",
        "Z": "Tensor.clip_ Alias forclamp_().",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is forclamp_()?",
        "Y": "Tensor.clip_ Alias",
        "Z": "Tensor.clip_ Alias forclamp_().",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is clone?",
        "Y": "Tensor.clone Seetorch.clone",
        "Z": "Tensor.clone Seetorch.clone()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What does Tensor.clone?",
        "Y": "Seetorch",
        "Z": "Tensor.clone Seetorch.clone()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is clone Seetorch.clone()?",
        "Y": "Tensor",
        "Z": "Tensor.clone Seetorch.clone()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What does Tensor.contiguous return?",
        "Y": "a contiguous in memory tensor",
        "Z": "Tensor.contiguous Returns a contiguous in memory tensor containing the same data asselftensor.",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "Tensor.contiguous Returns a contiguous in memory tensor containing the same data as what?",
        "Y": "selftensor",
        "Z": "Tensor.contiguous Returns a contiguous in memory tensor containing the same data asselftensor.",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What returns a contiguous in memory tensor containing the same data asselftensor?",
        "Y": "Tensor.contiguous",
        "Z": "Tensor.contiguous Returns a contiguous in memory tensor containing the same data asselftensor.",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "Which element copies the elements fromsrcintoselftensor and returnsself?",
        "Y": "Tensor",
        "Z": "Tensor.copy_ Copies the elements fromsrcintoselftensor and returnsself.",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What _ Copies the elements fromsrcintoselftensor and returnsself?",
        "Y": "Tensor.copy",
        "Z": "Tensor.copy_ Copies the elements fromsrcintoselftensor and returnsself.",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What does Tensor.conj Seetorch.conj do?",
        "Y": "Tensor.conj Seetorch.conj()",
        "Z": "Tensor.conj Seetorch.conj()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Seetorch.conj?",
        "Y": "Tensor.conj",
        "Z": "Tensor.conj Seetorch.conj()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Tensor.conj?",
        "Y": "Seetorch.conj",
        "Z": "Tensor.conj Seetorch.conj()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is.copysign Seetorch.copysign() function?",
        "Y": "Tensor",
        "Z": "Tensor.copysign Seetorch.copysign()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Seetorch.copysign function?",
        "Y": "Tensor.copysign",
        "Z": "Tensor.copysign Seetorch.copysign()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is program that does the copysign function?",
        "Y": "Tensor",
        "Z": "Tensor.copysign_ In-place version ofcopysign()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is version ofcopysign()?",
        "Y": "Tensor.copysign_ In-place",
        "Z": "Tensor.copysign_ In-place version ofcopysign()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Seetorch.cos?",
        "Y": "Tensor.cos",
        "Z": "Tensor.cos Seetorch.cos()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Tensor.cos?",
        "Y": "Seetorch.cos",
        "Z": "Tensor.cos Seetorch.cos()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is the name of Seetorch.cos?",
        "Y": "Tensor.cos",
        "Z": "Tensor.cos Seetorch.cos()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What does Tensor.cos do?",
        "Y": "Tensor.cos_ In-place version ofcos()",
        "Z": "Tensor.cos_ In-place version ofcos()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is in-place version of ofcos?",
        "Y": "Tensor.cos",
        "Z": "Tensor.cos_ In-place version ofcos()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is website?",
        "Y": "Tensor.symeig Seetorch.symeig",
        "Z": "Tensor.symeig Seetorch.symeig()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Tensor.cosh?",
        "Y": "Seetorch.cosh",
        "Z": "Tensor.cosh Seetorch.cosh()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Seetorch.cosh function?",
        "Y": "Tensor.cosh",
        "Z": "Tensor.cosh Seetorch.cosh()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What does Tensor.cosh do?",
        "Y": "Tensor.cosh_ In-place version ofcosh()",
        "Z": "Tensor.cosh_ In-place version ofcosh()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is In-place version ofcosh()?",
        "Y": "Tensor.cosh",
        "Z": "Tensor.cosh_ In-place version ofcosh()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What does Seetorch.count_nonzero do?",
        "Y": "Tensor.count_nonzero",
        "Z": "Tensor.count_nonzero Seetorch.count_nonzero()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Tensor.acosh Seetorch.acosh?",
        "Y": "Tensor.acosh Seetorch.acosh",
        "Z": "Tensor.acosh Seetorch.acosh()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Seetorch.acosh function?",
        "Y": "Tensor.acosh",
        "Z": "Tensor.acosh Seetorch.acosh()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is in-place version of acosh?",
        "Y": "Tensor.acosh_ In-place version ofacosh()",
        "Z": "Tensor.acosh_ In-place version ofacosh()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is In-place version ofacosh()?",
        "Y": "Tensor.acosh",
        "Z": "Tensor.acosh_ In-place version ofacosh()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What does arccosh acosh() stand for?",
        "Y": "Tensor",
        "Z": "Tensor.arccosh acosh() -> Tensor",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What does arccosh acosh() -> Tensor?",
        "Y": "Tensor",
        "Z": "Tensor.arccosh acosh() -> Tensor",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Tensor.arccosh?",
        "Y": "acosh",
        "Z": "Tensor.arccosh acosh() -> Tensor",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What does arccosh_ acosh_() stand for?",
        "Y": "Tensor",
        "Z": "Tensor.arccosh_ acosh_() -> Tensor",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is the name of Tensor.arccosh?",
        "Y": "acosh_()",
        "Z": "Tensor.arccosh_ acosh_() -> Tensor",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What does arccosh_ acosh_() -> Tensor?",
        "Y": "Tensor",
        "Z": "Tensor.arccosh_ acosh_() -> Tensor",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What does Tensor.arccosh_?",
        "Y": "acosh",
        "Z": "Tensor.arccosh_ acosh_() -> Tensor",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What returns a copy of this object in CPU memory?",
        "Y": "Tensor.cpu",
        "Z": "Tensor.cpu Returns a copy of this object in CPU memory.",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What type of memory does Tensor.cpu return a copy of?",
        "Y": "CPU",
        "Z": "Tensor.cpu Returns a copy of this object in CPU memory.",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Tensor.cross Seetorch.cross?",
        "Y": "Tensor.cross Seetorch.cross",
        "Z": "Tensor.cross Seetorch.cross()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Tensor.cross?",
        "Y": "Seetorch",
        "Z": "Tensor.cross Seetorch.cross()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Seetorch.cross function?",
        "Y": "Tensor.cross",
        "Z": "Tensor.cross Seetorch.cross()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What returns a copy of this object in CUDA memory?",
        "Y": "Tensor.cuda",
        "Z": "Tensor.cuda Returns a copy of this object in CUDA memory.",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "Tensor.cuda returns a copy of this object in what?",
        "Y": "CUDA memory",
        "Z": "Tensor.cuda Returns a copy of this object in CUDA memory.",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Tensor.logcumsumexp?",
        "Y": "Seetorch.logcumsumexp",
        "Z": "Tensor.logcumsumexp Seetorch.logcumsumexp()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What does Seetorch.logcumsumexp use?",
        "Y": "Tensor.logcumsumexp",
        "Z": "Tensor.logcumsumexp Seetorch.logcumsumexp()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Tensor.cummax Seetorch.cummax?",
        "Y": "Tensor.cummax Seetorch.cummax",
        "Z": "Tensor.cummax Seetorch.cummax()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Tensor.cummax?",
        "Y": "Seetorch.cummax",
        "Z": "Tensor.cummax Seetorch.cummax()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Seetorch.cummax() function?",
        "Y": "Tensor.cummax",
        "Z": "Tensor.cummax Seetorch.cummax()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Tensor.cummin?",
        "Y": "Seetorch",
        "Z": "Tensor.cummin Seetorch.cummin()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Seetorch.cummin?",
        "Y": "Tensor.cummin",
        "Z": "Tensor.cummin Seetorch.cummin()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Seetorch.cumprod?",
        "Y": "Tensor.cumprod",
        "Z": "Tensor.cumprod Seetorch.cumprod()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is in-place version ofcumprod()?",
        "Y": "Tensor.cumprod_ In-place version ofcumprod()",
        "Z": "Tensor.cumprod_ In-place version ofcumprod()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is version ofcumprod?",
        "Y": "Tensor.cumprod_ In-place",
        "Z": "Tensor.cumprod_ In-place version ofcumprod()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Tensor.cumsum Seetorch.cumsum?",
        "Y": "Tensor.cumsum Seetorch.cumsum",
        "Z": "Tensor.cumsum Seetorch.cumsum()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Seetorch.cumsum?",
        "Y": "Tensor.cumsum",
        "Z": "Tensor.cumsum Seetorch.cumsum()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is In-place version ofcumsum()?",
        "Y": "Tensor.cumsum_ In-place version ofcumsum()",
        "Z": "Tensor.cumsum_ In-place version ofcumsum()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is version ofcumsum()?",
        "Y": "Tensor.cumsum_ In-place",
        "Z": "Tensor.cumsum_ In-place version ofcumsum()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What returns the address of the first element of selftensor?",
        "Y": "Tensor.data_ptr",
        "Z": "Tensor.data_ptr Returns the address of the first element ofselftensor.",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What does Tensor.deg2rad do?",
        "Y": "Tensor.deg2rad Seetorch.deg2rad()",
        "Z": "Tensor.deg2rad Seetorch.deg2rad()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Tensor.deg2rad?",
        "Y": "Seetorch.deg2rad",
        "Z": "Tensor.deg2rad Seetorch.deg2rad()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Seetorch.deg2rad() function?",
        "Y": "Tensor.deg2rad",
        "Z": "Tensor.deg2rad Seetorch.deg2rad()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What can you do with a quantized Tensor?",
        "Y": "dequantize it and return the dequantized float Tensor",
        "Z": "Tensor.dequantize Given a quantized Tensor, dequantize it and return the dequantized float Tensor.",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What do you do with a quantized Tensor?",
        "Y": "dequantize it",
        "Z": "Tensor.dequantize Given a quantized Tensor, dequantize it and return the dequantized float Tensor.",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Tensor.det?",
        "Y": "Seetorch.det",
        "Z": "Tensor.det Seetorch.det()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Seetorch.det?",
        "Y": "Tensor.det",
        "Z": "Tensor.det Seetorch.det()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What returns the number of dense dimensions in asparse tensorself?",
        "Y": "Tensor.dense_dim",
        "Z": "Tensor.dense_dim Return the number of dense dimensions in asparse tensorself.",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "Tensor.detach Returns a new Tensor, what from the current graph?",
        "Y": "detached",
        "Z": "Tensor.detach Returns a new Tensor, detached from the current graph.",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "Detaches the Tensor from the graph that created it, making it what?",
        "Y": "leaf",
        "Z": "Tensor.detach_ Detaches the Tensor from the graph that created it, making it a leaf.",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What detaches the Tensor from the graph that created it?",
        "Y": "torch",
        "Z": "torch.Tensor.detach_ Detaches the Tensor from the graph that created it, making it a leaf.",
        "source": "https://pytorch.org/docs/stable/autograd.html"
    },
    {
        "X": "What is component in the Seetorch?",
        "Y": "Tensor",
        "Z": "Tensor.greater_equal Seetorch.greater_equal().",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Tensor.diag Seetorch.diag?",
        "Y": "Tensor.diag Seetorch.diag",
        "Z": "Tensor.diag Seetorch.diag()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What does Tensor.diag_embed Seetorch.diag_embed() do?",
        "Y": "Tensor.diag_embed Seetorch.diag_embed()",
        "Z": "Tensor.diag_embed Seetorch.diag_embed()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What does Tensor.diagflat Seetorch.diagflat() do?",
        "Y": "Tensor.diagflat Seetorch.diagflat()",
        "Z": "Tensor.diagflat Seetorch.diagflat()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Tensor.diagflat?",
        "Y": "Seetorch",
        "Z": "Tensor.diagflat Seetorch.diagflat()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Seetorch.diagflat() function?",
        "Y": "Tensor.diagflat",
        "Z": "Tensor.diagflat Seetorch.diagflat()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is a Tensor.diagonal?",
        "Y": "Seetorch",
        "Z": "Tensor.diagonal Seetorch.diagonal()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is the minimum dimension of a tensor?",
        "Y": "2-dimensions",
        "Z": "Tensor.fill_diagonal_ Fill the main diagonal of a tensor that has at least 2-dimensions.",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Tensor.fmax Seetorch.fmax()?",
        "Y": "Tensor.fmax Seetorch.fmax()",
        "Z": "Tensor.fmax Seetorch.fmax()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Seetorch.fmin?",
        "Y": "Tensor.fmin",
        "Z": "Tensor.fmin Seetorch.fmin()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What does Tensor.diff Seetorch.diff do?",
        "Y": "Tensor.diff Seetorch.diff()",
        "Z": "Tensor.diff Seetorch.diff()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Seetorch.diff() function?",
        "Y": "Tensor.diff",
        "Z": "Tensor.diff Seetorch.diff()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Tensor.digamma?",
        "Y": "Seetorch.digamma",
        "Z": "Tensor.digamma Seetorch.digamma()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is.digamma Seetorch?",
        "Y": "Tensor",
        "Z": "Tensor.digamma Seetorch.digamma()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is In-place version ofdigamma?",
        "Y": "Tensor.digamma_ In-place version ofdigamma()",
        "Z": "Tensor.digamma_ In-place version ofdigamma()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is In-place version ofdigamma()?",
        "Y": "Tensor.digamma",
        "Z": "Tensor.digamma_ In-place version ofdigamma()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What returns the number of dimensions of selftensor?",
        "Y": "Tensor",
        "Z": "Tensor.dim Returns the number of dimensions ofselftensor.",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "Tensor.dim returns the number of dimensions of what?",
        "Y": "selftensor",
        "Z": "Tensor.dim Returns the number of dimensions ofselftensor.",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What does Tensor.dist Seetorch.dist do?",
        "Y": "Tensor.dist Seetorch.dist()",
        "Z": "Tensor.dist Seetorch.dist()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Seetorch.dist?",
        "Y": "Tensor.dist",
        "Z": "Tensor.dist Seetorch.dist()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is.div Seetorch.div?",
        "Y": "Tensor",
        "Z": "Tensor.div Seetorch.div()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What does Tensor.div Seetorch.div() do?",
        "Y": "Tensor.div Seetorch.div()",
        "Z": "Tensor.div Seetorch.div()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is div function?",
        "Y": "Tensor.div_ In-place version ofdiv()",
        "Z": "Tensor.div_ In-place version ofdiv()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is version ofdiv()?",
        "Y": "Tensor.div_ In-place",
        "Z": "Tensor.div_ In-place version ofdiv()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is component that creates Seetorch.divide()?",
        "Y": "Tensor",
        "Z": "Tensor.divide Seetorch.divide()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What does Seetorch.divide() do?",
        "Y": "Tensor.divide",
        "Z": "Tensor.divide Seetorch.divide()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is in-place version ofdivide()?",
        "Y": "Tensor.divide_ In-place version ofdivide()",
        "Z": "Tensor.divide_ In-place version ofdivide()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is version ofdivide()?",
        "Y": "Tensor.divide_ In-place",
        "Z": "Tensor.divide_ In-place version ofdivide()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What does Tensor.dot Seetorch.dot() do?",
        "Y": "Tensor.dot Seetorch.dot()",
        "Z": "Tensor.dot Seetorch.dot()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Tensor.dot?",
        "Y": "Seetorch.dot",
        "Z": "Tensor.dot Seetorch.dot()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Seetorch.dot() function?",
        "Y": "Tensor.dot",
        "Z": "Tensor.dot Seetorch.dot()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is tensor.double self.double() equivalent to?",
        "Y": "self.to(torch.float64)",
        "Z": "Tensor.double self.double()is equivalent toself.to(torch.float64).",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Tensor.dsplit?",
        "Y": "Seetorch.dsplit",
        "Z": "Tensor.dsplit Seetorch.dsplit()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Seetorch.dsplit() function?",
        "Y": "Tensor.dsplit",
        "Z": "Tensor.dsplit Seetorch.dsplit()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is file that is used to create a Seetorch?",
        "Y": "Tensor.eig Seetorch.eig()",
        "Z": "Tensor.eig Seetorch.eig()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Tensor.eig?",
        "Y": "Seetorch",
        "Z": "Tensor.eig Seetorch.eig()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Seetorch.eig?",
        "Y": "Tensor.eig",
        "Z": "Tensor.eig Seetorch.eig()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What returns the size in bytes of an individual element?",
        "Y": "Tensor.element_size",
        "Z": "Tensor.element_size Returns the size in bytes of an individual element.",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "Tensor.element_size Returns the size in what?",
        "Y": "bytes",
        "Z": "Tensor.element_size Returns the size in bytes of an individual element.",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What does Tensor.eq Seetorch.eq do?",
        "Y": "Tensor.eq Seetorch.eq()",
        "Z": "Tensor.eq Seetorch.eq()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Seetorch.eq() function?",
        "Y": "Tensor.eq",
        "Z": "Tensor.eq Seetorch.eq()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What does Tensor.eq_ In-place version ofeq() do?",
        "Y": "Tensor.eq_ In-place version ofeq()",
        "Z": "Tensor.eq_ In-place version ofeq()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is version ofeq()?",
        "Y": "Tensor.eq_ In-place",
        "Z": "Tensor.eq_ In-place version ofeq()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Tensor.equal Seetorch.equal?",
        "Y": "Tensor.equal Seetorch.equal",
        "Z": "Tensor.equal Seetorch.equal()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Seetorch.erf?",
        "Y": "Tensor.erf",
        "Z": "Tensor.erf Seetorch.erf()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is version oferf()?",
        "Y": "Tensor.erf_ In-place",
        "Z": "Tensor.erf_ In-place version oferf()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What does Tensor.erfc do?",
        "Y": "Tensor.erfc Seetorch.erfc()",
        "Z": "Tensor.erfc Seetorch.erfc()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Tensor.erfc?",
        "Y": "Seetorch.erfc",
        "Z": "Tensor.erfc Seetorch.erfc()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Seetorch.erfc?",
        "Y": "Tensor.erfc",
        "Z": "Tensor.erfc Seetorch.erfc()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is function that is used by the Tensor.erfc?",
        "Y": "Tensor.erfc_ In-place version oferfc()",
        "Z": "Tensor.erfc_ In-place version oferfc()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is version of oferfc()?",
        "Y": "Tensor.erfc_ In-place",
        "Z": "Tensor.erfc_ In-place version oferfc()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Tensor.erfinv?",
        "Y": "Seetorch.erfinv",
        "Z": "Tensor.erfinv Seetorch.erfinv()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Seetorch.erfinv?",
        "Y": "Tensor.erfinv",
        "Z": "Tensor.erfinv Seetorch.erfinv()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is In-place version of oferfinv()?",
        "Y": "Tensor.erfinv",
        "Z": "Tensor.erfinv_ In-place version oferfinv()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is.exp Seetorch.exp?",
        "Y": "Tensor",
        "Z": "Tensor.exp Seetorch.exp()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Tensor.exp?",
        "Y": "Seetorch",
        "Z": "Tensor.exp Seetorch.exp()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Seetorch.exp?",
        "Y": "Tensor.exp",
        "Z": "Tensor.exp Seetorch.exp()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What does Tensor.exp_ In-place version ofexp() do?",
        "Y": "Tensor.exp_ In-place version ofexp()",
        "Z": "Tensor.exp_ In-place version ofexp()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What version ofexp() does Tensor.exp_ In-place?",
        "Y": "Tensor.exp_ In-place",
        "Z": "Tensor.exp_ In-place version ofexp()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is component in the Seetorch.expm1 function?",
        "Y": "Tensor",
        "Z": "Tensor.expm1 Seetorch.expm1()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Seetorch.expm1?",
        "Y": "Tensor.expm1",
        "Z": "Tensor.expm1 Seetorch.expm1()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What does Tensor.expm1_ In-place version ofexpm1() do?",
        "Y": "Tensor.expm1_ In-place version ofexpm1()",
        "Z": "Tensor.expm1_ In-place version ofexpm1()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is version ofexpm1()?",
        "Y": "Tensor.expm1_ In-place",
        "Z": "Tensor.expm1_ In-place version ofexpm1()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is the size of the selftensor?",
        "Y": "singleton",
        "Z": "Tensor.expand Returns a new view of the self tensor with singleton dimensions expanded to a larger size.",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What returns a new view of the self tensor with singleton dimensions expanded to a larger size?",
        "Y": "Tensor.expand",
        "Z": "Tensor.expand Returns a new view of the self tensor with singleton dimensions expanded to a larger size.",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What does Tensor.expand_as do?",
        "Y": "Expand this tensor to the same size asother",
        "Z": "Tensor.expand_as Expand this tensor to the same size asother.",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What does the tensor do?",
        "Y": "expand",
        "Z": "Tensor.expand_as Expand this tensor to the same size asother.",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What fillsselftensor with elements drawn from the exponential distribution?",
        "Y": "Tensor.exponential",
        "Z": "Tensor.exponential_ Fillsselftensor with elements drawn from the exponential distribution:",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What type of tensor is filled with elements drawn from the exponential distribution?",
        "Y": "exponential",
        "Z": "Tensor.exponential_ Fillsselftensor with elements drawn from the exponential distribution:",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is program that fixes Seetorch.fix()?",
        "Y": "Tensor",
        "Z": "Tensor.fix Seetorch.fix().",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What does Tensor.fix Seetorch.fix() do?",
        "Y": "Tensor.fix Seetorch.fix()",
        "Z": "Tensor.fix Seetorch.fix().",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What does Tensor.fix_ In-place version offix() do?",
        "Y": "Tensor.fix_ In-place version offix()",
        "Z": "Tensor.fix_ In-place version offix()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is version offix()?",
        "Y": "Tensor.fix_ In-place",
        "Z": "Tensor.fix_ In-place version offix()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What does it do with the specified value?",
        "Y": "Tensor.fill_ Fillsselftensor",
        "Z": "Tensor.fill_ Fillsselftensor with the specified value.",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What does fillsselftensor with the specified value?",
        "Y": "Tensor.fill",
        "Z": "Tensor.fill_ Fillsselftensor with the specified value.",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What does Tensor.flatten stand for?",
        "Y": "seetorch.flatten",
        "Z": "Tensor.flatten seetorch.flatten()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is the term for a seetorch?",
        "Y": "Tensor",
        "Z": "Tensor.flatten seetorch.flatten()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What does Tensor.flip?",
        "Y": "Seetorch",
        "Z": "Tensor.flip Seetorch.flip()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What does Seetorch.flip() do?",
        "Y": "Tensor.flip",
        "Z": "Tensor.flip Seetorch.flip()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Tensor.fliplr?",
        "Y": "Seetorch.fliplr",
        "Z": "Tensor.fliplr Seetorch.fliplr()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Tensor.flipud?",
        "Y": "Seetorch.flipud",
        "Z": "Tensor.flipud Seetorch.flipud()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Seetorch.flipud?",
        "Y": "Tensor.flipud",
        "Z": "Tensor.flipud Seetorch.flipud()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is equivalent toself.to(torch.float32)?",
        "Y": "self.float()",
        "Z": "Tensor.float self.float()is equivalent toself.to(torch.float32).",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is the equivalent of Tensor.float self.float()?",
        "Y": "self.to(torch.float32)",
        "Z": "Tensor.float self.float()is equivalent toself.to(torch.float32).",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is float_power Seetorch.float_power()?",
        "Y": "Tensor",
        "Z": "Tensor.float_power Seetorch.float_power()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Tensor.float_power?",
        "Y": "Seetorch",
        "Z": "Tensor.float_power Seetorch.float_power()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What does Tensor.float_power Seetorch.float_power() do?",
        "Y": "Tensor.float_power Seetorch.float_power()",
        "Z": "Tensor.float_power Seetorch.float_power()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Tensor.float_power_ In-place version offloat_power()?",
        "Y": "Tensor.float_power_ In-place version offloat_power()",
        "Z": "Tensor.float_power_ In-place version offloat_power()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What version of float_power() is used?",
        "Y": "Tensor.float_power_ In-place",
        "Z": "Tensor.float_power_ In-place version offloat_power()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is.floor Seetorch.floor?",
        "Y": "Tensor",
        "Z": "Tensor.floor Seetorch.floor()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Tensor.floor?",
        "Y": "Seetorch.floor",
        "Z": "Tensor.floor Seetorch.floor()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Seetorch.floor?",
        "Y": "Tensor.floor",
        "Z": "Tensor.floor Seetorch.floor()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is floor()?",
        "Y": "Tensor.floor_ In-place version offloor()",
        "Z": "Tensor.floor_ In-place version offloor()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is version of floor?",
        "Y": "Tensor.floor_ In-place",
        "Z": "Tensor.floor_ In-place version offloor()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is component that creates the Seetorch.floor_divide?",
        "Y": "Tensor",
        "Z": "Tensor.floor_divide Seetorch.floor_divide()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Seetorch.floor_divide() function?",
        "Y": "Tensor.floor_divide",
        "Z": "Tensor.floor_divide Seetorch.floor_divide()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is in-place version of floor_divide?",
        "Y": "Tensor",
        "Z": "Tensor.floor_divide_ In-place version offloor_divide()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is floor_divide?",
        "Y": "floor_divide_ In-place version",
        "Z": "Tensor.floor_divide_ In-place version offloor_divide()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is the in-place version of Tensor.floor_divide?",
        "Y": "floor_divide()",
        "Z": "Tensor.floor_divide_ In-place version offloor_divide()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "Floor_divide_ In-place version offloor_divide()?",
        "Y": "Tensor",
        "Z": "Tensor.floor_divide_ In-place version offloor_divide()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What does Tensor.fmod Seetorch.fmod call?",
        "Y": "Tensor.fmod Seetorch.fmod()",
        "Z": "Tensor.fmod Seetorch.fmod()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Tensor.fmod?",
        "Y": "Seetorch.fmod",
        "Z": "Tensor.fmod Seetorch.fmod()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Seetorch.fmod?",
        "Y": "Tensor.fmod",
        "Z": "Tensor.fmod Seetorch.fmod()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What does Tensor.fmod_ In-place version offmod() do?",
        "Y": "Tensor.fmod_ In-place version offmod()",
        "Z": "Tensor.fmod_ In-place version offmod()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is version offmod()?",
        "Y": "Tensor.fmod_ In-place",
        "Z": "Tensor.fmod_ In-place version offmod()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Tensor.frac?",
        "Y": "Seetorch",
        "Z": "Tensor.frac Seetorch.frac()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Seetorch.frac()?",
        "Y": "Tensor.frac",
        "Z": "Tensor.frac Seetorch.frac()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is in-place version of frac()?",
        "Y": "Tensor.frac_ In-place version offrac()",
        "Z": "Tensor.frac_ In-place version offrac()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is version of frac()?",
        "Y": "Tensor.frac_ In-place",
        "Z": "Tensor.frac_ In-place version offrac()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What does Seetorch.frexp use?",
        "Y": "Tensor.frexp",
        "Z": "Tensor.frexp Seetorch.frexp()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Seetorch.frexp?",
        "Y": "Tensor.frexp",
        "Z": "Tensor.frexp Seetorch.frexp()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Tensor.gather Seetorch.gather?",
        "Y": "Tensor.gather Seetorch.gather",
        "Z": "Tensor.gather Seetorch.gather()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What does Seetorch.gather do?",
        "Y": "Tensor.gather",
        "Z": "Tensor.gather Seetorch.gather()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is.gcd Seetorch.gcd?",
        "Y": "Tensor",
        "Z": "Tensor.gcd Seetorch.gcd()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What does Tensor.gcd stand for?",
        "Y": "Seetorch.gcd",
        "Z": "Tensor.gcd Seetorch.gcd()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Seetorch.gcd?",
        "Y": "Tensor.gcd",
        "Z": "Tensor.gcd Seetorch.gcd()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is gcd function?",
        "Y": "Tensor.gcd_ In-place version ofgcd()",
        "Z": "Tensor.gcd_ In-place version ofgcd()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is version of gcd()?",
        "Y": "Tensor.gcd_ In-place",
        "Z": "Tensor.gcd_ In-place version ofgcd()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What does Tensor.ge Seetorch.ge do?",
        "Y": "Tensor.ge Seetorch.ge()",
        "Z": "Tensor.ge Seetorch.ge().",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Tensor.ge Seetorch.ge?",
        "Y": "Tensor.ge Seetorch.ge",
        "Z": "Tensor.ge Seetorch.ge().",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What does Tensor.ge do?",
        "Y": "Tensor.ge_ In-place version ofge()",
        "Z": "Tensor.ge_ In-place version ofge().",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is In-place version ofge()?",
        "Y": "Tensor.ge",
        "Z": "Tensor.ge_ In-place version ofge().",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is.greater_equal()?",
        "Y": "Seetorch",
        "Z": "Tensor.greater_equal Seetorch.greater_equal().",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is In-place version ofgreater_equal()?",
        "Y": "Tensor",
        "Z": "Tensor.greater_equal_ In-place version ofgreater_equal().",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is the In-place version ofgreater_equal()?",
        "Y": "Tensor.greater_equal",
        "Z": "Tensor.greater_equal_ In-place version ofgreater_equal().",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What type of tensor is filled with elements drawn from the geometric distribution?",
        "Y": "geometric",
        "Z": "Tensor.geometric_ Fillsselftensor with elements drawn from the geometric distribution:",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is fillsselftensor?",
        "Y": "Tensor.geometric",
        "Z": "Tensor.geometric_ Fillsselftensor with elements drawn from the geometric distribution:",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Seetorch.geqrf?",
        "Y": "Tensor.geqrf",
        "Z": "Tensor.geqrf Seetorch.geqrf()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What does Tensor.ger Seetorch.ger do?",
        "Y": "Tensor.ger Seetorch.ger()",
        "Z": "Tensor.ger Seetorch.ger()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Tensor.ger?",
        "Y": "Seetorch.ger",
        "Z": "Tensor.ger Seetorch.ger()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Seetorch.ger function?",
        "Y": "Tensor.ger",
        "Z": "Tensor.ger Seetorch.ger()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What returns the device ordinal of the GPU on which the tensor resides?",
        "Y": "Tensor.get_device",
        "Z": "Tensor.get_device For CUDA tensors, this function returns the device ordinal of the GPU on which the tensor resides.",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What function returns the device ordinal of the GPU on which the tensor resides?",
        "Y": "Tensor.get_device",
        "Z": "Tensor.get_device For CUDA tensors, this function returns the device ordinal of the GPU on which the tensor resides.",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What device does Tensor.get_device return the device ordinal of?",
        "Y": "the GPU",
        "Z": "Tensor.get_device For CUDA tensors, this function returns the device ordinal of the GPU on which the tensor resides.",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Seetorch.gt()?",
        "Y": "Tensor.gt",
        "Z": "Tensor.gt Seetorch.gt().",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is gt function?",
        "Y": "Tensor.gt_ In-place version ofgt()",
        "Z": "Tensor.gt_ In-place version ofgt().",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is version ofgt()?",
        "Y": "Tensor.gt_ In-place",
        "Z": "Tensor.gt_ In-place version ofgt().",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is component that makes a great Seetorch?",
        "Y": "Tensor",
        "Z": "Tensor.greater Seetorch.greater().",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is In-place version ofgreater()?",
        "Y": "Tensor.greater",
        "Z": "Tensor.greater_ In-place version ofgreater().",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is the equivalent of self.to(torch.float16)?",
        "Y": "self.half",
        "Z": "Tensor.half self.half()is equivalent toself.to(torch.float16).",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is tensor.half self.half() equivalent to?",
        "Y": "self.to(torch.float16)",
        "Z": "Tensor.half self.half()is equivalent toself.to(torch.float16).",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What does Seetorch.nn.functional.hardshrink() do?",
        "Y": "Tensor.hardshrink",
        "Z": "Tensor.hardshrink Seetorch.nn.functional.hardshrink()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What type of hardshrink Seetorch.nn.functional.hardshrink()?",
        "Y": "Tensor",
        "Z": "Tensor.hardshrink Seetorch.nn.functional.hardshrink()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Tensor.heaviside Seetorch.heaviside?",
        "Y": "Tensor.heaviside Seetorch.heaviside",
        "Z": "Tensor.heaviside Seetorch.heaviside()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Tensor.heaviside?",
        "Y": "Seetorch",
        "Z": "Tensor.heaviside Seetorch.heaviside()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What does Tensor.histc do?",
        "Y": "Tensor.histc Seetorch.histc()",
        "Z": "Tensor.histc Seetorch.histc()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Tensor.histc?",
        "Y": "Seetorch.histc",
        "Z": "Tensor.histc Seetorch.histc()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Seetorch.histc?",
        "Y": "Tensor.histc",
        "Z": "Tensor.histc Seetorch.histc()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Tensor.hsplit?",
        "Y": "Seetorch.hsplit",
        "Z": "Tensor.hsplit Seetorch.hsplit()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Seetorch.hsplit() function?",
        "Y": "Tensor.hsplit",
        "Z": "Tensor.hsplit Seetorch.hsplit()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is hypnotist?",
        "Y": "Tensor.hypot Seetorch.hypot",
        "Z": "Tensor.hypot Seetorch.hypot()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Tensor.hypot?",
        "Y": "Seetorch.hypot",
        "Z": "Tensor.hypot Seetorch.hypot()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Seetorch.hypot() function?",
        "Y": "Tensor.hypot",
        "Z": "Tensor.hypot Seetorch.hypot()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is In-place version ofhypot()?",
        "Y": "Tensor.hypot",
        "Z": "Tensor.hypot_ In-place version ofhypot()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What does Tensor.i0 Seetorch.i0 do?",
        "Y": "Tensor.i0 Seetorch.i0()",
        "Z": "Tensor.i0 Seetorch.i0()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What does Tensor.i0_ In-place version ofi0() do?",
        "Y": "Tensor.i0_ In-place version ofi0()",
        "Z": "Tensor.i0_ In-place version ofi0()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is version ofi0()?",
        "Y": "Tensor.i0_ In-place",
        "Z": "Tensor.i0_ In-place version ofi0()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Tensor.igamma Seetorch.igamma?",
        "Y": "Tensor.igamma Seetorch.igamma",
        "Z": "Tensor.igamma Seetorch.igamma()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Tensor.igamma?",
        "Y": "Seetorch",
        "Z": "Tensor.igamma Seetorch.igamma()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Seetorch.igamma?",
        "Y": "Tensor.igamma",
        "Z": "Tensor.igamma Seetorch.igamma()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is In-place version ofigamma?",
        "Y": "Tensor.igamma_ In-place version ofigamma()",
        "Z": "Tensor.igamma_ In-place version ofigamma()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is In-place version ofigamma()?",
        "Y": "Tensor.igamma_ In-place version ofigamma()",
        "Z": "Tensor.igamma_ In-place version ofigamma()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Tensor.igammac Seetorch.igammac?",
        "Y": "Tensor.igammac Seetorch.igammac",
        "Z": "Tensor.igammac Seetorch.igammac()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What does Tensor.igammac_ In-place version ofigammac() do?",
        "Y": "Tensor.igammac_ In-place version ofigammac()",
        "Z": "Tensor.igammac_ In-place version ofigammac()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is version ofigammac()?",
        "Y": "Tensor.igammac_ In-place",
        "Z": "Tensor.igammac_ In-place version ofigammac()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What does Tensor.index_add_ Accumulate the elements of?",
        "Y": "attr:alphatimestensorinto the self tensor",
        "Z": "Tensor.index_add_ Accumulate the elements of attr:alphatimestensorinto the self tensor by adding to the indices in the order given inindex.",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "How do you add the elements of attr:alphatimestensorinto the self tensor?",
        "Y": "by adding to the indices",
        "Z": "Tensor.index_add_ Accumulate the elements of attr:alphatimestensorinto the self tensor by adding to the indices in the order given inindex.",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is the Out-of-place version of of torch.Tensor?",
        "Y": "Tensor",
        "Z": "Tensor.index_fill Out-of-place version of torch.Tensor.index_fill_().",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is version of Tensor.index_add?",
        "Y": "Out-of-place",
        "Z": "Tensor.index_add Out-of-place version of torch.Tensor.index_add_().",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What version of of torch.Tensor.index_add_()?",
        "Y": "Tensor.index_add Out-of-place",
        "Z": "Tensor.index_add Out-of-place version of torch.Tensor.index_add_().",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "How are the elements of a selftensor copied?",
        "Y": "the indices in the order given inindex",
        "Z": "Tensor.index_copy_ Copies the elements oftensorinto the self tensor by selecting the indices in the order given inindex.",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What _ Copies the elements oftensorinto the self tensor by selecting the indices in the order given inindex?",
        "Y": "Tensor.index_copy",
        "Z": "Tensor.index_copy_ Copies the elements oftensorinto the self tensor by selecting the indices in the order given inindex.",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is version of Tensor.index_copy?",
        "Y": "Out-of-place",
        "Z": "Tensor.index_copy Out-of-place version of torch.Tensor.index_copy_().",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What version of of torch.Tensor.index_copy_()?",
        "Y": "Tensor.index_copy Out-of-place",
        "Z": "Tensor.index_copy Out-of-place version of torch.Tensor.index_copy_().",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What does Tensor.index_fill_ select to fill the elements of the self tensor with valuevalue?",
        "Y": "the indices in the order given inindex",
        "Z": "Tensor.index_fill_ Fills the elements of the self tensor with valuevalueby selecting the indices in the order given inindex.",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What fills the elements of the self tensor with valuevalue?",
        "Y": "Tensor.index_fill",
        "Z": "Tensor.index_fill_ Fills the elements of the self tensor with valuevalueby selecting the indices in the order given inindex.",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What version of of torch.Tensor.index_fill_()?",
        "Y": "Tensor.index_fill Out-of-place",
        "Z": "Tensor.index_fill Out-of-place version of torch.Tensor.index_fill_().",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What does Tensor.index_put_ put values from the tensorvaluesinto the tensorselfusing?",
        "Y": "indices",
        "Z": "Tensor.index_put_ Puts values from the tensorvaluesinto the tensorselfusing the indices specified inindices(which is a tuple of Tensors).",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What puts values from the tensorvaluesinto the tensorselfusing the indices specified inindices?",
        "Y": "Tensor.index_put",
        "Z": "Tensor.index_put_ Puts values from the tensorvaluesinto the tensorselfusing the indices specified inindices(which is a tuple of Tensors).",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is out-place version of index_put_()?",
        "Y": "Tensor",
        "Z": "Tensor.index_put Out-place version ofindex_put_().",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is the Out-place version of index_put_()?",
        "Y": "index_put",
        "Z": "Tensor.index_put Out-place version ofindex_put_().",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What version of index_put_() is used?",
        "Y": "Tensor.index_put Out-place",
        "Z": "Tensor.index_put Out-place version ofindex_put_().",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What does Tensor.index_select?",
        "Y": "Seetorch",
        "Z": "Tensor.index_select Seetorch.index_select()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What does Tensor.index_select Seetorch.index_select() do?",
        "Y": "Tensor.index_select Seetorch.index_select()",
        "Z": "Tensor.index_select Seetorch.index_select()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What indices return the indices tensor of asparse COO tensor?",
        "Y": "Tensor",
        "Z": "Tensor.indices Return the indices tensor of asparse COO tensor.",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What returns the indices tensor of asparse COO tensor?",
        "Y": "indices",
        "Z": "Tensor.indices Return the indices tensor of asparse COO tensor.",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is equivalent toself.to(torch.int32)?",
        "Y": "self.int",
        "Z": "Tensor.int self.int()is equivalent toself.to(torch.int32).",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is self.int equivalent to?",
        "Y": "self.to(torch.int32)",
        "Z": "Tensor.int self.int()is equivalent toself.to(torch.int32).",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is the underlying uint8_t value of the given Tensor?",
        "Y": "uint8_t",
        "Z": "Tensor.int_repr Given a quantized Tensor,self.int_repr()returns a CPU Tensor with uint8_t as data type that stores the underlying uint8_t values of the given Tensor.",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What returns a CPU Tensor with uint8_t as data type?",
        "Y": "self.int_repr()",
        "Z": "Tensor.int_repr Given a quantized Tensor,self.int_repr()returns a CPU Tensor with uint8_t as data type that stores the underlying uint8_t values of the given Tensor.",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is the data type that stores the underlying uint8_t values of the given Tensor?",
        "Y": "uint8_t",
        "Z": "Tensor.int_repr Given a quantized Tensor,self.int_repr()returns a CPU Tensor with uint8_t as data type that stores the underlying uint8_t values of the given Tensor.",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is inverse Seetorch?",
        "Y": "Tensor",
        "Z": "Tensor.inverse Seetorch.inverse()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Tensor.inverse Seetorch.inverse()?",
        "Y": "Tensor.inverse Seetorch.inverse()",
        "Z": "Tensor.inverse Seetorch.inverse()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is component that closes Seetorch.isclose?",
        "Y": "Tensor",
        "Z": "Tensor.isclose Seetorch.isclose()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What does Tensor.isclose?",
        "Y": "Seetorch",
        "Z": "Tensor.isclose Seetorch.isclose()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is.isfinite?",
        "Y": "Seetorch",
        "Z": "Tensor.isfinite Seetorch.isfinite()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Seetorch.isfinite?",
        "Y": "Tensor.isfinite",
        "Z": "Tensor.isfinite Seetorch.isfinite()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Seetorch.isinf function?",
        "Y": "Tensor.isinf",
        "Z": "Tensor.isinf Seetorch.isinf()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Tensor.isposinf?",
        "Y": "Seetorch.isposinf",
        "Z": "Tensor.isposinf Seetorch.isposinf()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Seetorch.isposinf function?",
        "Y": "Tensor.isposinf",
        "Z": "Tensor.isposinf Seetorch.isposinf()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What does Seetorch.isneginf do?",
        "Y": "Tensor.isneginf",
        "Z": "Tensor.isneginf Seetorch.isneginf()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Tensor.isneginf?",
        "Y": "Seetorch.isneginf",
        "Z": "Tensor.isneginf Seetorch.isneginf()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Seetorch.isneginf function?",
        "Y": "Tensor.isneginf",
        "Z": "Tensor.isneginf Seetorch.isneginf()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Tensor.isnan Seetorch.isnan?",
        "Y": "Tensor.isnan Seetorch.isnan",
        "Z": "Tensor.isnan Seetorch.isnan()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What happens if selftensor is contiguous in memory in the order specified by memory format?",
        "Y": "Tensor.is_contiguous Returns True",
        "Z": "Tensor.is_contiguous Returns True ifselftensor is contiguous in memory in the order specified by memory format.",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What Returns True if selftensor is contiguous in memory in the order specified by memory format?",
        "Y": "Tensor.is_contiguous",
        "Z": "Tensor.is_contiguous Returns True ifselftensor is contiguous in memory in the order specified by memory format.",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What returns true if the data type ofselfis a complex data type?",
        "Y": "Tensor.is_complex",
        "Z": "Tensor.is_complex Returns True if the data type ofselfis a complex data type.",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What Returns True if the data type ofselfis a complex data type?",
        "Y": "Tensor.is_complex",
        "Z": "Tensor.is_complex Returns True if the data type ofselfis a complex data type.",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What returns true if the data type ofselfis a floating point data type?",
        "Y": "Tensor.is_floating_point",
        "Z": "Tensor.is_floating_point Returns True if the data type ofselfis a floating point data type.",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "Tensor.is_floating_point Returns what if the data type ofselfis a floating point data type?",
        "Y": "True",
        "Z": "Tensor.is_floating_point Returns True if the data type ofselfis a floating point data type.",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What Returns True if the data type ofselfis a floating point data type?",
        "Y": "Tensor.is_floating_point",
        "Z": "Tensor.is_floating_point Returns True if the data type ofselfis a floating point data type.",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What are all Tensors that have grad which is False?",
        "Y": "leaf Tensors",
        "Z": "Tensor.is_leaf All Tensors that have requires_gradwhich is False wii be leaf Tensors by convention.",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What returns true if the tensor resides in pinned memory?",
        "Y": "Tensor.is_pinned",
        "Z": "Tensor.is_pinned Returns true if this tensor resides in pinned memory.",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "Where does the tensor reside?",
        "Y": "pinned memory",
        "Z": "Tensor.is_pinned Returns true if this tensor resides in pinned memory.",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "If this tensor resides in pinned memory, what does Tensor.is_pinned return?",
        "Y": "true",
        "Z": "Tensor.is_pinned Returns true if this tensor resides in pinned memory.",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What do both tensors point to?",
        "Y": "exact same memory",
        "Z": "Tensor.is_set_to Returns True if both tensors are pointing to the exact same memory (same storage, offset, size and stride).",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "If both tensors are pointing to the exact same memory, what does Tensor.is_set_to Returns True?",
        "Y": "if both tensors are pointing to the exact same memory",
        "Z": "Tensor.is_set_to Returns True if both tensors are pointing to the exact same memory (same storage, offset, size and stride).",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "Tensor.is_shared Checks if tensor is in what type of memory?",
        "Y": "shared memory",
        "Z": "Tensor.is_shared Checks if tensor is in shared memory.",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What check if tensor is in shared memory?",
        "Y": "Tensor",
        "Z": "Tensor.is_shared Checks if tensor is in shared memory.",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What checks if tensor is in shared memory?",
        "Y": "Tensor.is_shared",
        "Z": "Tensor.is_shared Checks if tensor is in shared memory.",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "Tensor.is_signed Returns what if the data type ofselfis a signed data type?",
        "Y": "True",
        "Z": "Tensor.is_signed Returns True if the data type ofselfis a signed data type.",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What returns true if the data type ofselfis a signed data type?",
        "Y": "Tensor.is_signed",
        "Z": "Tensor.is_signed Returns True if the data type ofselfis a signed data type.",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What Returns True if the data type ofselfis a signed data type?",
        "Y": "Tensor.is_signed",
        "Z": "Tensor.is_signed Returns True if the data type ofselfis a signed data type.",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What type of storage layout does the Tensor use?",
        "Y": "sparse storage layout",
        "Z": "Tensor.is_sparse Is True ifthe Tensor uses sparse storage layout,False otherwise.",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "Is the Tensor true if the Tensor uses sparse storage layout?",
        "Y": "sparse",
        "Z": "Tensor.is_sparse Is True ifthe Tensor uses sparse storage layout,False otherwise.",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What does Tensor.istft do?",
        "Y": "Tensor.istft Seetorch.istft()",
        "Z": "Tensor.istft Seetorch.istft()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Tensor.istft?",
        "Y": "Seetorch.istft",
        "Z": "Tensor.istft Seetorch.istft()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Seetorch.istft?",
        "Y": "Tensor.istft",
        "Z": "Tensor.istft Seetorch.istft()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What does Seetorch.isreal do?",
        "Y": "Tensor.isreal",
        "Z": "Tensor.isreal Seetorch.isreal()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is the real name for Tensor?",
        "Y": "Seetorch",
        "Z": "Tensor.isreal Seetorch.isreal()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is the name of Seetorch?",
        "Y": "Tensor.isreal",
        "Z": "Tensor.isreal Seetorch.isreal()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What language does Tensor.item come from?",
        "Y": "Python",
        "Z": "Tensor.item Returns the value of this tensor as a standard Python number.",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What language does Tensor.item return the value of this tensor as a standard number?",
        "Y": "Python",
        "Z": "Tensor.item Returns the value of this tensor as a standard Python number.",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is value?",
        "Y": "Tensor.kthvalue Seetorch.kthvalue",
        "Z": "Tensor.kthvalue Seetorch.kthvalue()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is a Tensor.kthvalue?",
        "Y": "Seetorch",
        "Z": "Tensor.kthvalue Seetorch.kthvalue()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Seetorch.kthvalue?",
        "Y": "Tensor.kthvalue",
        "Z": "Tensor.kthvalue Seetorch.kthvalue()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Seetorch.lcm()?",
        "Y": "Tensor.lcm",
        "Z": "Tensor.lcm Seetorch.lcm()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is in-place version of the in-place version oflcm()?",
        "Y": "Tensor.lcm_ In-place version oflcm()",
        "Z": "Tensor.lcm_ In-place version oflcm()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is version oflcm()?",
        "Y": "Tensor.lcm_ In-place",
        "Z": "Tensor.lcm_ In-place version oflcm()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What does Seetorch.ldexp do?",
        "Y": "Tensor.ldexp",
        "Z": "Tensor.ldexp Seetorch.ldexp()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Tensor.ldexp?",
        "Y": "Seetorch.ldexp",
        "Z": "Tensor.ldexp Seetorch.ldexp()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Seetorch.ldexp?",
        "Y": "Tensor.ldexp",
        "Z": "Tensor.ldexp Seetorch.ldexp()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What does Tensor.ldexp_ In-place version ofldexp() do?",
        "Y": "Tensor.ldexp_ In-place version ofldexp()",
        "Z": "Tensor.ldexp_ In-place version ofldexp()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is version ofldexp()?",
        "Y": "Tensor.ldexp_ In-place",
        "Z": "Tensor.ldexp_ In-place version ofldexp()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Tensor.le Seetorch.le?",
        "Y": "Tensor.le Seetorch.le",
        "Z": "Tensor.le Seetorch.le().",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What does Tensor.le_ In-place version ofle do?",
        "Y": "Tensor.le_ In-place version ofle()",
        "Z": "Tensor.le_ In-place version ofle().",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is version ofle()?",
        "Y": "Tensor.le_ In-place",
        "Z": "Tensor.le_ In-place version ofle().",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is component that makes Seetorch less_equal?",
        "Y": "Tensor",
        "Z": "Tensor.less_equal Seetorch.less_equal().",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Tensor.less_equal?",
        "Y": "Seetorch",
        "Z": "Tensor.less_equal Seetorch.less_equal().",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is In-place version ofless_equal()?",
        "Y": "Tensor",
        "Z": "Tensor.less_equal_ In-place version ofless_equal().",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is the In-place version ofless_equal()?",
        "Y": "Tensor.less_equal",
        "Z": "Tensor.less_equal_ In-place version ofless_equal().",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Seetorch.lerp?",
        "Y": "Tensor.lerp",
        "Z": "Tensor.lerp Seetorch.lerp()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What does Tensor.lerp_ In-place version oflerp do?",
        "Y": "Tensor.lerp_ In-place version oflerp()",
        "Z": "Tensor.lerp_ In-place version oflerp()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is version oflerp()?",
        "Y": "Tensor.lerp_ In-place",
        "Z": "Tensor.lerp_ In-place version oflerp()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Tensor.lgamma?",
        "Y": "Seetorch.lgamma",
        "Z": "Tensor.lgamma Seetorch.lgamma()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Seetorch.lgamma?",
        "Y": "Tensor.lgamma",
        "Z": "Tensor.lgamma Seetorch.lgamma()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is in-place version oflgamma?",
        "Y": "Tensor.lgamma_ In-place version oflgamma()",
        "Z": "Tensor.lgamma_ In-place version oflgamma()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is In-place version oflgamma()?",
        "Y": "Tensor.lgamma",
        "Z": "Tensor.lgamma_ In-place version oflgamma()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What does Tensor.log Seetorch.log do?",
        "Y": "Tensor.log Seetorch.log()",
        "Z": "Tensor.log Seetorch.log()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Tensor.log Seetorch.log()?",
        "Y": "Tensor.log Seetorch.log()",
        "Z": "Tensor.log Seetorch.log()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What does Tensor.log_ In-place version oflog() do?",
        "Y": "Tensor.log_ In-place version oflog()",
        "Z": "Tensor.log_ In-place version oflog()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is version oflog?",
        "Y": "Tensor.log_ In-place",
        "Z": "Tensor.log_ In-place version oflog()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Tensor.logdet?",
        "Y": "Seetorch.logdet",
        "Z": "Tensor.logdet Seetorch.logdet()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Seetorch.logdet?",
        "Y": "Tensor.logdet",
        "Z": "Tensor.logdet Seetorch.logdet()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What does Tensor.log10 Seetorch.log10 call?",
        "Y": "Tensor.log10 Seetorch.log10()",
        "Z": "Tensor.log10 Seetorch.log10()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Tensor.log10?",
        "Y": "Seetorch.log10",
        "Z": "Tensor.log10 Seetorch.log10()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Seetorch.log10?",
        "Y": "Tensor.log10",
        "Z": "Tensor.log10 Seetorch.log10()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What does Tensor.log10_ In-place version oflog10() do?",
        "Y": "Tensor.log10_ In-place version oflog10()",
        "Z": "Tensor.log10_ In-place version oflog10()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is version oflog10()?",
        "Y": "Tensor.log10_ In-place",
        "Z": "Tensor.log10_ In-place version oflog10()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What does Seetorch.log1p do?",
        "Y": "Tensor.log1p",
        "Z": "Tensor.log1p Seetorch.log1p()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Tensor.log1p?",
        "Y": "Seetorch.log1p",
        "Z": "Tensor.log1p Seetorch.log1p()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Seetorch.log1p() function?",
        "Y": "Tensor.log1p",
        "Z": "Tensor.log1p Seetorch.log1p()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What does Tensor.log1p_ In-place version oflog1p() do?",
        "Y": "Tensor.log1p_ In-place version oflog1p()",
        "Z": "Tensor.log1p_ In-place version oflog1p()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is version oflog1p()?",
        "Y": "Tensor.log1p_ In-place",
        "Z": "Tensor.log1p_ In-place version oflog1p()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What does Tensor.log2 Seetorch.log2() do?",
        "Y": "Tensor.log2 Seetorch.log2()",
        "Z": "Tensor.log2 Seetorch.log2()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Tensor.log2?",
        "Y": "Seetorch.log2",
        "Z": "Tensor.log2 Seetorch.log2()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Seetorch.log2() function?",
        "Y": "Tensor.log2",
        "Z": "Tensor.log2 Seetorch.log2()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is In-place version oflog2()?",
        "Y": "Tensor.log2_ In-place version oflog2()",
        "Z": "Tensor.log2_ In-place version oflog2()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is version oflog2()?",
        "Y": "Tensor.log2_ In-place",
        "Z": "Tensor.log2_ In-place version oflog2()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What fillsselftensor with numbers samples from the log-normal distribution parameterized by the given meanmuand standard deviations",
        "Y": "Tensor.log_normal",
        "Z": "Tensor.log_normal_ Fillsselftensor with numbers samples from the log-normal distribution parameterized by the given mean\u03bc\\mu\u03bcand standard deviation\u03c3\\sigma\u03c3.",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What does Seetorch.logaddexp call?",
        "Y": "Tensor.logaddexp",
        "Z": "Tensor.logaddexp Seetorch.logaddexp()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Tensor.logaddexp?",
        "Y": "Seetorch.logaddexp",
        "Z": "Tensor.logaddexp Seetorch.logaddexp()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Seetorch.logaddexp() function?",
        "Y": "Tensor.logaddexp",
        "Z": "Tensor.logaddexp Seetorch.logaddexp()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What does Tensor.logaddexp2 do?",
        "Y": "Tensor.logaddexp2 Seetorch.logaddexp2()",
        "Z": "Tensor.logaddexp2 Seetorch.logaddexp2()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Tensor.logaddexp2 Seetorch.logaddexp2()?",
        "Y": "Tensor.logaddexp2 Seetorch.logaddexp2()",
        "Z": "Tensor.logaddexp2 Seetorch.logaddexp2()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What does Seetorch.logsumexp use?",
        "Y": "Tensor.logsumexp",
        "Z": "Tensor.logsumexp Seetorch.logsumexp()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Tensor.logsumexp?",
        "Y": "Seetorch.logsumexp",
        "Z": "Tensor.logsumexp Seetorch.logsumexp()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Seetorch.logsumexp function?",
        "Y": "Tensor.logsumexp",
        "Z": "Tensor.logsumexp Seetorch.logsumexp()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What are two examples of what?",
        "Y": "Tensor.logical_and Seetorch.logical_and",
        "Z": "Tensor.logical_and Seetorch.logical_and()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Tensor.logical_and_ In-place version oflogical_and()?",
        "Y": "Tensor.logical_and_ In-place version oflogical_and()",
        "Z": "Tensor.logical_and_ In-place version oflogical_and()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is version oflogical_and()?",
        "Y": "Tensor.logical_and_ In-place",
        "Z": "Tensor.logical_and_ In-place version oflogical_and()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Tensor.logical_not?",
        "Y": "Seetorch",
        "Z": "Tensor.logical_not Seetorch.logical_not()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Seetorch.logical_not()?",
        "Y": "Tensor.logical_not",
        "Z": "Tensor.logical_not Seetorch.logical_not()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is In-place version of logical_not()?",
        "Y": "Tensor.logical_not_ In-place version oflogical_not()",
        "Z": "Tensor.logical_not_ In-place version oflogical_not()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is In-place version oflogical_not()?",
        "Y": "Tensor.logical_not",
        "Z": "Tensor.logical_not_ In-place version oflogical_not()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is a Tensor.logical_or?",
        "Y": "Seetorch",
        "Z": "Tensor.logical_or Seetorch.logical_or()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Seetorch.logical_or?",
        "Y": "Tensor.logical_or",
        "Z": "Tensor.logical_or Seetorch.logical_or()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is In-place version oflogical_or?",
        "Y": "Tensor.logical_or_ In-place version oflogical_or()",
        "Z": "Tensor.logical_or_ In-place version oflogical_or()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is the In-place version oflogical_or?",
        "Y": "Tensor.logical_or",
        "Z": "Tensor.logical_or_ In-place version oflogical_or()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is logical xor?",
        "Y": "Tensor.logical_xor Seetorch.logical_xor",
        "Z": "Tensor.logical_xor Seetorch.logical_xor()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Tensor.logical_xor?",
        "Y": "Seetorch",
        "Z": "Tensor.logical_xor Seetorch.logical_xor()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Seetorch.logical_xor?",
        "Y": "Tensor.logical_xor",
        "Z": "Tensor.logical_xor Seetorch.logical_xor()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is In-place version of logical_xor?",
        "Y": "Tensor.logical_xor_ In-place version oflogical_xor()",
        "Z": "Tensor.logical_xor_ In-place version oflogical_xor()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is In-place version oflogical_xor()?",
        "Y": "Tensor.logical_xor",
        "Z": "Tensor.logical_xor_ In-place version oflogical_xor()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What does Tensor.logit Seetorch.logit do?",
        "Y": "Tensor.logit Seetorch.logit()",
        "Z": "Tensor.logit Seetorch.logit()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Tensor.logit?",
        "Y": "Seetorch.logit",
        "Z": "Tensor.logit Seetorch.logit()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Seetorch.logit function?",
        "Y": "Tensor.logit",
        "Z": "Tensor.logit Seetorch.logit()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What does Tensor.logit_ In-place version oflogit() do?",
        "Y": "Tensor.logit_ In-place version oflogit()",
        "Z": "Tensor.logit_ In-place version oflogit()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is version oflogit()?",
        "Y": "Tensor.logit_ In-place",
        "Z": "Tensor.logit_ In-place version oflogit()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is tensor.long self.long() equivalent to?",
        "Y": "self.to",
        "Z": "Tensor.long self.long()is equivalent toself.to(torch.int64).",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Seetorch.lstsq?",
        "Y": "Tensor.lstsq",
        "Z": "Tensor.lstsq Seetorch.lstsq()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Tensor.lstsq?",
        "Y": "Seetorch.lstsq",
        "Z": "Tensor.lstsq Seetorch.lstsq()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is company that owns the company?",
        "Y": "Tensor.lt Seetorch.lt",
        "Z": "Tensor.lt Seetorch.lt().",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Tensor.lt?",
        "Y": "Seetorch.lt",
        "Z": "Tensor.lt Seetorch.lt().",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is the name of Seetorch.lt?",
        "Y": "Tensor.lt",
        "Z": "Tensor.lt Seetorch.lt().",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is version oflt()?",
        "Y": "Tensor.lt_ In-place",
        "Z": "Tensor.lt_ In-place version oflt().",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is less lt(other) -> Tensor?",
        "Y": "Tensor",
        "Z": "Tensor.less lt(other) -> Tensor",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is lt(other) -> Tensor?",
        "Y": "Tensor.less",
        "Z": "Tensor.less lt(other) -> Tensor",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Tensor.less_ In-place version ofless()?",
        "Y": "Tensor.less_ In-place version ofless()",
        "Z": "Tensor.less_ In-place version ofless().",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is version ofless()?",
        "Y": "Tensor.less_ In-place",
        "Z": "Tensor.less_ In-place version ofless().",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Tensor.lu Seetorch.lu?",
        "Y": "Tensor.lu Seetorch.lu",
        "Z": "Tensor.lu Seetorch.lu()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Tensor.lu?",
        "Y": "Seetorch.lu",
        "Z": "Tensor.lu Seetorch.lu()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Seetorch.lu?",
        "Y": "Tensor.lu",
        "Z": "Tensor.lu Seetorch.lu()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What does Seetorch.lu_solve do?",
        "Y": "Tensor.lu_solve",
        "Z": "Tensor.lu_solve Seetorch.lu_solve()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What does Tensor.lu_solve do?",
        "Y": "Seetorch.lu_solve",
        "Z": "Tensor.lu_solve Seetorch.lu_solve()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What does Tensor.lu_solve?",
        "Y": "Seetorch.lu_solve()",
        "Z": "Tensor.lu_solve Seetorch.lu_solve()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What does Seetorch.lu_solve() do?",
        "Y": "Tensor.lu_solve",
        "Z": "Tensor.lu_solve Seetorch.lu_solve()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What makes aclsinstance with the same data pointer as self?",
        "Y": "Tensor.as_subclass",
        "Z": "Tensor.as_subclass Makes aclsinstance with the same data pointer asself.",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What makes aclsinstance with the same data pointer asself?",
        "Y": "Tensor.as_subclass",
        "Z": "Tensor.as_subclass Makes aclsinstance with the same data pointer asself.",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is used for each element in selftensor and the giventensorand stores the results in selftensor?",
        "Y": "Tensor.map_ Appliescallable",
        "Z": "Tensor.map_ Appliescallablefor each element inselftensor and the giventensorand stores the results inselftensor.",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What _ Appliescallablefor each element inselftensor and the giventensorand stores the results inselftensor?",
        "Y": "Tensor.map",
        "Z": "Tensor.map_ Appliescallablefor each element inselftensor and the giventensorand stores the results inselftensor.",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What does Tensor.masked_scatter_ Copies elements fromsourceintoselftensor?",
        "Y": "Tensor.masked_scatter_ Copies elements fromsourceintoselftensor",
        "Z": "Tensor.masked_scatter_ Copies elements fromsourceintoselftensor at positions where themaskis True.",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is the default value of Tensor.masked_scatter_Copies elements fromsourceintoselftensor?",
        "Y": "themaskis True",
        "Z": "Tensor.masked_scatter_ Copies elements fromsourceintoselftensor at positions where themaskis True.",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What does.masked_scatter_ Copies elements fromsourceintoselftensor at positions where themaskis True?",
        "Y": "Tensor",
        "Z": "Tensor.masked_scatter_ Copies elements fromsourceintoselftensor at positions where themaskis True.",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is the Out-of-place version of of torch.Tensor.masked_scatter_()?",
        "Y": "Tensor.masked_scatter",
        "Z": "Tensor.masked_scatter Out-of-place version of torch.Tensor.masked_scatter_()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What version of of torch.Tensor.masked_scatter_()?",
        "Y": "Tensor.masked_scatter Out-of-place",
        "Z": "Tensor.masked_scatter Out-of-place version of torch.Tensor.masked_scatter_()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What does Tensor.masked_fill_fill elements of?",
        "Y": "selftensor",
        "Z": "Tensor.masked_fill_ Fills elements ofselftensor withvaluewheremaskis True.",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Out-of-place version of of torch.Tensor.masked_fill?",
        "Y": "Tensor.masked_fill Out-of-place version of torch.Tensor.masked_fill_()",
        "Z": "Tensor.masked_fill Out-of-place version of torch.Tensor.masked_fill_()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What version of of torch.Tensor.masked_fill_()?",
        "Y": "Tensor.masked_fill Out-of-place",
        "Z": "Tensor.masked_fill Out-of-place version of torch.Tensor.masked_fill_()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What does Tensor.masked_select do?",
        "Y": "Seetorch.masked_select",
        "Z": "Tensor.masked_select Seetorch.masked_select()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What does Tensor.masked_select Seetorch.masked_select() do?",
        "Y": "Tensor.masked_select Seetorch.masked_select()",
        "Z": "Tensor.masked_select Seetorch.masked_select()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Tensor.matmul Seetorch.matmul?",
        "Y": "Tensor.matmul Seetorch.matmul",
        "Z": "Tensor.matmul Seetorch.matmul()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Tensor.matmul?",
        "Y": "Seetorch.matmul",
        "Z": "Tensor.matmul Seetorch.matmul()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Seetorch.matmul?",
        "Y": "Tensor.matmul",
        "Z": "Tensor.matmul Seetorch.matmul()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is the replacement for Tensor.matrix _power?",
        "Y": "usetorch.linalg.matrix _power()",
        "Z": "Tensor.matrix _power Notematrix _power()is deprecated, usetorch.linalg.matrix _power()instead.",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What does Tensor.matrix _exp do?",
        "Y": "Tensor.matrix _exp Seetorch.matrix _exp()",
        "Z": "Tensor.matrix _exp Seetorch.matrix _exp()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Seetorch.matrix _exp() function?",
        "Y": "Tensor.matrix _exp",
        "Z": "Tensor.matrix _exp Seetorch.matrix _exp()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What does Tensor.max Seetorch.max() do?",
        "Y": "Tensor.max Seetorch.max()",
        "Z": "Tensor.max Seetorch.max()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is the maximum Seetorch.maximum?",
        "Y": "Tensor",
        "Z": "Tensor.maximum Seetorch.maximum()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is the Tensor.maximum?",
        "Y": "Seetorch.maximum",
        "Z": "Tensor.maximum Seetorch.maximum()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is the maximum of a Tensor?",
        "Y": "Seetorch",
        "Z": "Tensor.maximum Seetorch.maximum()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What does Tensor mean?",
        "Y": "Seetorch.mean",
        "Z": "Tensor.mean Seetorch.mean()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What does Seetorch.mean mean?",
        "Y": "Tensor.mean",
        "Z": "Tensor.mean Seetorch.mean()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is.median Seetorch.median?",
        "Y": "Tensor",
        "Z": "Tensor.median Seetorch.median()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Seetorch.median?",
        "Y": "Tensor.median",
        "Z": "Tensor.median Seetorch.median()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What does Seetorch.nanmedian stand for?",
        "Y": "Tensor.nanmedian",
        "Z": "Tensor.nanmedian Seetorch.nanmedian()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Tensor.nanmedian?",
        "Y": "Seetorch.nanmedian",
        "Z": "Tensor.nanmedian Seetorch.nanmedian()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Seetorch.nanmedian?",
        "Y": "Tensor.nanmedian",
        "Z": "Tensor.nanmedian Seetorch.nanmedian()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What does Tensor.min Seetorch.min do?",
        "Y": "Tensor.min Seetorch.min()",
        "Z": "Tensor.min Seetorch.min()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Seetorch.min function?",
        "Y": "Tensor.min",
        "Z": "Tensor.min Seetorch.min()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is the minimum value for a Seetorch?",
        "Y": "Tensor.minimum Seetorch.minimum",
        "Z": "Tensor.minimum Seetorch.minimum()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is the minimum of a Tensor?",
        "Y": "Seetorch",
        "Z": "Tensor.minimum Seetorch.minimum()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Tensor.mm Seetorch.mm?",
        "Y": "Tensor.mm Seetorch.mm",
        "Z": "Tensor.mm Seetorch.mm()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Tensor.smm?",
        "Y": "Seetorch.smm",
        "Z": "Tensor.smm Seetorch.smm()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is function that determines the mode Seetorch.mode?",
        "Y": "Tensor",
        "Z": "Tensor.mode Seetorch.mode()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Tensor.mode?",
        "Y": "Seetorch.mode",
        "Z": "Tensor.mode Seetorch.mode()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Tensor.mode Seetorch.mode?",
        "Y": "Tensor.mode Seetorch.mode",
        "Z": "Tensor.mode Seetorch.mode()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is component that moves the Seetorch?",
        "Y": "Tensor",
        "Z": "Tensor.movedim Seetorch.movedim()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What does Tensor.movedim do?",
        "Y": "Seetorch",
        "Z": "Tensor.movedim Seetorch.movedim()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Tensor.movedim?",
        "Y": "Seetorch",
        "Z": "Tensor.movedim Seetorch.movedim()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is movedim Seetorch.movedim()?",
        "Y": "Tensor",
        "Z": "Tensor.movedim Seetorch.movedim()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Tensor.moveaxis?",
        "Y": "Seetorch",
        "Z": "Tensor.moveaxis Seetorch.moveaxis()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is the name of Seetorch.moveaxis()?",
        "Y": "Tensor.moveaxis",
        "Z": "Tensor.moveaxis Seetorch.moveaxis()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What does Tensor.msort?",
        "Y": "Tensor.msort Seetorch.msort()",
        "Z": "Tensor.msort Seetorch.msort()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Tensor.msort?",
        "Y": "Seetorch.msort",
        "Z": "Tensor.msort Seetorch.msort()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Seetorch.msort function?",
        "Y": "Tensor.msort",
        "Z": "Tensor.msort Seetorch.msort()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is mule?",
        "Y": "Tensor.mul Seetorch.mul",
        "Z": "Tensor.mul Seetorch.mul().",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is mul function?",
        "Y": "Tensor.mul_ In-place version ofmul()",
        "Z": "Tensor.mul_ In-place version ofmul().",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is version ofmul()?",
        "Y": "Tensor.mul_ In-place",
        "Z": "Tensor.mul_ In-place version ofmul().",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is component that is used to multiply Seetorch.multiply()?",
        "Y": "Tensor",
        "Z": "Tensor.multiply Seetorch.multiply().",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What does Tensor.multiply?",
        "Y": "Seetorch",
        "Z": "Tensor.multiply Seetorch.multiply().",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Tensor.multiply_ In-place version ofmultiply()?",
        "Y": "Tensor.multiply_ In-place version ofmultiply()",
        "Z": "Tensor.multiply_ In-place version ofmultiply().",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is version of multiply()?",
        "Y": "Tensor.multiply_ In-place",
        "Z": "Tensor.multiply_ In-place version ofmultiply().",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Tensor.multinomial Seetorch.multinomial?",
        "Y": "Tensor.multinomial Seetorch.multinomial",
        "Z": "Tensor.multinomial Seetorch.multinomial()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is a Tensor.multinomial?",
        "Y": "Seetorch.multinomial",
        "Z": "Tensor.multinomial Seetorch.multinomial()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Seetorch.multinomial()?",
        "Y": "Tensor.multinomial",
        "Z": "Tensor.multinomial Seetorch.multinomial()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Tensor.mv?",
        "Y": "Seetorch",
        "Z": "Tensor.mv Seetorch.mv()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Seetorch.mv?",
        "Y": "Tensor.mv",
        "Z": "Tensor.mv Seetorch.mv()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Tensor.mvlgamma?",
        "Y": "Seetorch",
        "Z": "Tensor.mvlgamma Seetorch.mvlgamma()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Seetorch.mvlgamma?",
        "Y": "Tensor.mvlgamma",
        "Z": "Tensor.mvlgamma Seetorch.mvlgamma()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is mvlgamma version of Tensor?",
        "Y": "Tensor.mvlgamma_ In-place version ofmvlgamma",
        "Z": "Tensor.mvlgamma_ In-place version ofmvlgamma()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is In-place version ofmvlgamma()?",
        "Y": "Tensor.mvlgamma",
        "Z": "Tensor.mvlgamma_ In-place version ofmvlgamma()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Tensor.nansum Seetorch.nansum?",
        "Y": "Tensor.nansum Seetorch.nansum",
        "Z": "Tensor.nansum Seetorch.nansum()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Tensor.nansum?",
        "Y": "Seetorch.nansum",
        "Z": "Tensor.nansum Seetorch.nansum()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Seetorch.nansum?",
        "Y": "Tensor.nansum",
        "Z": "Tensor.nansum Seetorch.nansum()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What does Seetorch.narrow do?",
        "Y": "Tensor.narrow",
        "Z": "Tensor.narrow Seetorch.narrow()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "Tensor.narrow_copy returns a copy instead of what?",
        "Y": "shared storage",
        "Z": "Tensor.narrow_copy Same asTensor.narrow()except returning a copy rather than shared storage.",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What does Tensor.narrow() return instead of?",
        "Y": "shared storage",
        "Z": "Tensor.narrow_copy Same asTensor.narrow()except returning a copy rather than shared storage.",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is the same as Tensor.narrow_copy?",
        "Y": "Tensor.narrow()",
        "Z": "Tensor.narrow_copy Same asTensor.narrow()except returning a copy rather than shared storage.",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Tensor.ndimension Alias fordim?",
        "Y": "Tensor.ndimension Alias fordim",
        "Z": "Tensor.ndimension Alias fordim()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Alias fordim()?",
        "Y": "Tensor.ndimension",
        "Z": "Tensor.ndimension Alias fordim()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What does Seetorch.nan_to_num() do?",
        "Y": "Tensor.nan_to_num",
        "Z": "Tensor.nan_to_num Seetorch.nan_to_num().",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is In-place version ofnan_to_num()?",
        "Y": "Tensor.nan_to_num_ In-place version ofnan_to_num()",
        "Z": "Tensor.nan_to_num_ In-place version ofnan_to_num().",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is the In-place version of ofnan_to_num()?",
        "Y": "Tensor.nan_to_num",
        "Z": "Tensor.nan_to_num_ In-place version ofnan_to_num().",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Tensor.ne Seetorch.ne?",
        "Y": "Tensor.ne Seetorch.ne",
        "Z": "Tensor.ne Seetorch.ne().",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is function used by Tensor.ne?",
        "Y": "Tensor.ne_ In-place version ofne()",
        "Z": "Tensor.ne_ In-place version ofne().",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is version of ofne()?",
        "Y": "Tensor.ne_ In-place",
        "Z": "Tensor.ne_ In-place version ofne().",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is tensor that is not equal to Seetorch?",
        "Y": "Tensor",
        "Z": "Tensor.not_equal Seetorch.not_equal().",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Tensor.not_equal()?",
        "Y": "Seetorch",
        "Z": "Tensor.not_equal Seetorch.not_equal().",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is not_equal Seetorch.not_equal()?",
        "Y": "Tensor",
        "Z": "Tensor.not_equal Seetorch.not_equal().",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is In-place version of not_equal()?",
        "Y": "Tensor",
        "Z": "Tensor.not_equal_ In-place version ofnot_equal().",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is the In-place version of not_equal()?",
        "Y": "Tensor.not_equal",
        "Z": "Tensor.not_equal_ In-place version ofnot_equal().",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Tensor.neg?",
        "Y": "Seetorch.neg",
        "Z": "Tensor.neg Seetorch.neg()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Seetorch.neg?",
        "Y": "Tensor.neg",
        "Z": "Tensor.neg Seetorch.neg()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is function that is used by Tensor.neg?",
        "Y": "Tensor.neg_ In-place version ofneg()",
        "Z": "Tensor.neg_ In-place version ofneg()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is version ofneg()?",
        "Y": "Tensor.neg_ In-place",
        "Z": "Tensor.neg_ In-place version ofneg()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is a negative Seetorch?",
        "Y": "Tensor",
        "Z": "Tensor.negative Seetorch.negative()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is negative?",
        "Y": "Tensor.negative_ In-place version ofnegative",
        "Z": "Tensor.negative_ In-place version ofnegative()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is version of negative?",
        "Y": "Tensor.negative_ In-place",
        "Z": "Tensor.negative_ In-place version ofnegative()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Tensor.nelement?",
        "Y": "Alias fornumel",
        "Z": "Tensor.nelement Alias fornumel()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What does Tensor.nelement Alias fornumel do?",
        "Y": "Tensor.nelement Alias fornumel()",
        "Z": "Tensor.nelement Alias fornumel()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Alias fornumel?",
        "Y": "Tensor.nelement",
        "Z": "Tensor.nelement Alias fornumel()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is next after Seetorch?",
        "Y": "Tensor",
        "Z": "Tensor.nextafter Seetorch.nextafter()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is In-place version ofnextafter()?",
        "Y": "Tensor.nextafter_ In-place version ofnextafter()",
        "Z": "Tensor.nextafter_ In-place version ofnextafter()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is In-place version of ofnextafter()?",
        "Y": "Tensor.nextafter",
        "Z": "Tensor.nextafter_ In-place version ofnextafter()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What does Seetorch.nonzero do?",
        "Y": "Tensor.nonzero",
        "Z": "Tensor.nonzero Seetorch.nonzero()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Tensor.nonzero?",
        "Y": "Seetorch.nonzero",
        "Z": "Tensor.nonzero Seetorch.nonzero()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is the name of Seetorch.norm?",
        "Y": "Tensor.norm",
        "Z": "Tensor.norm Seetorch.norm()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What parameter does Tensor.normal_ Fillsselftensor with elements samples from?",
        "Y": "bymeanandstd",
        "Z": "Tensor.normal_ Fillsselftensor with elements samples from the normal distribution parameterized bymeanandstd.",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is filled with elements from the normal distribution parameterized bymeanandstd?",
        "Y": "Tensor.normal_ Fillsselftensor",
        "Z": "Tensor.normal_ Fillsselftensor with elements samples from the normal distribution parameterized bymeanandstd.",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What fillsselftensor with elements samples from the normal distribution parameterized bymeanandstd?",
        "Y": "Tensor.normal",
        "Z": "Tensor.normal_ Fillsselftensor with elements samples from the normal distribution parameterized bymeanandstd.",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "Tensor.numpy Returns selftensor as what?",
        "Y": "NumPyndarray",
        "Z": "Tensor.numpy Returnsselftensor as a NumPyndarray.",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What returns selftensor as a NumPyndarray?",
        "Y": "Tensor.numpy",
        "Z": "Tensor.numpy Returnsselftensor as a NumPyndarray.",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Tensor.orgqr?",
        "Y": "Seetorch.orgqr",
        "Z": "Tensor.orgqr Seetorch.orgqr()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is the name of Seetorch.orgqr?",
        "Y": "Tensor.orgqr",
        "Z": "Tensor.orgqr Seetorch.orgqr()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Tensor.ormqr?",
        "Y": "Seetorch.ormqr",
        "Z": "Tensor.ormqr Seetorch.ormqr()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Seetorch.ormqr?",
        "Y": "Tensor.ormqr",
        "Z": "Tensor.ormqr Seetorch.ormqr()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What does Tensor.outer do?",
        "Y": "Tensor.outer Seetorch.outer()",
        "Z": "Tensor.outer Seetorch.outer().",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is the name of Seetorch.outer()?",
        "Y": "Tensor.outer",
        "Z": "Tensor.outer Seetorch.outer().",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Tensor.permute?",
        "Y": "Seetorch.permute",
        "Z": "Tensor.permute Seetorch.permute()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is the name of Seetorch.permute()?",
        "Y": "Tensor.permute",
        "Z": "Tensor.permute Seetorch.permute()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What copies the tensor to pinned memory?",
        "Y": "Tensor.pin_memory",
        "Z": "Tensor.pin_memory Copies the tensor to pinned memory, if it\u2019s not already pinned.",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What does Tensor.pin_memory copy the tensor to?",
        "Y": "pinned memory",
        "Z": "Tensor.pin_memory Copies the tensor to pinned memory, if it\u2019s not already pinned.",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is inverse of the Seetorch?",
        "Y": "Tensor.pinverse Seetorch.pinverse()",
        "Z": "Tensor.pinverse Seetorch.pinverse()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Seetorch.pinverse()?",
        "Y": "Tensor.pinverse",
        "Z": "Tensor.pinverse Seetorch.pinverse()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Tensor.polygamma?",
        "Y": "Seetorch.polygamma",
        "Z": "Tensor.polygamma Seetorch.polygamma()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Seetorch.polygamma?",
        "Y": "Tensor.polygamma",
        "Z": "Tensor.polygamma Seetorch.polygamma()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is in-place version of polygamma?",
        "Y": "Tensor.polygamma",
        "Z": "Tensor.polygamma_ In-place version ofpolygamma()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is a positive Seetorch?",
        "Y": "Tensor",
        "Z": "Tensor.positive Seetorch.positive()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Tensor.pow Seetorch.pow?",
        "Y": "Tensor.pow Seetorch.pow",
        "Z": "Tensor.pow Seetorch.pow()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Tensor.pow?",
        "Y": "Seetorch",
        "Z": "Tensor.pow Seetorch.pow()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Seetorch.pow() function?",
        "Y": "Tensor.pow",
        "Z": "Tensor.pow Seetorch.pow()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What does Tensor.pow_ In-place version ofpow() do?",
        "Y": "Tensor.pow_ In-place version ofpow()",
        "Z": "Tensor.pow_ In-place version ofpow()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is version ofpow()?",
        "Y": "Tensor.pow_ In-place",
        "Z": "Tensor.pow_ In-place version ofpow()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What does Tensor.prod do?",
        "Y": "Tensor.prod Seetorch.prod()",
        "Z": "Tensor.prod Seetorch.prod()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Tensor.prod?",
        "Y": "Seetorch.prod",
        "Z": "Tensor.prod Seetorch.prod()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Seetorch.prod?",
        "Y": "Tensor.prod",
        "Z": "Tensor.prod Seetorch.prod()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What copies the elements fromsourceinto the positions specified byindex?",
        "Y": "Tensor.put_",
        "Z": "Tensor.put_ Copies the elements fromsourceinto the positions specified byindex.",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What does Tensor.qr stand for?",
        "Y": "Tensor.qr Seetorch.qr()",
        "Z": "Tensor.qr Seetorch.qr()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Seetorch.qr?",
        "Y": "Tensor.qr",
        "Z": "Tensor.qr Seetorch.qr()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What returns the quantization scheme of a given QTensor?",
        "Y": "Tensor.qscheme",
        "Z": "Tensor.qscheme Returns the quantization scheme of a given QTensor.",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "Tensor.qscheme returns the quantization scheme of a given what?",
        "Y": "QTensor",
        "Z": "Tensor.qscheme Returns the quantization scheme of a given QTensor.",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What does Tensor.quantile Seetorch.quantile() do?",
        "Y": "Tensor.quantile Seetorch.quantile()",
        "Z": "Tensor.quantile Seetorch.quantile()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Seetorch.quantile()?",
        "Y": "Tensor.quantile",
        "Z": "Tensor.quantile Seetorch.quantile()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What does Seetorch.nanquantile do?",
        "Y": "Tensor.nanquantile",
        "Z": "Tensor.nanquantile Seetorch.nanquantile()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Tensor.nanquantile?",
        "Y": "Seetorch",
        "Z": "Tensor.nanquantile Seetorch.nanquantile()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "How is a Tensor quantized?",
        "Y": "linear(affine) quantization",
        "Z": "Tensor.q_scale Given a Tensor quantized by linear(affine) quantization, returns the scale of the underlying quantizer().",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What returns the scale of the underlying quantizer()?",
        "Y": "Tensor.q_scale",
        "Z": "Tensor.q_scale Given a Tensor quantized by linear(affine) quantization, returns the scale of the underlying quantizer().",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What does Tensor.q_ return?",
        "Y": "zero_point",
        "Z": "Tensor.q_zero_point Given a Tensor quantized by linear(affine) quantization, returns the zero_point of the underlying quantizer().",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is a Tensor quantized by?",
        "Y": "linear(affine) quantization",
        "Z": "Tensor.q_zero_point Given a Tensor quantized by linear(affine) quantization, returns the zero_point of the underlying quantizer().",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is the value of Tensor.q_?",
        "Y": "zero_point",
        "Z": "Tensor.q_zero_point Given a Tensor quantized by linear(affine) quantization, returns the zero_point of the underlying quantizer().",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is an affine quantization of a Tensor?",
        "Y": "linear",
        "Z": "Tensor.q_per_channel_scales Given a Tensor quantized by linear (affine) per-channel quantization, returns a Tensor of scales of the underlying quantizer.",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is the term for affine per-channel quantization?",
        "Y": "linear",
        "Z": "Tensor.q_per_channel_zero_points Given a Tensor quantized by linear (affine) per-channel quantization, returns a tensor of zero_points of the underlying quantizer.",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is the tensor of the underlying quantizer?",
        "Y": "zero",
        "Z": "Tensor.q_per_channel_zero_points Given a Tensor quantized by linear (affine) per-channel quantization, returns a tensor of zero_points of the underlying quantizer.",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is an affine per-channel quantization?",
        "Y": "linear",
        "Z": "Tensor.q_per_channel_zero_points Given a Tensor quantized by linear (affine) per-channel quantization, returns a tensor of zero_points of the underlying quantizer.",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is another term for linear quantization?",
        "Y": "affine",
        "Z": "Tensor.q_per_channel_zero_points Given a Tensor quantized by linear (affine) per-channel quantization, returns a tensor of zero_points of the underlying quantizer.",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "Tensor.q_per_channel_axis Given a Tensor quantized by what type of per-channel quantization?",
        "Y": "linear",
        "Z": "Tensor.q_per_channel_axis Given a Tensor quantized by linear (affine) per-channel quantization, returns the index of dimension on which per-channel quantization is applied.",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What does Tensor.q_per_channel_axis return?",
        "Y": "index of dimension",
        "Z": "Tensor.q_per_channel_axis Given a Tensor quantized by linear (affine) per-channel quantization, returns the index of dimension on which per-channel quantization is applied.",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "Tensor.q_per_channel_axis Given a Tensor quantized by what?",
        "Y": "linear",
        "Z": "Tensor.q_per_channel_axis Given a Tensor quantized by linear (affine) per-channel quantization, returns the index of dimension on which per-channel quantization is applied.",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What returns the index of dimension on which per-channel quantization is applied?",
        "Y": "Tensor.q_per_channel_axis",
        "Z": "Tensor.q_per_channel_axis Given a Tensor quantized by linear (affine) per-channel quantization, returns the index of dimension on which per-channel quantization is applied.",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What does Seetorch.rad2deg do?",
        "Y": "Tensor.rad2deg",
        "Z": "Tensor.rad2deg Seetorch.rad2deg()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Tensor.rad2deg?",
        "Y": "Seetorch",
        "Z": "Tensor.rad2deg Seetorch.rad2deg()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Seetorch.rad2deg?",
        "Y": "Tensor.rad2deg",
        "Z": "Tensor.rad2deg Seetorch.rad2deg()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "Tensor.random_ Fillsselftensor with numbers sampled from what kind of distribution?",
        "Y": "uniform distribution",
        "Z": "Tensor.random_ Fillsselftensor with numbers sampled from the discrete uniform distribution over[from,to-1].",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What type of tensor is filled with numbers sampled from the discrete uniform distribution over[from,to-1]?",
        "Y": "Tensor.random",
        "Z": "Tensor.random_ Fillsselftensor with numbers sampled from the discrete uniform distribution over[from,to-1].",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What does seetorch.ravel do?",
        "Y": "Tensor.ravel",
        "Z": "Tensor.ravel seetorch.ravel()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Tensor.ravel?",
        "Y": "seetorch",
        "Z": "Tensor.ravel seetorch.ravel()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is reciprocal Seetorch?",
        "Y": "Tensor",
        "Z": "Tensor.reciprocal Seetorch.reciprocal()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is a Tensor.reciprocal?",
        "Y": "Seetorch",
        "Z": "Tensor.reciprocal Seetorch.reciprocal()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is reciprocal function?",
        "Y": "Tensor.reciprocal_ In-place version ofreciprocal()",
        "Z": "Tensor.reciprocal_ In-place version ofreciprocal()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is version ofreciprocal()?",
        "Y": "Tensor.reciprocal_ In-place",
        "Z": "Tensor.reciprocal_ In-place version ofreciprocal()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "When is the tensor memory not reused for another tensor?",
        "Y": "all current work queued onstreamare complete",
        "Z": "Tensor.record_stream Ensures that the tensor memory is not reused for another tensor until all current work queued onstreamare complete.",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What ensures that the tensor memory is not reused for another tensor?",
        "Y": "Tensor.record_stream",
        "Z": "Tensor.record_stream Ensures that the tensor memory is not reused for another tensor until all current work queued onstreamare complete.",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What type of hook does Tensor register?",
        "Y": "backward hook",
        "Z": "Tensor.register_hook Registers a backward hook.",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What registers a backward hook?",
        "Y": "Tensor.register_hook",
        "Z": "Tensor.register_hook Registers a backward hook.",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What does Tensor.remainder do?",
        "Y": "Seetorch.remainder()",
        "Z": "Tensor.remainder Seetorch.remainder()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What does Seetorch.remainder do?",
        "Y": "Tensor.remainder",
        "Z": "Tensor.remainder Seetorch.remainder()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Tensor.remainder?",
        "Y": "Seetorch.remainder",
        "Z": "Tensor.remainder Seetorch.remainder()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Seetorch.remainder?",
        "Y": "Tensor.remainder",
        "Z": "Tensor.remainder Seetorch.remainder()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is in-place version ofmainder()?",
        "Y": "Tensor.remainder_ In-place version ofremainder()",
        "Z": "Tensor.remainder_ In-place version ofremainder()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is version ofremainder()?",
        "Y": "Tensor.remainder_ In-place",
        "Z": "Tensor.remainder_ In-place version ofremainder()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Tensor.renorm?",
        "Y": "Seetorch",
        "Z": "Tensor.renorm Seetorch.renorm()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Seetorch.renorm?",
        "Y": "Tensor.renorm",
        "Z": "Tensor.renorm Seetorch.renorm()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is in-place version ofrenorm?",
        "Y": "Tensor.renorm_ In-place version ofrenorm()",
        "Z": "Tensor.renorm_ In-place version ofrenorm()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is In-place version ofrenorm?",
        "Y": "Tensor.renorm",
        "Z": "Tensor.renorm_ In-place version ofrenorm()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What repeats the tensor along the specified dimensions?",
        "Y": "Tensor",
        "Z": "Tensor.repeat Repeats this tensor along the specified dimensions.",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is tensor that repeats along the specified dimensions?",
        "Y": "Tensor",
        "Z": "Tensor.repeat Repeats this tensor along the specified dimensions.",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is component that performs the repeat interleave of Seetorch?",
        "Y": "Tensor",
        "Z": "Tensor.repeat_interleave Seetorch.repeat_interleave().",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What does Tensor.repeat_interleave?",
        "Y": "Seetorch",
        "Z": "Tensor.repeat_interleave Seetorch.repeat_interleave().",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is.repeat_interleave Seetorch.repeat_interleave()?",
        "Y": "Tensor",
        "Z": "Tensor.repeat_interleave Seetorch.repeat_interleave().",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What type of gradients need to be computed for the Tensor?",
        "Y": "is True if",
        "Z": "Tensor.requires_grad Is True if gradients need to be computed for this Tensor,False otherwise.",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What should record operations on this tensor?",
        "Y": "autograd",
        "Z": "Tensor.requires_grad_ Change if autograd should record operations on this tensor: sets this tensor\u2019srequires_gradattribute in-place.",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "How does autograd record operations on a tensor?",
        "Y": "sets this tensor\u2019srequires_gradattribute in-place",
        "Z": "Tensor.requires_grad_ Change if autograd should record operations on this tensor: sets this tensor\u2019srequires_gradattribute in-place.",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "Tensor.reshape Returns a tensor with the same data and number of elements as selfbut with what?",
        "Y": "the specified shape",
        "Z": "Tensor.reshape Returns a tensor with the same data and number of elements asselfbut with the specified shape.",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What returns a tensor with the same data and number of elements asselfbut with the specified shape?",
        "Y": "Tensor.reshape",
        "Z": "Tensor.reshape Returns a tensor with the same data and number of elements asselfbut with the specified shape.",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What shape is returned to the tensor?",
        "Y": "same shape",
        "Z": "Tensor.reshape_as Returns this tensor as the same shape asother.",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What returns this tensor as the same shape asother?",
        "Y": "Tensor.reshape_as",
        "Z": "Tensor.reshape_as Returns this tensor as the same shape asother.",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What does Tensor.resize_ do?",
        "Y": "Tensor.resize_ Resizesselftensor to the specified size",
        "Z": "Tensor.resize_ Resizesselftensor to the specified size.",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What _ Resizesselftensor to the specified size?",
        "Y": "Tensor.resize",
        "Z": "Tensor.resize_ Resizesselftensor to the specified size.",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What does Tensor.resize_as_ Resize the self tensor to be?",
        "Y": "the same size as the specifiedtensor",
        "Z": "Tensor.resize_as_ Resizes the self tensor to be the same size as the specifiedtensor.",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What resizes the self tensor to be the same size as the specifiedtensor?",
        "Y": "Tensor.resize_as",
        "Z": "Tensor.resize_as_ Resizes the self tensor to be the same size as the specifiedtensor.",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "Tensor.retain_grad Enables.grad attribute for what?",
        "Y": "non-leaf Tensors",
        "Z": "Tensor.retain_grad Enables .grad attribute for non-leaf Tensors.",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "Tensor.retain_grad Enables.grad attribute for what type of Tensors?",
        "Y": "non-leaf",
        "Z": "Tensor.retain_grad Enables .grad attribute for non-leaf Tensors.",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Tensor.roll Seetorch.roll?",
        "Y": "Tensor.roll Seetorch.roll",
        "Z": "Tensor.roll Seetorch.roll()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Tensor.roll Seetorch.roll()?",
        "Y": "Tensor.roll Seetorch.roll()",
        "Z": "Tensor.roll Seetorch.roll()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is rot90 Seetorch.rot90?",
        "Y": "Tensor",
        "Z": "Tensor.rot90 Seetorch.rot90()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Tensor.rot90?",
        "Y": "Seetorch.rot90",
        "Z": "Tensor.rot90 Seetorch.rot90()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Seetorch.rot90?",
        "Y": "Tensor.rot90",
        "Z": "Tensor.rot90 Seetorch.rot90()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Tensor.round Seetorch.round?",
        "Y": "Tensor.round Seetorch.round",
        "Z": "Tensor.round Seetorch.round()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Tensor.round?",
        "Y": "Seetorch.round",
        "Z": "Tensor.round Seetorch.round()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is In-place version ofround()?",
        "Y": "Tensor.round_ In-place version ofround()",
        "Z": "Tensor.round_ In-place version ofround()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is In-place version ofround?",
        "Y": "Tensor.round",
        "Z": "Tensor.round_ In-place version ofround()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What does Tensor.rsqrt do?",
        "Y": "Tensor.rsqrt Seetorch.rsqrt()",
        "Z": "Tensor.rsqrt Seetorch.rsqrt()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Tensor.rsqrt?",
        "Y": "Seetorch.rsqrt",
        "Z": "Tensor.rsqrt Seetorch.rsqrt()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Seetorch.rsqrt?",
        "Y": "Tensor.rsqrt",
        "Z": "Tensor.rsqrt Seetorch.rsqrt()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is in-place version of ofrsqrt?",
        "Y": "Tensor.rsqrt_ In-place version ofrsqrt()",
        "Z": "Tensor.rsqrt_ In-place version ofrsqrt()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is In-place version of ofrsqrt()?",
        "Y": "Tensor.rsqrt",
        "Z": "Tensor.rsqrt_ In-place version ofrsqrt()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is version of of torch.Tensor.scatter_()?",
        "Y": "Tensor.scatter Out-of-place",
        "Z": "Tensor.scatter Out-of-place version of torch.Tensor.scatter_()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "Where are the indices specified?",
        "Y": "theindextensor",
        "Z": "Tensor.scatter_ Writes all values from the tensorsrcintoselfat the indices specified in theindextensor.",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What does Tensor.scatter_ write from the tensorsrcintoselfat the indices specified in the",
        "Y": "all values",
        "Z": "Tensor.scatter_ Writes all values from the tensorsrcintoselfat the indices specified in theindextensor.",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What _ Writes all values from the tensorsrcintoselfat the indices specified in the indextensor",
        "Y": "Tensor.scatter",
        "Z": "Tensor.scatter_ Writes all values from the tensorsrcintoselfat the indices specified in theindextensor.",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "How does Tensor.scatter_add_ add all values from the tensorotherintoselfat the indices specified",
        "Y": "asscatter_()",
        "Z": "Tensor.scatter_add_ Adds all values from the tensorotherintoselfat the indices specified in theindextensor in a similar fashion asscatter_().",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "How does Tensor.scatter_add_ Add all values from the tensorotherintoselfat the indices specified",
        "Y": "asscatter_()",
        "Z": "Tensor.scatter_add_ Adds all values from the tensorotherintoselfat the indices specified in theindextensor in a similar fashion asscatter_().",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is the version of of torch.Tensor.scatter_add_()?",
        "Y": "Tensor.scatter_add Out-of-place",
        "Z": "Tensor.scatter_add Out-of-place version of torch.Tensor.scatter_add_()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What does Tensor.select do?",
        "Y": "Slices the self tensor along the selected dimension at the given index",
        "Z": "Tensor.select Slices the self tensor along the selected dimension at the given index.",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What does Tensor.select along the selected dimension at the given index?",
        "Y": "Slices the self tensor",
        "Z": "Tensor.select Slices the self tensor along the selected dimension at the given index.",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What sets the underlying storage, size, and strides?",
        "Y": "Tensor.set_",
        "Z": "Tensor.set_ Sets the underlying storage, size, and strides.",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What moves the underlying storage to shared memory?",
        "Y": "Tensor.share_memory",
        "Z": "Tensor.share_memory_ Moves the underlying storage to shared memory.",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What _ Moves the underlying storage to shared memory?",
        "Y": "Tensor.share_memory",
        "Z": "Tensor.share_memory_ Moves the underlying storage to shared memory.",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is equivalent to self.to(torch.int16)?",
        "Y": "self.short",
        "Z": "Tensor.short self.short()is equivalent toself.to(torch.int16).",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is tensor.short self.short() equivalent to?",
        "Y": "self.to",
        "Z": "Tensor.short self.short()is equivalent toself.to(torch.int16).",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is sigmoid Seetorch?",
        "Y": "Tensor",
        "Z": "Tensor.sigmoid Seetorch.sigmoid()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Tensor.sigmoid?",
        "Y": "Seetorch",
        "Z": "Tensor.sigmoid Seetorch.sigmoid()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is In-place version ofsigmoid()?",
        "Y": "Tensor.sigmoid_ In-place version ofsigmoid()",
        "Z": "Tensor.sigmoid_ In-place version ofsigmoid()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What version ofsigmoid() does Tensor.sigmoid_ In-place?",
        "Y": "Tensor.sigmoid_ In-place",
        "Z": "Tensor.sigmoid_ In-place version ofsigmoid()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What does Seetorch.sign() stand for?",
        "Y": "Tensor",
        "Z": "Tensor.sign Seetorch.sign()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What does Tensor.sign Seetorch.sign() do?",
        "Y": "Tensor.sign Seetorch.sign()",
        "Z": "Tensor.sign Seetorch.sign()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What does Tensor.sign_ In-place version ofsign() do?",
        "Y": "Tensor.sign_ In-place version ofsign()",
        "Z": "Tensor.sign_ In-place version ofsign()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is version ofsign()?",
        "Y": "Tensor.sign_ In-place",
        "Z": "Tensor.sign_ In-place version ofsign()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is.signbit Seetorch.signbit() function?",
        "Y": "Tensor",
        "Z": "Tensor.signbit Seetorch.signbit()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What does Tensor.signbit do?",
        "Y": "Seetorch.signbit()",
        "Z": "Tensor.signbit Seetorch.signbit()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What does Tensor.signbit Seetorch.signbit() do?",
        "Y": "Tensor.signbit Seetorch.signbit()",
        "Z": "Tensor.signbit Seetorch.signbit()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Tensor.sgn?",
        "Y": "Seetorch.sgn",
        "Z": "Tensor.sgn Seetorch.sgn()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Seetorch.sgn?",
        "Y": "Tensor.sgn",
        "Z": "Tensor.sgn Seetorch.sgn()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is function used by Tensor.sgn?",
        "Y": "Tensor.sgn_ In-place version ofsgn()",
        "Z": "Tensor.sgn_ In-place version ofsgn()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is version ofsgn()?",
        "Y": "Tensor.sgn_ In-place",
        "Z": "Tensor.sgn_ In-place version ofsgn()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is In-place version ofsin()?",
        "Y": "Tensor.sin_ In-place version ofsin()",
        "Z": "Tensor.sin_ In-place version ofsin()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is version ofsin()?",
        "Y": "Tensor.sin_ In-place",
        "Z": "Tensor.sin_ In-place version ofsin()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Tensor.sinc?",
        "Y": "Seetorch.sinc",
        "Z": "Tensor.sinc Seetorch.sinc()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Seetorch.sinc?",
        "Y": "Tensor.sinc",
        "Z": "Tensor.sinc Seetorch.sinc()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What does Tensor.sinc_ In-place version ofsinc() do?",
        "Y": "Tensor.sinc_ In-place version ofsinc()",
        "Z": "Tensor.sinc_ In-place version ofsinc()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is In-place version ofsinc()?",
        "Y": "Tensor.sinc",
        "Z": "Tensor.sinc_ In-place version ofsinc()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Tensor.sinh?",
        "Y": "Seetorch.sinh",
        "Z": "Tensor.sinh Seetorch.sinh()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Seetorch.sinh function?",
        "Y": "Tensor.sinh",
        "Z": "Tensor.sinh Seetorch.sinh()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What does Tensor.sinh_ In-place version ofsinh() do?",
        "Y": "Tensor.sinh_ In-place version ofsinh()",
        "Z": "Tensor.sinh_ In-place version ofsinh()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is version ofsinh()?",
        "Y": "Tensor.sinh_ In-place",
        "Z": "Tensor.sinh_ In-place version ofsinh()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Tensor.asinh?",
        "Y": "Seetorch.asinh",
        "Z": "Tensor.asinh Seetorch.asinh()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Seetorch.asinh?",
        "Y": "Tensor.asinh",
        "Z": "Tensor.asinh Seetorch.asinh()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What does Tensor.asinh do?",
        "Y": "Tensor.asinh_ In-place version ofasinh()",
        "Z": "Tensor.asinh_ In-place version ofasinh()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is In-place version ofasinh()?",
        "Y": "Tensor.asinh",
        "Z": "Tensor.asinh_ In-place version ofasinh()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Tensor.arcsinh?",
        "Y": "Seetorch.arcsinh",
        "Z": "Tensor.arcsinh Seetorch.arcsinh()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Seetorch.arcsinh function?",
        "Y": "Tensor.arcsinh",
        "Z": "Tensor.arcsinh Seetorch.arcsinh()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is in-place version of arcsinh?",
        "Y": "Tensor.arcsinh_ In-place version ofarcsinh()",
        "Z": "Tensor.arcsinh_ In-place version ofarcsinh()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is In-place version ofarcsinh()?",
        "Y": "Tensor.arcsinh",
        "Z": "Tensor.arcsinh_ In-place version ofarcsinh()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What returns the size of the selftensor?",
        "Y": "Tensor",
        "Z": "Tensor.size Returns the size of the self tensor.",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What does Tensor.size return?",
        "Y": "the size of the self tensor",
        "Z": "Tensor.size Returns the size of the self tensor.",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What returns the size of the self tensor?",
        "Y": "Tensor.size",
        "Z": "Tensor.size Returns the size of the self tensor.",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What does Seetorch.slogdet do?",
        "Y": "Tensor.slogdet",
        "Z": "Tensor.slogdet Seetorch.slogdet()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What does Tensor.slogdet stand for?",
        "Y": "Seetorch.slogdet",
        "Z": "Tensor.slogdet Seetorch.slogdet()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Tensor.slogdet?",
        "Y": "Seetorch.slogdet",
        "Z": "Tensor.slogdet Seetorch.slogdet()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Seetorch.slogdet() function?",
        "Y": "Tensor.slogdet",
        "Z": "Tensor.slogdet Seetorch.slogdet()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What does Seetorch.solve() do?",
        "Y": "Tensor.solve",
        "Z": "Tensor.solve Seetorch.solve()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Tensor.solve?",
        "Y": "Seetorch.solve",
        "Z": "Tensor.solve Seetorch.solve()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is.sort Seetorch.sort() function?",
        "Y": "Tensor",
        "Z": "Tensor.sort Seetorch.sort()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What does Tensor.sort Seetorch.sort() do?",
        "Y": "Tensor.sort Seetorch.sort()",
        "Z": "Tensor.sort Seetorch.sort()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is component that splits a Seetorch?",
        "Y": "Tensor",
        "Z": "Tensor.split Seetorch.split()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Tensor.split?",
        "Y": "Seetorch.split",
        "Z": "Tensor.split Seetorch.split()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Seetorch.split() function?",
        "Y": "Tensor.split",
        "Z": "Tensor.split Seetorch.split()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is used to filter the strided tensor?",
        "Y": "indices of the sparse tensormask",
        "Z": "Tensor.sparse_mask Returns a newsparse tensorwith values from a strided tensorselffiltered by the indices of the sparse tensormask.",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is the number of in the asparse tensorself?",
        "Y": "sparse dimensions",
        "Z": "Tensor.sparse_dim Return the number of sparse dimensions in asparse tensorself.",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What returns the number of sparse dimensions in asparse tensorself?",
        "Y": "Tensor.sparse_dim",
        "Z": "Tensor.sparse_dim Return the number of sparse dimensions in asparse tensorself.",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What does Tensor.sqrt do?",
        "Y": "Tensor.sqrt Seetorch.sqrt()",
        "Z": "Tensor.sqrt Seetorch.sqrt()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Tensor.sqrt?",
        "Y": "Seetorch.sqrt",
        "Z": "Tensor.sqrt Seetorch.sqrt()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is in-place version ofsqrt()?",
        "Y": "Tensor.sqrt_ In-place version ofsqrt()",
        "Z": "Tensor.sqrt_ In-place version ofsqrt()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is version ofsqrt()?",
        "Y": "Tensor.sqrt_ In-place",
        "Z": "Tensor.sqrt_ In-place version ofsqrt()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Tensor.square Seetorch.square?",
        "Y": "Tensor.square Seetorch.square",
        "Z": "Tensor.square Seetorch.square()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Tensor.square Seetorch.square()?",
        "Y": "Tensor.square Seetorch.square()",
        "Z": "Tensor.square Seetorch.square()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is In-place version of square()?",
        "Y": "Tensor.square_ In-place version ofsquare()",
        "Z": "Tensor.square_ In-place version ofsquare()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is version of square()?",
        "Y": "Tensor.square_ In-place",
        "Z": "Tensor.square_ In-place version ofsquare()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Seetorch.squeeze() function?",
        "Y": "Tensor.squeeze",
        "Z": "Tensor.squeeze Seetorch.squeeze()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What does Tensor.squeeze_ In-place version ofsqueeze() do?",
        "Y": "Tensor.squeeze_ In-place version ofsqueeze()",
        "Z": "Tensor.squeeze_ In-place version ofsqueeze()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is version ofsqueeze()?",
        "Y": "Tensor.squeeze_ In-place",
        "Z": "Tensor.squeeze_ In-place version ofsqueeze()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Tensor.std?",
        "Y": "Seetorch.std",
        "Z": "Tensor.std Seetorch.std()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Tensor.stft?",
        "Y": "Seetorch.stft",
        "Z": "Tensor.stft Seetorch.stft()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Seetorch.stft?",
        "Y": "Tensor.stft",
        "Z": "Tensor.stft Seetorch.stft()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What returns the underlying storage?",
        "Y": "storage",
        "Z": "Tensor.storage Returns the underlying storage.",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What type of storage returns the underlying storage?",
        "Y": "Tensor",
        "Z": "Tensor.storage Returns the underlying storage.",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "Tensor.storage_offset Returns selftensor's offset in the underlying storage in terms of what?",
        "Y": "number of storage elements",
        "Z": "Tensor.storage_offset Returnsselftensor\u2019s offset in the underlying storage in terms of number of storage elements (not bytes).",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is the offset in selftensor's underlying storage?",
        "Y": "bytes",
        "Z": "Tensor.storage_offset Returnsselftensor\u2019s offset in the underlying storage in terms of number of storage elements (not bytes).",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What returns the type of the underlying storage?",
        "Y": "Tensor.storage_type",
        "Z": "Tensor.storage_type Returns the type of the underlying storage.",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What returns the stride of selftensor?",
        "Y": "stride",
        "Z": "Tensor.stride Returns the stride ofselftensor.",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is sub Seetorch.sub()?",
        "Y": "Tensor",
        "Z": "Tensor.sub Seetorch.sub().",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is the name of Seetorch.sub()?",
        "Y": "Tensor.sub",
        "Z": "Tensor.sub Seetorch.sub().",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What version of sub() does Tensor.sub_ In-place?",
        "Y": "Tensor.sub_ In-place",
        "Z": "Tensor.sub_ In-place version ofsub()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What does Seetorch.subtract() do?",
        "Y": "Tensor",
        "Z": "Tensor.subtract Seetorch.subtract().",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What does Tensor.subtract do?",
        "Y": "Seetorch.subtract",
        "Z": "Tensor.subtract Seetorch.subtract().",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is the term for Seetorch?",
        "Y": "Tensor",
        "Z": "Tensor.subtract Seetorch.subtract().",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What does Tensor.subtract_ In-place version ofsubtract() do?",
        "Y": "Tensor.subtract_ In-place version ofsubtract()",
        "Z": "Tensor.subtract_ In-place version ofsubtract().",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is version of subtract()?",
        "Y": "Tensor.subtract_ In-place",
        "Z": "Tensor.subtract_ In-place version ofsubtract().",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What does Tensor.sum Seetorch.sum do?",
        "Y": "Tensor.sum Seetorch.sum()",
        "Z": "Tensor.sum Seetorch.sum()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is the Tensor.sum Seetorch.sum?",
        "Y": "Tensor.sum Seetorch.sum",
        "Z": "Tensor.sum Seetorch.sum()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is a Sumthistensor?",
        "Y": "Tensor",
        "Z": "Tensor.sum_to_size Sumthistensor tosize.",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is a Tensor.sum_to_size?",
        "Y": "Sumthistensor",
        "Z": "Tensor.sum_to_size Sumthistensor tosize.",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "Tosize what is a Tensor.sum_to_size?",
        "Y": "Sumthistensor",
        "Z": "Tensor.sum_to_size Sumthistensor tosize.",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is the Sumthistensor tosize?",
        "Y": "Tensor.sum_to_size",
        "Z": "Tensor.sum_to_size Sumthistensor tosize.",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Tensor.svd?",
        "Y": "Seetorch.svd",
        "Z": "Tensor.svd Seetorch.svd()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Seetorch.svd?",
        "Y": "Tensor.svd",
        "Z": "Tensor.svd Seetorch.svd()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What does Seetorch.swapaxes do?",
        "Y": "Tensor.swapaxes",
        "Z": "Tensor.swapaxes Seetorch.swapaxes()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Tensor.swapaxes?",
        "Y": "Seetorch.swapaxes",
        "Z": "Tensor.swapaxes Seetorch.swapaxes()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What does Seetorch.swapdims do?",
        "Y": "Tensor.swapdims",
        "Z": "Tensor.swapdims Seetorch.swapdims()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Tensor.swapdims?",
        "Y": "Seetorch.swapdims",
        "Z": "Tensor.swapdims Seetorch.swapdims()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Tensor.symeig?",
        "Y": "Seetorch.symeig",
        "Z": "Tensor.symeig Seetorch.symeig()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Seetorch.symeig?",
        "Y": "Tensor.symeig",
        "Z": "Tensor.symeig Seetorch.symeig()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What does Tensor.t Seetorch.t do?",
        "Y": "Tensor.t Seetorch.t()",
        "Z": "Tensor.t Seetorch.t()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Tensor.t Seetorch?",
        "Y": "Tensor.t Seetorch.t",
        "Z": "Tensor.t Seetorch.t()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Tensor.t Seetorch.t?",
        "Y": "Tensor.t Seetorch.t",
        "Z": "Tensor.t Seetorch.t()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is version of oft?",
        "Y": "Tensor.t_ In-place",
        "Z": "Tensor.t_ In-place version oft()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Tensor.tensor_split?",
        "Y": "Seetorch.tensor_split",
        "Z": "Tensor.tensor_split Seetorch.tensor_split()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What does Seetorch.tensor_split call?",
        "Y": "Tensor.tensor_split",
        "Z": "Tensor.tensor_split Seetorch.tensor_split()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is function that is used to determine the type of tile?",
        "Y": "Tensor.tile Seetorch.tile()",
        "Z": "Tensor.tile Seetorch.tile()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Tensor.tile?",
        "Y": "Seetorch.tile",
        "Z": "Tensor.tile Seetorch.tile()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Seetorch.tile?",
        "Y": "Tensor.tile",
        "Z": "Tensor.tile Seetorch.tile()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What performs Tensor dtype and/or device conversion?",
        "Y": "Tensor.to",
        "Z": "Tensor.to Performs Tensor dtype and/or device conversion.",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What does Tensor.to perform?",
        "Y": "Tensor dtype and/or device conversion",
        "Z": "Tensor.to Performs Tensor dtype and/or device conversion.",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What does Tensor.to_mkldnn return a copy of?",
        "Y": "intorch.mkldnnlayout",
        "Z": "Tensor.to_mkldnn Returns a copy of the tensor intorch.mkldnnlayout.",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What does Tensor.to_mkldnn return?",
        "Y": "a copy",
        "Z": "Tensor.to_mkldnn Returns a copy of the tensor intorch.mkldnnlayout.",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is function that takes Seetorch.take()?",
        "Y": "Tensor",
        "Z": "Tensor.take Seetorch.take()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Tensor.take Seetorch.take?",
        "Y": "Tensor.take Seetorch.take",
        "Z": "Tensor.take Seetorch.take()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "Take_along_dim Seetorch.take_along_dim() what?",
        "Y": "Tensor",
        "Z": "Tensor.take_along_dim Seetorch.take_along_dim()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Tensor.tan Seetorch.tan?",
        "Y": "Tensor.tan Seetorch.tan",
        "Z": "Tensor.tan Seetorch.tan()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Tensor.tan?",
        "Y": "Tensor.tan Seetorch.tan",
        "Z": "Tensor.tan Seetorch.tan()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Tensor.tan_ In-place version of oftan?",
        "Y": "Tensor.tan_ In-place version oftan()",
        "Z": "Tensor.tan_ In-place version oftan()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is version of oftan?",
        "Y": "Tensor.tan_ In-place",
        "Z": "Tensor.tan_ In-place version oftan()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Tensor.tanh Seetorch.tanh?",
        "Y": "Tensor.tanh Seetorch.tanh",
        "Z": "Tensor.tanh Seetorch.tanh()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Tensor.tanh?",
        "Y": "Seetorch.tanh",
        "Z": "Tensor.tanh Seetorch.tanh()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Seetorch.tanh?",
        "Y": "Tensor.tanh",
        "Z": "Tensor.tanh Seetorch.tanh()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What does Tensor.tanh_ In-place version of oftanh do?",
        "Y": "Tensor.tanh_ In-place version oftanh()",
        "Z": "Tensor.tanh_ In-place version oftanh()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is In-place version of oftanh()?",
        "Y": "Tensor.tanh",
        "Z": "Tensor.tanh_ In-place version oftanh()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Tensor.atanh Seetorch.atanh?",
        "Y": "Tensor.atanh Seetorch.atanh",
        "Z": "Tensor.atanh Seetorch.atanh()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is in-place version of atanh?",
        "Y": "Tensor.atanh_ In-place version ofatanh()",
        "Z": "Tensor.atanh_ In-place version ofatanh()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is In-place version of atanh()?",
        "Y": "Tensor.atanh",
        "Z": "Tensor.atanh_ In-place version ofatanh()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Tensor.arctanh?",
        "Y": "Seetorch",
        "Z": "Tensor.arctanh Seetorch.arctanh()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Seetorch.arctanh function?",
        "Y": "Tensor.arctanh",
        "Z": "Tensor.arctanh Seetorch.arctanh()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is in-place version of arctanh?",
        "Y": "Tensor.arctanh_ In-place version ofarctanh()",
        "Z": "Tensor.arctanh_ In-place version ofarctanh()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is In-place version ofarctanh?",
        "Y": "Tensor.arctanh",
        "Z": "Tensor.arctanh_ In-place version ofarctanh()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What returns the tensor as a list?",
        "Y": "Tensor",
        "Z": "Tensor.tolist Returns the tensor as a (nested) list.",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What returns the tensor as a (nested) list?",
        "Y": "Tensor.tolist",
        "Z": "Tensor.tolist Returns the tensor as a (nested) list.",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Tensor.topk Seetorch.topk?",
        "Y": "Tensor.topk Seetorch.topk",
        "Z": "Tensor.topk Seetorch.topk()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Tensor.topk?",
        "Y": "Seetorch.topk",
        "Z": "Tensor.topk Seetorch.topk()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Seetorch.topk?",
        "Y": "Tensor.topk",
        "Z": "Tensor.topk Seetorch.topk()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Tensor.trace?",
        "Y": "Seetorch.trace",
        "Z": "Tensor.trace Seetorch.trace()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Seetorch.trace?",
        "Y": "Tensor.trace",
        "Z": "Tensor.trace Seetorch.trace()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is.transpose Seetorch.transpose() function?",
        "Y": "Tensor",
        "Z": "Tensor.transpose Seetorch.transpose()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Tensor.transpose?",
        "Y": "Seetorch.transpose",
        "Z": "Tensor.transpose Seetorch.transpose()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Seetorch.transpose() function?",
        "Y": "Tensor.transpose",
        "Z": "Tensor.transpose Seetorch.transpose()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What does Tensor.transpose_ In-place version oftranspose() do?",
        "Y": "Tensor.transpose_ In-place version oftranspose()",
        "Z": "Tensor.transpose_ In-place version oftranspose()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What version oftranspose() does Tensor.transpose_ In-place?",
        "Y": "Tensor.transpose_ In-place",
        "Z": "Tensor.transpose_ In-place version oftranspose()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What does Seetorch.triangular_solve do?",
        "Y": "Tensor.triangular_solve",
        "Z": "Tensor.triangular_solve Seetorch.triangular_solve()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Tensor.triangular_solve?",
        "Y": "Seetorch.triangular_solve()",
        "Z": "Tensor.triangular_solve Seetorch.triangular_solve()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Seetorch.triangular_solve?",
        "Y": "Tensor.triangular_solve",
        "Z": "Tensor.triangular_solve Seetorch.triangular_solve()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What does Tensor.tril Seetorch.tril do?",
        "Y": "Tensor.tril Seetorch.tril()",
        "Z": "Tensor.tril Seetorch.tril()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Tensor.tril?",
        "Y": "Seetorch.tril",
        "Z": "Tensor.tril Seetorch.tril()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Seetorch.tril?",
        "Y": "Tensor.tril",
        "Z": "Tensor.tril Seetorch.tril()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is In-place version oftril()?",
        "Y": "Tensor.tril_ In-place version oftril()",
        "Z": "Tensor.tril_ In-place version oftril()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is version oftril()?",
        "Y": "Tensor.tril_ In-place",
        "Z": "Tensor.tril_ In-place version oftril()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Tensor.triu Seetorch.triu?",
        "Y": "Tensor.triu Seetorch.triu",
        "Z": "Tensor.triu Seetorch.triu()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Tensor.triu?",
        "Y": "Seetorch.triu",
        "Z": "Tensor.triu Seetorch.triu()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Seetorch.triu?",
        "Y": "Tensor.triu",
        "Z": "Tensor.triu Seetorch.triu()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is In-place version oftriu()?",
        "Y": "Tensor.triu_ In-place version oftriu()",
        "Z": "Tensor.triu_ In-place version oftriu()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is version oftriu()?",
        "Y": "Tensor.triu_ In-place",
        "Z": "Tensor.triu_ In-place version oftriu()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is component that does Seetorch.true_divide()?",
        "Y": "Tensor",
        "Z": "Tensor.true_divide Seetorch.true_divide()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What does Seetorch.true_divide() use?",
        "Y": "Tensor.true_divide",
        "Z": "Tensor.true_divide Seetorch.true_divide()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is In-place version oftrue_divide_()?",
        "Y": "Tensor.true_divide_ In-place version oftrue_divide_()",
        "Z": "Tensor.true_divide_ In-place version oftrue_divide_()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What version oftrue_divide_() is used?",
        "Y": "Tensor.true_divide_ In-place",
        "Z": "Tensor.true_divide_ In-place version oftrue_divide_()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Tensor.trunc?",
        "Y": "Seetorch.trunc()",
        "Z": "Tensor.trunc Seetorch.trunc()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is the name of Seetorch.trunc()?",
        "Y": "Tensor.trunc",
        "Z": "Tensor.trunc Seetorch.trunc()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What does Tensor.trunc_ In-place version of oftrunc() do?",
        "Y": "Tensor.trunc_ In-place version oftrunc()",
        "Z": "Tensor.trunc_ In-place version oftrunc()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is version of oftrunc()?",
        "Y": "Tensor.trunc_ In-place",
        "Z": "Tensor.trunc_ In-place version oftrunc()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What type does Tensor.type return?",
        "Y": "ifdtypeis not provided",
        "Z": "Tensor.type Returns the type ifdtypeis not provided, else casts this object to the specified type.",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What does Tensor.type_as return?",
        "Y": "the type of the given tensor",
        "Z": "Tensor.type_as Returns this tensor cast to the type of the given tensor.",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What returns this tensor cast to the type of the given tensor?",
        "Y": "Tensor.type_as",
        "Z": "Tensor.type_as Returns this tensor cast to the type of the given tensor.",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What does Tensor.unbind Seetorch.unbind() do?",
        "Y": "Tensor.unbind Seetorch.unbind()",
        "Z": "Tensor.unbind Seetorch.unbind()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What does Tensor.unbind?",
        "Y": "Seetorch",
        "Z": "Tensor.unbind Seetorch.unbind()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What does Seetorch.unbind() do?",
        "Y": "Tensor.unbind",
        "Z": "Tensor.unbind Seetorch.unbind()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "The original tensor contains all slices of sizesizefromselftensor in what dimension?",
        "Y": "dimension dimension",
        "Z": "Tensor.unfold Returns a view of the original tensor which contains all slices of sizesizefromselftensor in the dimension dimension.",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "The original tensor contains all slices of what?",
        "Y": "sizesizefromselftensor",
        "Z": "Tensor.unfold Returns a view of the original tensor which contains all slices of sizesizefromselftensor in the dimension dimension.",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What type of tensor is filled with numbers sampled from the continuous uniform distribution?",
        "Y": "uniform",
        "Z": "Tensor.uniform_ Fillsselftensor with numbers sampled from the continuous uniform distribution:",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Fillsselftensor?",
        "Y": "Tensor.uniform",
        "Z": "Tensor.uniform_ Fillsselftensor with numbers sampled from the continuous uniform distribution:",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What does Tensor.unique return?",
        "Y": "unique elements",
        "Z": "Tensor.unique Returns the unique elements of the input tensor.",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What does Tensor.unsqueeze?",
        "Y": "Seetorch",
        "Z": "Tensor.unsqueeze Seetorch.unsqueeze()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What does Seetorch.unsqueeze() do?",
        "Y": "Tensor.unsqueeze",
        "Z": "Tensor.unsqueeze Seetorch.unsqueeze()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is In-place version ofunsqueeze()?",
        "Y": "Tensor.unsqueeze_ In-place version ofunsqueeze()",
        "Z": "Tensor.unsqueeze_ In-place version ofunsqueeze()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What value returns the values tensor of asparse COO tensor?",
        "Y": "Tensor",
        "Z": "Tensor.values Return the values tensor of asparse COO tensor.",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What does Tensor.values do?",
        "Y": "Return the values tensor of asparse COO tensor",
        "Z": "Tensor.values Return the values tensor of asparse COO tensor.",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What does Tensor.var Seetorch.var do?",
        "Y": "Tensor.var Seetorch.var()",
        "Z": "Tensor.var Seetorch.var()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Tensor.var Seetorch.var?",
        "Y": "Tensor.var Seetorch.var",
        "Z": "Tensor.var Seetorch.var()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Tensor.vdot?",
        "Y": "Seetorch.vdot",
        "Z": "Tensor.vdot Seetorch.vdot()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Seetorch.vdot?",
        "Y": "Tensor.vdot",
        "Z": "Tensor.vdot Seetorch.vdot()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "Tensor.view Returns a new tensor with the same data as the self tensor but of what shape?",
        "Y": "differentshape",
        "Z": "Tensor.view Returns a new tensor with the same data as the self tensor but of a differentshape.",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "Tensor.view Returns a new tensor with the same data as what?",
        "Y": "the self tensor",
        "Z": "Tensor.view Returns a new tensor with the same data as the self tensor but of a differentshape.",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What returns a new tensor with the same data as the self tensor but of a different shape?",
        "Y": "Tensor.view",
        "Z": "Tensor.view Returns a new tensor with the same data as the self tensor but of a differentshape.",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What does view_as view as the same size asother?",
        "Y": "Tensor",
        "Z": "Tensor.view_as View this tensor as the same size asother.",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What does Tensor.vsplit Seetorch.vsplit() do?",
        "Y": "Tensor.vsplit Seetorch.vsplit()",
        "Z": "Tensor.vsplit Seetorch.vsplit()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Tensor.vsplit?",
        "Y": "Seetorch.vsplit",
        "Z": "Tensor.vsplit Seetorch.vsplit()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Seetorch.vsplit() function?",
        "Y": "Tensor.vsplit",
        "Z": "Tensor.vsplit Seetorch.vsplit()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is the equivalent of a totorch?",
        "Y": "Tensor",
        "Z": "Tensor.where self.where(condition,y)is equivalent totorch.where(condition,self,y).",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Tensor.xlogy?",
        "Y": "Tensor.xlogy Seetorch.xlogy",
        "Z": "Tensor.xlogy Seetorch.xlogy()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is Seetorch.xlogy?",
        "Y": "Tensor.xlogy",
        "Z": "Tensor.xlogy Seetorch.xlogy()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What does Tensor.xlogy_ In-place version ofxlogy() do?",
        "Y": "Tensor.xlogy_ In-place version ofxlogy()",
        "Z": "Tensor.xlogy_ In-place version ofxlogy()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What is In-place version ofxlogy()?",
        "Y": "Tensor.xlogy",
        "Z": "Tensor.xlogy_ In-place version ofxlogy()",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What does Tensor.zero_ Fillsselftensor with?",
        "Y": "zeros",
        "Z": "Tensor.zero_ Fillsselftensor with zeros.",
        "source": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor"
    },
    {
        "X": "What function does no M[sparse_coo]@V[strided]->V[strided] use",
        "Y": "torch.mv()",
        "Z": "torch.mv() no M[sparse_coo]@V[strided]->V[strided]",
        "source": "https://pytorch.org/docs/stable/sparse.html"
    },
    {
        "X": "What does no M[sparse_coo]@V[strided]->V[strided]?",
        "Y": "torch.mv()",
        "Z": "torch.mv() no M[sparse_coo]@V[strided]->V[strided]",
        "source": "https://pytorch.org/docs/stable/sparse.html"
    },
    {
        "X": "What does no M[sparse_csr] do?",
        "Y": "torch.mv()",
        "Z": "torch.mv() no M[sparse_csr]@V[strided]->V[strided]",
        "source": "https://pytorch.org/docs/stable/sparse.html"
    },
    {
        "X": "What does no M[sparse_csr]@V[strided]->V[strided]?",
        "Y": "torch.mv()",
        "Z": "torch.mv() no M[sparse_csr]@V[strided]->V[strided]",
        "source": "https://pytorch.org/docs/stable/sparse.html"
    },
    {
        "X": "What function does no M[sparse_coo]@M[strided]->M[strided] use",
        "Y": "torch.mm()",
        "Z": "torch.mm() no M[sparse_coo]@M[strided]->M[strided]",
        "source": "https://pytorch.org/docs/stable/sparse.html"
    },
    {
        "X": "What function does no M[sparse_coo]@M[strided]->M[strided]?",
        "Y": "torch.matmul()",
        "Z": "torch.matmul() no M[sparse_coo]@M[strided]->M[strided]",
        "source": "https://pytorch.org/docs/stable/sparse.html"
    },
    {
        "X": "What function does no M[sparse_csr]@M[strided]->M[strided]",
        "Y": "torch.matmul()",
        "Z": "torch.matmul() no M[sparse_csr]@M[strided]->M[strided]",
        "source": "https://pytorch.org/docs/stable/sparse.html"
    },
    {
        "X": "What function does no M[sparse_coo]@M[strided]->M[sparse_co",
        "Y": "torch.smm()",
        "Z": "torch.smm() no M[sparse_coo]@M[strided]->M[sparse_coo]",
        "source": "https://pytorch.org/docs/stable/sparse.html"
    },
    {
        "X": "What does no M[sparse_coo]@M[strided]->M[sparse_coo",
        "Y": "torch.smm()",
        "Z": "torch.smm() no M[sparse_coo]@M[strided]->M[sparse_coo]",
        "source": "https://pytorch.org/docs/stable/sparse.html"
    },
    {
        "X": "What function does no M[sparse_coo]@M[strided]->M[hybridspar",
        "Y": "torch.hspmm()",
        "Z": "torch.hspmm() no M[sparse_coo]@M[strided]->M[hybridsparse_coo]",
        "source": "https://pytorch.org/docs/stable/sparse.html"
    },
    {
        "X": "What does no M[sparse_coo]@M[strided]->M[hybridspars",
        "Y": "torch.hspmm()",
        "Z": "torch.hspmm() no M[sparse_coo]@M[strided]->M[hybridsparse_coo]",
        "source": "https://pytorch.org/docs/stable/sparse.html"
    },
    {
        "X": "What function does no T[sparse_coo]@T[strided]->T[strided] use",
        "Y": "torch.bmm()",
        "Z": "torch.bmm() no T[sparse_coo]@T[strided]->T[strided]",
        "source": "https://pytorch.org/docs/stable/sparse.html"
    },
    {
        "X": "What does no T[sparse_coo]@T[strided]->T[strided]?",
        "Y": "torch.bmm()",
        "Z": "torch.bmm() no T[sparse_coo]@T[strided]->T[strided]",
        "source": "https://pytorch.org/docs/stable/sparse.html"
    },
    {
        "X": "f*M[strided]+f*(M[sparse_coo]@M[strided",
        "Y": "yes",
        "Z": "torch.sparse.addmm() yes f*M[strided]+f*(M[sparse_coo]@M[strided])->M[strided]",
        "source": "https://pytorch.org/docs/stable/sparse.html"
    },
    {
        "X": "What does torch.lobpcg() do?",
        "Y": "no",
        "Z": "torch.lobpcg() no GENEIG(M[sparse_coo])->M[strided],M[strided]",
        "source": "https://pytorch.org/docs/stable/sparse.html"
    },
    {
        "X": "What function does PCA(M[sparse_coo]) use?",
        "Y": "torch.pca_lowrank()",
        "Z": "torch.pca_lowrank() yes PCA(M[sparse_coo])->M[strided],M[strided],M[strided]",
        "source": "https://pytorch.org/docs/stable/sparse.html"
    },
    {
        "X": "What does PCA(M[sparse_coo])->M[strided],M[strided],",
        "Y": "torch.pca_lowrank()",
        "Z": "torch.pca_lowrank() yes PCA(M[sparse_coo])->M[strided],M[strided],M[strided]",
        "source": "https://pytorch.org/docs/stable/sparse.html"
    },
    {
        "X": "SVD(M[sparse_coo])->M[strided],M[strided],M",
        "Y": "yes",
        "Z": "torch.svd_lowrank() yes SVD(M[sparse_coo])->M[strided],M[strided],M[strided]",
        "source": "https://pytorch.org/docs/stable/sparse.html"
    },
    {
        "X": "What does torch.svd_lowrank() do?",
        "Y": "SVD",
        "Z": "torch.svd_lowrank() yes SVD(M[sparse_coo])->M[strided],M[strided],M[strided]",
        "source": "https://pytorch.org/docs/stable/sparse.html"
    },
    {
        "X": "What converts a tensor to compressed row storage format?",
        "Y": "Tensor._to_sparse_csr",
        "Z": "Tensor._to_sparse_csr Convert a tensor to compressed row storage format.",
        "source": "https://pytorch.org/docs/stable/sparse.html"
    },
    {
        "X": "Convert a tensor to compressed row storage format?",
        "Y": "Tensor",
        "Z": "Tensor._to_sparse_csr Convert a tensor to compressed row storage format.",
        "source": "https://pytorch.org/docs/stable/sparse.html"
    },
    {
        "X": "What format does tensor._to_sparse_csr convert a tensor to?",
        "Y": "compressed row storage format",
        "Z": "Tensor._to_sparse_csr Convert a tensor to compressed row storage format.",
        "source": "https://pytorch.org/docs/stable/sparse.html"
    },
    {
        "X": "What is a tensorto?",
        "Y": "the desired size",
        "Z": "Tensor.sparse_resize_ Resizesselfsparse tensorto the desired size and the number of sparse and dense dimensions.",
        "source": "https://pytorch.org/docs/stable/sparse.html"
    },
    {
        "X": "What resizes itselfsparse tensorto the desired size and the number of sparse and dense dimensions?",
        "Y": "Tensor.sparse_resize",
        "Z": "Tensor.sparse_resize_ Resizesselfsparse tensorto the desired size and the number of sparse and dense dimensions.",
        "source": "https://pytorch.org/docs/stable/sparse.html"
    },
    {
        "X": "What does Tensor.sparse_resize_and_clear_ resize itself to?",
        "Y": "the desired size",
        "Z": "Tensor.sparse_resize_and_clear_ Removes all specified elements from asparse tensorselfand resizesselfto the desired size and the number of sparse and dense dimensions.",
        "source": "https://pytorch.org/docs/stable/sparse.html"
    },
    {
        "X": "What removes all specified elements from asparse tensorselfand resizes itself to the desired size and the number of spar",
        "Y": "Tensor.sparse_resize_and_clear",
        "Z": "Tensor.sparse_resize_and_clear_ Removes all specified elements from asparse tensorselfand resizesselfto the desired size and the number of sparse and dense dimensions.",
        "source": "https://pytorch.org/docs/stable/sparse.html"
    },
    {
        "X": "What is tensorthat?",
        "Y": "coalesced",
        "Z": "Tensor.is_coalesced ReturnsTrue ifselfis asparse COO tensorthat is coalesced,False otherwise.",
        "source": "https://pytorch.org/docs/stable/sparse.html"
    },
    {
        "X": "Tensor.to_dense Creates a strided copy of what?",
        "Y": "self",
        "Z": "Tensor.to_dense Creates a strided copy ofself.",
        "source": "https://pytorch.org/docs/stable/sparse.html"
    },
    {
        "X": "What returns the compressed row indices of the self tensor whenselfis a sparse CSR tensor of layouts",
        "Y": "tensor",
        "Z": "Tensor.crow_indices Returns the tensor containing the compressed row indices of the self tensor whenselfis a sparse CSR tensor of layoutsparse_csr.",
        "source": "https://pytorch.org/docs/stable/sparse.html"
    },
    {
        "X": "What returns the column indices of the self tensor whenselfis a sparse CSR tensor of layoutspar",
        "Y": "tensor",
        "Z": "Tensor.col_indices Returns the tensor containing the column indices of the self tensor whenselfis a sparse CSR tensor of layoutsparse_csr.",
        "source": "https://pytorch.org/docs/stable/sparse.html"
    },
    {
        "X": "Where are the specified values for the asparse tensor?",
        "Y": "givencrow_indicesandcol_indices",
        "Z": "_sparse_csr_tensor Constructs asparse tensor in CSR (Compressed Sparse Row)with specified values at the givencrow_indicesandcol_indices.",
        "source": "https://pytorch.org/docs/stable/sparse.html"
    },
    {
        "X": "What is the Compressed Sparse Row?",
        "Y": "CSR",
        "Z": "_sparse_csr_tensor Constructs asparse tensor in CSR (Compressed Sparse Row)with specified values at the givencrow_indicesandcol_indices.",
        "source": "https://pytorch.org/docs/stable/sparse.html"
    },
    {
        "X": "What returns the sum of each row of the sparse tensorinputin the given dimensionsdim?",
        "Y": "sparse.sum",
        "Z": "sparse.sum Returns the sum of each row of the sparse tensorinputin the given dimensionsdim.",
        "source": "https://pytorch.org/docs/stable/sparse.html"
    },
    {
        "X": "What direction does sparse.addmm support?",
        "Y": "backward",
        "Z": "sparse.addmm This function does exact same thing astorch.addmm()in the forward, except that it supports backward for sparse matrix mat1.",
        "source": "https://pytorch.org/docs/stable/sparse.html"
    },
    {
        "X": "What type of matrix mat performs a matrix  multiplication of the sparse matrix mat1 and the (sparse or strided",
        "Y": "sparse",
        "Z": "sparse.mm Performs a matrix  multiplication of the sparse matrix mat1 and the (sparse or strided) matrix mat2.",
        "source": "https://pytorch.org/docs/stable/sparse.html"
    },
    {
        "X": "What type of matrix mat1 performs a matrix  multiplication?",
        "Y": "sparse",
        "Z": "sparse.mm Performs a matrix  multiplication of the sparse matrix mat1 and the (sparse or strided) matrix mat2.",
        "source": "https://pytorch.org/docs/stable/sparse.html"
    },
    {
        "X": "sspaddmm matrix  multiplies what tensormat1 with a dense tensormat2?",
        "Y": "sparse",
        "Z": "sspaddmm matrix  multiplies a sparse tensormat1with a dense tensormat2, then adds the sparse tensorinputto the result.",
        "source": "https://pytorch.org/docs/stable/sparse.html"
    },
    {
        "X": "sspaddmm matrix  multiplies a sparse tensormat1with a what?",
        "Y": "dense",
        "Z": "sspaddmm matrix  multiplies a sparse tensormat1with a dense tensormat2, then adds the sparse tensorinputto the result.",
        "source": "https://pytorch.org/docs/stable/sparse.html"
    },
    {
        "X": "hspmm performs a matrix  multiplication of asparse COO matrix mat1 and what else?",
        "Y": "a strided matrix mat2",
        "Z": "hspmm Performs a matrix  multiplication of asparse COO matrix mat1 and a strided matrix mat2.",
        "source": "https://pytorch.org/docs/stable/sparse.html"
    },
    {
        "X": "What performs a matrix  multiplication of the sparse matrix input with the dense matrix mat?",
        "Y": "smm",
        "Z": "smm Performs a matrix  multiplication of the sparse matrix input with the dense matrix mat.",
        "source": "https://pytorch.org/docs/stable/sparse.html"
    },
    {
        "X": "smm Performs a matrix  multiplication of the sparse matrix input with what?",
        "Y": "dense matrix mat",
        "Z": "smm Performs a matrix  multiplication of the sparse matrix input with the dense matrix mat.",
        "source": "https://pytorch.org/docs/stable/sparse.html"
    },
    {
        "X": "What does smm perform a matrix  multiplication of?",
        "Y": "sparse matrix input",
        "Z": "smm Performs a matrix  multiplication of the sparse matrix input with the dense matrix mat.",
        "source": "https://pytorch.org/docs/stable/sparse.html"
    },
    {
        "X": "Softmax Applies a softmax function that is what?",
        "Y": "sparse",
        "Z": "sparse.softmax Applies a softmax function.",
        "source": "https://pytorch.org/docs/stable/sparse.html"
    },
    {
        "X": "What is followed by a softmax function?",
        "Y": "logarithm",
        "Z": "sparse.log_softmax Applies a softmax function followed by logarithm.",
        "source": "https://pytorch.org/docs/stable/sparse.html"
    },
    {
        "X": "What applies a softmax function followed by logarithm?",
        "Y": "sparse.log_softmax",
        "Z": "sparse.log_softmax Applies a softmax function followed by logarithm.",
        "source": "https://pytorch.org/docs/stable/sparse.html"
    },
    {
        "X": "What type of function does.log_softmax Applies a softmax function followed by logarithm?",
        "Y": "sparse",
        "Z": "sparse.log_softmax Applies a softmax function followed by logarithm.",
        "source": "https://pytorch.org/docs/stable/sparse.html"
    },
    {
        "X": "What does norm compute?",
        "Y": "a vector or matrix  norm",
        "Z": "norm Computes a vector or matrix  norm.",
        "source": "https://pytorch.org/docs/stable/linalg.html"
    },
    {
        "X": "What does norm Compute?",
        "Y": "a vector or matrix  norm",
        "Z": "norm Computes a vector or matrix  norm.",
        "source": "https://pytorch.org/docs/stable/linalg.html"
    },
    {
        "X": "What does vector_norm compute?",
        "Y": "vector norm",
        "Z": "vector_norm Computes a vector norm.",
        "source": "https://pytorch.org/docs/stable/linalg.html"
    },
    {
        "X": "What Computes a vector norm?",
        "Y": "vector_norm",
        "Z": "vector_norm Computes a vector norm.",
        "source": "https://pytorch.org/docs/stable/linalg.html"
    },
    {
        "X": "What does matrix _norm compute?",
        "Y": "matrix  norm",
        "Z": "matrix _norm Computes a matrix  norm.",
        "source": "https://pytorch.org/docs/stable/linalg.html"
    },
    {
        "X": "What Computes a matrix  norm?",
        "Y": "matrix _norm",
        "Z": "matrix _norm Computes a matrix  norm.",
        "source": "https://pytorch.org/docs/stable/linalg.html"
    },
    {
        "X": "What does det do with the determinant of a square matrix ?",
        "Y": "Computes",
        "Z": "det Computes the determinant of a square matrix .",
        "source": "https://pytorch.org/docs/stable/linalg.html"
    },
    {
        "X": "What computes the determinant of a square matrix ?",
        "Y": "det",
        "Z": "det Computes the determinant of a square matrix .",
        "source": "https://pytorch.org/docs/stable/linalg.html"
    },
    {
        "X": "What computes the sign and natural logarithm of the absolute value of the determinant of a square matrix ?",
        "Y": "slogdet",
        "Z": "slogdet Computes the sign and natural logarithm of the absolute value of the determinant of a square matrix .",
        "source": "https://pytorch.org/docs/stable/linalg.html"
    },
    {
        "X": "What does slogdet compute of the absolute value of the determinant of a square matrix ?",
        "Y": "the sign and natural logarithm",
        "Z": "slogdet Computes the sign and natural logarithm of the absolute value of the determinant of a square matrix .",
        "source": "https://pytorch.org/docs/stable/linalg.html"
    },
    {
        "X": "What Computes the sign and natural logarithm of the absolute value of the determinant of a square matrix ?",
        "Y": "slogdet",
        "Z": "slogdet Computes the sign and natural logarithm of the absolute value of the determinant of a square matrix .",
        "source": "https://pytorch.org/docs/stable/linalg.html"
    },
    {
        "X": "What does cond compute?",
        "Y": "the condition number of a matrix  with respect to a matrix  norm",
        "Z": "cond Computes the condition number of a matrix  with respect to a matrix  norm.",
        "source": "https://pytorch.org/docs/stable/linalg.html"
    },
    {
        "X": "What computes the condition number of a matrix  with respect to a matrix  norm?",
        "Y": "cond",
        "Z": "cond Computes the condition number of a matrix  with respect to a matrix  norm.",
        "source": "https://pytorch.org/docs/stable/linalg.html"
    },
    {
        "X": "cond Computes the condition number of a matrix  with respect to what?",
        "Y": "matrix  norm",
        "Z": "cond Computes the condition number of a matrix  with respect to a matrix  norm.",
        "source": "https://pytorch.org/docs/stable/linalg.html"
    },
    {
        "X": "What computes the numerical rank of a matrix ?",
        "Y": "matrix",
        "Z": "matrix _rank Computes the numerical rank of a matrix .",
        "source": "https://pytorch.org/docs/stable/linalg.html"
    },
    {
        "X": "What computes the Cholesky decomposition of a complex Hermitian or real symmetric positive-definite matrix ?",
        "Y": "cholesky_ex",
        "Z": "cholesky_ex Computes the Cholesky decomposition of a complex Hermitian or real symmetric positive-definite matrix .",
        "source": "https://pytorch.org/docs/stable/linalg.html"
    },
    {
        "X": "cholesky computes the Cholesky decomposition of a complex what?",
        "Y": "Hermitian",
        "Z": "cholesky Computes the Cholesky decomposition of a complex Hermitian or real symmetric positive-definite matrix .",
        "source": "https://pytorch.org/docs/stable/linalg.html"
    },
    {
        "X": "What computes the QR decomposition of a matrix ?",
        "Y": "qr",
        "Z": "qr Computes the QR decomposition of a matrix .",
        "source": "https://pytorch.org/docs/stable/linalg.html"
    },
    {
        "X": "eig Computes the decomposition of a square matrix  if it exists?",
        "Y": "eigenvalue",
        "Z": "eig Computes the eigenvalue decomposition of a square matrix  if it exists.",
        "source": "https://pytorch.org/docs/stable/linalg.html"
    },
    {
        "X": "What computes the eigenvalue decomposition of a square matrix  if it exists?",
        "Y": "eig",
        "Z": "eig Computes the eigenvalue decomposition of a square matrix  if it exists.",
        "source": "https://pytorch.org/docs/stable/linalg.html"
    },
    {
        "X": "eigvals Computes what of a square matrix ?",
        "Y": "eigenvalues",
        "Z": "eigvals Computes the eigenvalues of a square matrix .",
        "source": "https://pytorch.org/docs/stable/linalg.html"
    },
    {
        "X": "What computes the eigenvalues of a square matrix ?",
        "Y": "eigvals",
        "Z": "eigvals Computes the eigenvalues of a square matrix .",
        "source": "https://pytorch.org/docs/stable/linalg.html"
    },
    {
        "X": "What does eigh do?",
        "Y": "Computes the eigenvalue decomposition of a complex Hermitian or real symmetric matrix",
        "Z": "eigh Computes the eigenvalue decomposition of a complex Hermitian or real symmetric matrix .",
        "source": "https://pytorch.org/docs/stable/linalg.html"
    },
    {
        "X": "What computes the eigenvalue decomposition of a complex Hermitian or real symmetric matrix ?",
        "Y": "eigh",
        "Z": "eigh Computes the eigenvalue decomposition of a complex Hermitian or real symmetric matrix .",
        "source": "https://pytorch.org/docs/stable/linalg.html"
    },
    {
        "X": "eigh Computes the eigenvalue decomposition of a complex what?",
        "Y": "Hermitian",
        "Z": "eigh Computes the eigenvalue decomposition of a complex Hermitian or real symmetric matrix .",
        "source": "https://pytorch.org/docs/stable/linalg.html"
    },
    {
        "X": "eigvalsh Computes what of a complex Hermitian or real symmetric matrix ?",
        "Y": "eigenvalues",
        "Z": "eigvalsh Computes the eigenvalues of a complex Hermitian or real symmetric matrix .",
        "source": "https://pytorch.org/docs/stable/linalg.html"
    },
    {
        "X": "eigvalsh Computes the eigenvalues of a complex Hermitian or real what type of matrix ?",
        "Y": "symmetric",
        "Z": "eigvalsh Computes the eigenvalues of a complex Hermitian or real symmetric matrix .",
        "source": "https://pytorch.org/docs/stable/linalg.html"
    },
    {
        "X": "What computes the eigenvalues of a complex Hermitian or real symmetric matrix ?",
        "Y": "eigvalsh",
        "Z": "eigvalsh Computes the eigenvalues of a complex Hermitian or real symmetric matrix .",
        "source": "https://pytorch.org/docs/stable/linalg.html"
    },
    {
        "X": "eigvalsh Computes the eigenvalues of a complex what?",
        "Y": "Hermitian",
        "Z": "eigvalsh Computes the eigenvalues of a complex Hermitian or real symmetric matrix .",
        "source": "https://pytorch.org/docs/stable/linalg.html"
    },
    {
        "X": "What computes the singular value decomposition of a matrix ?",
        "Y": "svd",
        "Z": "svd Computes the singular value decomposition (SVD) of a matrix .",
        "source": "https://pytorch.org/docs/stable/linalg.html"
    },
    {
        "X": "What is svd?",
        "Y": "SVD",
        "Z": "svd Computes the singular value decomposition (SVD) of a matrix .",
        "source": "https://pytorch.org/docs/stable/linalg.html"
    },
    {
        "X": "What computes the singular values of a matrix ?",
        "Y": "svdvals",
        "Z": "svdvals Computes the singular values of a matrix .",
        "source": "https://pytorch.org/docs/stable/linalg.html"
    },
    {
        "X": "What Computes the singular values of a matrix ?",
        "Y": "svdvals",
        "Z": "svdvals Computes the singular values of a matrix .",
        "source": "https://pytorch.org/docs/stable/linalg.html"
    },
    {
        "X": "What does solve the solution of a square system of linear equations with a unique solution?",
        "Y": "Computes",
        "Z": "solve Computes the solution of a square system of linear equations with a unique solution.",
        "source": "https://pytorch.org/docs/stable/linalg.html"
    },
    {
        "X": "What does a unique solution do to a square system of linear equations?",
        "Y": "solve Computes the solution of a square system of linear equations",
        "Z": "solve Computes the solution of a square system of linear equations with a unique solution.",
        "source": "https://pytorch.org/docs/stable/linalg.html"
    },
    {
        "X": "What computes a solution to the least squares problem of a system of linear equations?",
        "Y": "lstsq",
        "Z": "lstsq Computes a solution to the least squares problem of a system of linear equations.",
        "source": "https://pytorch.org/docs/stable/linalg.html"
    },
    {
        "X": "lstsq Computes a solution to what problem of a system of linear equations?",
        "Y": "least squares",
        "Z": "lstsq Computes a solution to the least squares problem of a system of linear equations.",
        "source": "https://pytorch.org/docs/stable/linalg.html"
    },
    {
        "X": "inv Computes the what of a square matrix  if it exists?",
        "Y": "inverse",
        "Z": "inv Computes the inverse of a square matrix  if it exists.",
        "source": "https://pytorch.org/docs/stable/linalg.html"
    },
    {
        "X": "What computes the inverse of a square matrix  if it exists?",
        "Y": "inv",
        "Z": "inv Computes the inverse of a square matrix  if it exists.",
        "source": "https://pytorch.org/docs/stable/linalg.html"
    },
    {
        "X": "What does pinv compute?",
        "Y": "pseudoinverse",
        "Z": "pinv Computes the pseudoinverse (Moore-Penrose inverse) of a matrix .",
        "source": "https://pytorch.org/docs/stable/linalg.html"
    },
    {
        "X": "What does pinv compute of a matrix ?",
        "Y": "the pseudoinverse",
        "Z": "pinv Computes the pseudoinverse (Moore-Penrose inverse) of a matrix .",
        "source": "https://pytorch.org/docs/stable/linalg.html"
    },
    {
        "X": "What computes the then-th power of a square matrix  for an integern?",
        "Y": "matrix _power",
        "Z": "matrix _power Computes then-th power of a square matrix  for an integern.",
        "source": "https://pytorch.org/docs/stable/linalg.html"
    },
    {
        "X": "What computes then-th power of a square matrix  for an integern?",
        "Y": "matrix _power",
        "Z": "matrix _power Computes then-th power of a square matrix  for an integern.",
        "source": "https://pytorch.org/docs/stable/linalg.html"
    },
    {
        "X": "What multiplies two or more matrices by reordering the multiplications?",
        "Y": "multi_dot",
        "Z": "multi_dot Efficiently multiplies two or more matrices by reordering the multiplications so that the fewest arithmetic operations are performed.",
        "source": "https://pytorch.org/docs/stable/linalg.html"
    },
    {
        "X": "multi_dot multiplies two or more matrices by what?",
        "Y": "reordering",
        "Z": "multi_dot Efficiently multiplies two or more matrices by reordering the multiplications so that the fewest arithmetic operations are performed.",
        "source": "https://pytorch.org/docs/stable/linalg.html"
    },
    {
        "X": "What computes the firstncolumns of a product of Householder matrices?",
        "Y": "householder_product",
        "Z": "householder_product Computes the firstncolumns of a product of Householder matrices.",
        "source": "https://pytorch.org/docs/stable/linalg.html"
    },
    {
        "X": "householder_product Computes what of a product of Householder matrices?",
        "Y": "firstncolumns",
        "Z": "householder_product Computes the firstncolumns of a product of Householder matrices.",
        "source": "https://pytorch.org/docs/stable/linalg.html"
    },
    {
        "X": "householder_product Computes the firstncolumns of a product of what?",
        "Y": "Householder matrices",
        "Z": "householder_product Computes the firstncolumns of a product of Householder matrices.",
        "source": "https://pytorch.org/docs/stable/linalg.html"
    },
    {
        "X": "What computes the multiplicative inverse of torch.tensordot()?",
        "Y": "tensorinv",
        "Z": "tensorinv Computes the multiplicative inverse of torch.tensordot().",
        "source": "https://pytorch.org/docs/stable/linalg.html"
    },
    {
        "X": "What Computes the multiplicative inverse of torch.tensordot()?",
        "Y": "tensorinv",
        "Z": "tensorinv Computes the multiplicative inverse of torch.tensordot().",
        "source": "https://pytorch.org/docs/stable/linalg.html"
    },
    {
        "X": "What does tensorsolve compute the solutionXto?",
        "Y": "systemtorch",
        "Z": "tensorsolve Computes the solutionXto the systemtorch.tensordot(A, X) = B.",
        "source": "https://pytorch.org/docs/stable/linalg.html"
    },
    {
        "X": "What Computes the solutionXto the systemtorch?",
        "Y": "tensorsolve",
        "Z": "tensorsolve Computes the solutionXto the systemtorch.tensordot(A, X) = B.",
        "source": "https://pytorch.org/docs/stable/linalg.html"
    },
    {
        "X": "cholesky_ex Computes the Cholesky decomposition of a complex what?",
        "Y": "Hermitian",
        "Z": "cholesky_ex Computes the Cholesky decomposition of a complex Hermitian or real symmetric positive-definite matrix .",
        "source": "https://pytorch.org/docs/stable/linalg.html"
    },
    {
        "X": "What computes the inverse of a square matrix  if it is invertible?",
        "Y": "inv_ex",
        "Z": "inv_ex Computes the inverse of a square matrix  if it is invertible.",
        "source": "https://pytorch.org/docs/stable/linalg.html"
    },
    {
        "X": "inv_ex computes what of a square matrix  if it is invertible?",
        "Y": "inverse",
        "Z": "inv_ex Computes the inverse of a square matrix  if it is invertible.",
        "source": "https://pytorch.org/docs/stable/linalg.html"
    },
    {
        "X": "What is program that selects a given stream?",
        "Y": "StreamContext Context-manager",
        "Z": "StreamContext Context-manager that selects a given stream.",
        "source": "https://pytorch.org/docs/stable/cuda.html"
    },
    {
        "X": "What is manager that selects a given stream?",
        "Y": "StreamContext Context-manager",
        "Z": "StreamContext Context-manager that selects a given stream.",
        "source": "https://pytorch.org/docs/stable/cuda.html"
    },
    {
        "X": "Can_device_access_peer Checks if what is possible between two devices?",
        "Y": "peer access",
        "Z": "can_device_access_peer Checks if peer access between two devices is possible.",
        "source": "https://pytorch.org/docs/stable/cuda.html"
    },
    {
        "X": "What checks if peer access between two devices is possible?",
        "Y": "can_device_access_peer",
        "Z": "can_device_access_peer Checks if peer access between two devices is possible.",
        "source": "https://pytorch.org/docs/stable/cuda.html"
    },
    {
        "X": "Can_device_access_peer Checks if what is possible?",
        "Y": "peer access between two devices",
        "Z": "can_device_access_peer Checks if peer access between two devices is possible.",
        "source": "https://pytorch.org/docs/stable/cuda.html"
    },
    {
        "X": "what pointer does current_blas_handle return?",
        "Y": "cublasHandle_t",
        "Z": "current_blas_handle Returns cublasHandle_t pointer to current cuBLAS handle",
        "source": "https://pytorch.org/docs/stable/cuda.html"
    },
    {
        "X": "current_blas_handle Returns cublasHandle_t pointer to what?",
        "Y": "current cuBLAS handle",
        "Z": "current_blas_handle Returns cublasHandle_t pointer to current cuBLAS handle",
        "source": "https://pytorch.org/docs/stable/cuda.html"
    },
    {
        "X": "What returns cublasHandle_t pointer to current cuBLAS handle?",
        "Y": "current_blas_handle",
        "Z": "current_blas_handle Returns cublasHandle_t pointer to current cuBLAS handle",
        "source": "https://pytorch.org/docs/stable/cuda.html"
    },
    {
        "X": "What returns the index of a currently selected device?",
        "Y": "current_device",
        "Z": "current_device Returns the index of a currently selected device.",
        "source": "https://pytorch.org/docs/stable/cuda.html"
    },
    {
        "X": "What does current_stream return?",
        "Y": "current_stream Returns the currently selectedStreamfor a given device",
        "Z": "current_stream Returns the currently selectedStreamfor a given device.",
        "source": "https://pytorch.org/docs/stable/cuda.html"
    },
    {
        "X": "What returns the current selectedStream for a given device?",
        "Y": "current_stream",
        "Z": "current_stream Returns the currently selectedStreamfor a given device.",
        "source": "https://pytorch.org/docs/stable/cuda.html"
    },
    {
        "X": "What returns the defaultStream for a given device?",
        "Y": "default_stream",
        "Z": "default_stream Returns the defaultStreamfor a given device.",
        "source": "https://pytorch.org/docs/stable/cuda.html"
    },
    {
        "X": "What does default_stream return for a given device?",
        "Y": "defaultStream",
        "Z": "default_stream Returns the defaultStreamfor a given device.",
        "source": "https://pytorch.org/docs/stable/cuda.html"
    },
    {
        "X": "What returns the default stream for a given device?",
        "Y": "default_stream",
        "Z": "default_stream Returns the defaultStreamfor a given device.",
        "source": "https://pytorch.org/docs/stable/cuda.html"
    },
    {
        "X": "What is device that changes the selected device?",
        "Y": "Context-manager",
        "Z": "device Context-manager that changes the selected device.",
        "source": "https://pytorch.org/docs/stable/cuda.html"
    },
    {
        "X": "What returns the number of GPUs available?",
        "Y": "device_count",
        "Z": "device_count Returns the number of GPUs available.",
        "source": "https://pytorch.org/docs/stable/cuda.html"
    },
    {
        "X": "What is Context-manager that changes the current device to that of given object?",
        "Y": "device",
        "Z": "device_of Context-manager that changes the current device to that of given object.",
        "source": "https://pytorch.org/docs/stable/cuda.html"
    },
    {
        "X": "What returns the CUDA architectures this library was compiled for?",
        "Y": "get_arch_list",
        "Z": "get_arch_list Returns list CUDA architectures this library was compiled for.",
        "source": "https://pytorch.org/docs/stable/cuda.html"
    },
    {
        "X": "What does get_arch_list return?",
        "Y": "CUDA architectures",
        "Z": "get_arch_list Returns list CUDA architectures this library was compiled for.",
        "source": "https://pytorch.org/docs/stable/cuda.html"
    },
    {
        "X": "What Returns list CUDA architectures this library was compiled for?",
        "Y": "get_arch_list",
        "Z": "get_arch_list Returns list CUDA architectures this library was compiled for.",
        "source": "https://pytorch.org/docs/stable/cuda.html"
    },
    {
        "X": "What does get_device_capability get from a device?",
        "Y": "cuda capability",
        "Z": "get_device_capability Gets the cuda capability of a device.",
        "source": "https://pytorch.org/docs/stable/cuda.html"
    },
    {
        "X": "What gets the cuda capability of a device?",
        "Y": "get_device_capability",
        "Z": "get_device_capability Gets the cuda capability of a device.",
        "source": "https://pytorch.org/docs/stable/cuda.html"
    },
    {
        "X": "What does get_device_name get?",
        "Y": "the name of a device",
        "Z": "get_device_name Gets the name of a device.",
        "source": "https://pytorch.org/docs/stable/cuda.html"
    },
    {
        "X": "What gets the name of a device?",
        "Y": "get_device_name",
        "Z": "get_device_name Gets the name of a device.",
        "source": "https://pytorch.org/docs/stable/cuda.html"
    },
    {
        "X": "What does get the properties of a device?",
        "Y": "properties",
        "Z": "get_device_properties Gets the properties of a device.",
        "source": "https://pytorch.org/docs/stable/cuda.html"
    },
    {
        "X": "What gets the properties of a device?",
        "Y": "get_device_properties",
        "Z": "get_device_properties Gets the properties of a device.",
        "source": "https://pytorch.org/docs/stable/cuda.html"
    },
    {
        "X": "What gencode flags does get_gencode_flags return?",
        "Y": "NVCC",
        "Z": "get_gencode_flags Returns NVCC gencode flags this library was compiled with.",
        "source": "https://pytorch.org/docs/stable/cuda.html"
    },
    {
        "X": "What returns the NVCC gencode flags this library was compiled with?",
        "Y": "get_gencode_flags",
        "Z": "get_gencode_flags Returns NVCC gencode flags this library was compiled with.",
        "source": "https://pytorch.org/docs/stable/cuda.html"
    },
    {
        "X": "What returns NVCC gencode flags this library was compiled with?",
        "Y": "get_gencode_flags",
        "Z": "get_gencode_flags Returns NVCC gencode flags this library was compiled with.",
        "source": "https://pytorch.org/docs/stable/cuda.html"
    },
    {
        "X": "What does init do?",
        "Y": "Initialize PyTorch\u2019s CUDA state",
        "Z": "init Initialize PyTorch\u2019s CUDA state.",
        "source": "https://pytorch.org/docs/stable/cuda.html"
    },
    {
        "X": "Init Initialize PyTorch's state what?",
        "Y": "CUDA",
        "Z": "init Initialize PyTorch\u2019s CUDA state.",
        "source": "https://pytorch.org/docs/stable/cuda.html"
    },
    {
        "X": "Who released the GPU memory for ipc_collect Force?",
        "Y": "CUDA IPC",
        "Z": "ipc_collect Force collects GPU memory after it has been released by CUDA IPC.",
        "source": "https://pytorch.org/docs/stable/cuda.html"
    },
    {
        "X": "What does ipc_collect Force collect after it has been released by CUDA IPC?",
        "Y": "GPU memory",
        "Z": "ipc_collect Force collects GPU memory after it has been released by CUDA IPC.",
        "source": "https://pytorch.org/docs/stable/cuda.html"
    },
    {
        "X": "What is currently available?",
        "Y": "CUDA",
        "Z": "is_available Returns a bool indicating if CUDA is currently available.",
        "source": "https://pytorch.org/docs/stable/cuda.html"
    },
    {
        "X": "What type of return does is_available return?",
        "Y": "bool",
        "Z": "is_available Returns a bool indicating if CUDA is currently available.",
        "source": "https://pytorch.org/docs/stable/cuda.html"
    },
    {
        "X": "is_available Returns what type of value indicating if CUDA is currently available?",
        "Y": "a bool",
        "Z": "is_available Returns a bool indicating if CUDA is currently available.",
        "source": "https://pytorch.org/docs/stable/cuda.html"
    },
    {
        "X": "What has been initialized?",
        "Y": "PyTorch\u2019s CUDA state",
        "Z": "is_initialized Returns whether PyTorch\u2019s CUDA state has been initialized.",
        "source": "https://pytorch.org/docs/stable/cuda.html"
    },
    {
        "X": "What returns whether PyTorch\u2019s CUDA state has been initialized?",
        "Y": "initialized",
        "Z": "is_initialized Returns whether PyTorch\u2019s CUDA state has been initialized.",
        "source": "https://pytorch.org/docs/stable/cuda.html"
    },
    {
        "X": "What sets the current device?",
        "Y": "set_device",
        "Z": "set_device Sets the current device.",
        "source": "https://pytorch.org/docs/stable/cuda.html"
    },
    {
        "X": "What does set_device set?",
        "Y": "current device",
        "Z": "set_device Sets the current device.",
        "source": "https://pytorch.org/docs/stable/cuda.html"
    },
    {
        "X": "what does set_device set?",
        "Y": "current device",
        "Z": "set_device Sets the current device.",
        "source": "https://pytorch.org/docs/stable/cuda.html"
    },
    {
        "X": "What is stream that wraps around the Context-manager StreamContext that selects a given stream?",
        "Y": "Wrapper",
        "Z": "stream Wrapper around the Context-manager StreamContext that selects a given stream.",
        "source": "https://pytorch.org/docs/stable/cuda.html"
    },
    {
        "X": "What is the stream Wrapper around that selects a given stream?",
        "Y": "Context-manager StreamContext",
        "Z": "stream Wrapper around the Context-manager StreamContext that selects a given stream.",
        "source": "https://pytorch.org/docs/stable/cuda.html"
    },
    {
        "X": "On what device should Waits for all kernels in all streams be synchronized?",
        "Y": "CUDA device",
        "Z": "synchronize Waits for all kernels in all streams on a CUDA device to complete.",
        "source": "https://pytorch.org/docs/stable/cuda.html"
    },
    {
        "X": "What is synchronized for all kernels in all streams on a CUDA device?",
        "Y": "Waits",
        "Z": "synchronize Waits for all kernels in all streams on a CUDA device to complete.",
        "source": "https://pytorch.org/docs/stable/cuda.html"
    },
    {
        "X": "What returns the random number generator state of the specified GPU as a ByteTensor?",
        "Y": "get_rng_state",
        "Z": "get_rng_state Returns the random number generator state of the specified GPU as a ByteTensor.",
        "source": "https://pytorch.org/docs/stable/cuda.html"
    },
    {
        "X": "Get_rng_state Returns the random number generator state of the specified GPU as a what?",
        "Y": "ByteTensor",
        "Z": "get_rng_state Returns the random number generator state of the specified GPU as a ByteTensor.",
        "source": "https://pytorch.org/docs/stable/cuda.html"
    },
    {
        "X": "What does get_rng_state return?",
        "Y": "random number generator state",
        "Z": "get_rng_state Returns the random number generator state of the specified GPU as a ByteTensor.",
        "source": "https://pytorch.org/docs/stable/cuda.html"
    },
    {
        "X": "What does get_rng_state_all return?",
        "Y": "a list of ByteTensor",
        "Z": "get_rng_state_all Returns a list of ByteTensor representing the random number states of all devices.",
        "source": "https://pytorch.org/docs/stable/cuda.html"
    },
    {
        "X": "What sets the random number generator state of the specified GPU?",
        "Y": "set_rng_state",
        "Z": "set_rng_state Sets the random number generator state of the specified GPU.",
        "source": "https://pytorch.org/docs/stable/cuda.html"
    },
    {
        "X": "set_rng_state Sets what state of the specified GPU?",
        "Y": "random number generator state",
        "Z": "set_rng_state Sets the random number generator state of the specified GPU.",
        "source": "https://pytorch.org/docs/stable/cuda.html"
    },
    {
        "X": "What sets the random number generator state of all devices?",
        "Y": "set_rng_state_all",
        "Z": "set_rng_state_all Sets the random number generator state of all devices.",
        "source": "https://pytorch.org/docs/stable/cuda.html"
    },
    {
        "X": "What does set_rng_state_all set?",
        "Y": "random number generator state",
        "Z": "set_rng_state_all Sets the random number generator state of all devices.",
        "source": "https://pytorch.org/docs/stable/cuda.html"
    },
    {
        "X": "What sets the seed for generating random numbers for the current GPU?",
        "Y": "manual_seed",
        "Z": "manual_seed Sets the seed for generating random numbers for the current GPU.",
        "source": "https://pytorch.org/docs/stable/cuda.html"
    },
    {
        "X": "What sets the seed for generating random numbers on all GPUs?",
        "Y": "manual_seed_all",
        "Z": "manual_seed_all Sets the seed for generating random numbers on all GPUs.",
        "source": "https://pytorch.org/docs/stable/cuda.html"
    },
    {
        "X": "Manual_seed_all Sets the seed for generating what on all GPUs?",
        "Y": "random numbers",
        "Z": "manual_seed_all Sets the seed for generating random numbers on all GPUs.",
        "source": "https://pytorch.org/docs/stable/cuda.html"
    },
    {
        "X": "What is seed used for?",
        "Y": "generating random numbers",
        "Z": "seed Sets the seed for generating random numbers to a random number for the current GPU.",
        "source": "https://pytorch.org/docs/stable/cuda.html"
    },
    {
        "X": "What sets the seed for generating random numbers to a random number for the current GPU?",
        "Y": "seed",
        "Z": "seed Sets the seed for generating random numbers to a random number for the current GPU.",
        "source": "https://pytorch.org/docs/stable/cuda.html"
    },
    {
        "X": "On which GPUs does seed_all set the seed for generating random numbers to a random number?",
        "Y": "all GPUs",
        "Z": "seed_all Sets the seed for generating random numbers to a random number on all GPUs.",
        "source": "https://pytorch.org/docs/stable/cuda.html"
    },
    {
        "X": "What sets the seed for generating random numbers to a random number on all GPUs?",
        "Y": "seed_all",
        "Z": "seed_all Sets the seed for generating random numbers to a random number on all GPUs.",
        "source": "https://pytorch.org/docs/stable/cuda.html"
    },
    {
        "X": "The seed_all Sets the seed for generating random numbers to a random number on all what?",
        "Y": "GPUs",
        "Z": "seed_all Sets the seed for generating random numbers to a random number on all GPUs.",
        "source": "https://pytorch.org/docs/stable/cuda.html"
    },
    {
        "X": "What returns the current random seed of the current GPU?",
        "Y": "initial_seed",
        "Z": "initial_seed Returns the current random seed of the current GPU.",
        "source": "https://pytorch.org/docs/stable/cuda.html"
    },
    {
        "X": "What is a tensor to specified GPU devices?",
        "Y": "comm.broadcast Broadcasts",
        "Z": "comm.broadcast Broadcasts a tensor to specified GPU devices.",
        "source": "https://pytorch.org/docs/stable/cuda.html"
    },
    {
        "X": "comm.broadcast Broadcasts a tensor to specified what?",
        "Y": "GPU devices",
        "Z": "comm.broadcast Broadcasts a tensor to specified GPU devices.",
        "source": "https://pytorch.org/docs/stable/cuda.html"
    },
    {
        "X": "comm.broadcast_coalesced Broadcasts a sequence tensors to the specified what?",
        "Y": "GPUs",
        "Z": "comm.broadcast_coalesced Broadcasts a sequence tensors to the specified GPUs.",
        "source": "https://pytorch.org/docs/stable/cuda.html"
    },
    {
        "X": "What does comm.reduce_add Sums tensors do from multiple GPUs?",
        "Y": "comm.reduce_add Sums tensors",
        "Z": "comm.reduce_add Sums tensors from multiple GPUs.",
        "source": "https://pytorch.org/docs/stable/cuda.html"
    },
    {
        "X": "What does comm.reduce_add from multiple GPUs?",
        "Y": "Sums tensors",
        "Z": "comm.reduce_add Sums tensors from multiple GPUs.",
        "source": "https://pytorch.org/docs/stable/cuda.html"
    },
    {
        "X": "What does comm.scatter Scatters tensor do across multiple GPUs?",
        "Y": "comm.scatter Scatters tensor",
        "Z": "comm.scatter Scatters tensor across multiple GPUs.",
        "source": "https://pytorch.org/docs/stable/cuda.html"
    },
    {
        "X": "comm.scatter Scatters tensor across multiple what?",
        "Y": "GPUs",
        "Z": "comm.scatter Scatters tensor across multiple GPUs.",
        "source": "https://pytorch.org/docs/stable/cuda.html"
    },
    {
        "X": "What does comm.gather gather from multiple GPU devices?",
        "Y": "tensors",
        "Z": "comm.gather Gathers tensors from multiple GPU devices.",
        "source": "https://pytorch.org/docs/stable/cuda.html"
    },
    {
        "X": "Stream Wrapper wraps around what stream?",
        "Y": "CUDA",
        "Z": "Stream Wrapper around a CUDA stream.",
        "source": "https://pytorch.org/docs/stable/cuda.html"
    },
    {
        "X": "Stream Wrapper around what stream?",
        "Y": "CUDA",
        "Z": "Stream Wrapper around a CUDA stream.",
        "source": "https://pytorch.org/docs/stable/cuda.html"
    },
    {
        "X": "What wrapper is used around a CUDA stream?",
        "Y": "Stream Wrapper",
        "Z": "Stream Wrapper around a CUDA stream.",
        "source": "https://pytorch.org/docs/stable/cuda.html"
    },
    {
        "X": "What is wrapper that wraps around a CUDA event?",
        "Y": "Event Wrapper",
        "Z": "Event Wrapper around a CUDA event.",
        "source": "https://pytorch.org/docs/stable/cuda.html"
    },
    {
        "X": "What wrapper is used around a CUDA event?",
        "Y": "Event Wrapper",
        "Z": "Event Wrapper around a CUDA event.",
        "source": "https://pytorch.org/docs/stable/cuda.html"
    },
    {
        "X": "What does empty_cache release?",
        "Y": "unoccupied cached memory",
        "Z": "empty_cache Releases all unoccupied cached memory currently held by the caching allocator so that those can be used in other GPU application and visible innvidia-smi.",
        "source": "https://pytorch.org/docs/stable/cuda.html"
    },
    {
        "X": "What returns a human-readable printout of the running processes and their GPU memory use for a given device?",
        "Y": "list_gpu_processes",
        "Z": "list_gpu_processes Returns a human-readable printout of the running processes and their GPU memory use for a given device.",
        "source": "https://pytorch.org/docs/stable/cuda.html"
    },
    {
        "X": "memory_stats Returns a dictionary of what memory allocator statistics for a given device?",
        "Y": "CUDA",
        "Z": "memory_stats Returns a dictionary of CUDA memory allocator statistics for a given device.",
        "source": "https://pytorch.org/docs/stable/cuda.html"
    },
    {
        "X": "What does memory_stats return for a given device?",
        "Y": "a dictionary of CUDA memory allocator statistics",
        "Z": "memory_stats Returns a dictionary of CUDA memory allocator statistics for a given device.",
        "source": "https://pytorch.org/docs/stable/cuda.html"
    },
    {
        "X": "What returns a dictionary of CUDA memory allocator statistics for a given device?",
        "Y": "memory_stats",
        "Z": "memory_stats Returns a dictionary of CUDA memory allocator statistics for a given device.",
        "source": "https://pytorch.org/docs/stable/cuda.html"
    },
    {
        "X": "memory_stats Returns a dictionary of what for a given device?",
        "Y": "CUDA memory allocator statistics",
        "Z": "memory_stats Returns a dictionary of CUDA memory allocator statistics for a given device.",
        "source": "https://pytorch.org/docs/stable/cuda.html"
    },
    {
        "X": "What does memory_summary return?",
        "Y": "a human-readable printout of the current memory allocator statistics",
        "Z": "memory_summary Returns a human-readable printout of the current memory allocator statistics for a given device.",
        "source": "https://pytorch.org/docs/stable/cuda.html"
    },
    {
        "X": "What returns a human-readable printout of the current memory allocator statistics for a given device?",
        "Y": "memory_summary",
        "Z": "memory_summary Returns a human-readable printout of the current memory allocator statistics for a given device.",
        "source": "https://pytorch.org/docs/stable/cuda.html"
    },
    {
        "X": "What memory allocator does memory_snapshot return a snapshot of?",
        "Y": "CUDA",
        "Z": "memory_snapshot Returns a snapshot of the CUDA memory allocator state across all devices.",
        "source": "https://pytorch.org/docs/stable/cuda.html"
    },
    {
        "X": "What returns a snapshot of the CUDA memory allocator state across all devices?",
        "Y": "memory_snapshot",
        "Z": "memory_snapshot Returns a snapshot of the CUDA memory allocator state across all devices.",
        "source": "https://pytorch.org/docs/stable/cuda.html"
    },
    {
        "X": "memory_allocated Returns the current GPU memory occupied by what?",
        "Y": "tensors",
        "Z": "memory_allocated Returns the current GPU memory occupied by tensors in bytes for a given device.",
        "source": "https://pytorch.org/docs/stable/cuda.html"
    },
    {
        "X": "What returns the current GPU memory occupied by tensors in bytes for a given device?",
        "Y": "memory_allocated",
        "Z": "memory_allocated Returns the current GPU memory occupied by tensors in bytes for a given device.",
        "source": "https://pytorch.org/docs/stable/cuda.html"
    },
    {
        "X": "What returns the maximum GPU memory occupied by tensors in bytes for a given device?",
        "Y": "max_memory_allocated",
        "Z": "max_memory_allocated Returns the maximum GPU memory occupied by tensors in bytes for a given device.",
        "source": "https://pytorch.org/docs/stable/cuda.html"
    },
    {
        "X": "What does max_memory_allocated return?",
        "Y": "tensors",
        "Z": "max_memory_allocated Returns the maximum GPU memory occupied by tensors in bytes for a given device.",
        "source": "https://pytorch.org/docs/stable/cuda.html"
    },
    {
        "X": "What resets the starting point in tracking maximum GPU memory occupied by tensors for a given device?",
        "Y": "reset_max_memory_allocated",
        "Z": "reset_max_memory_allocated Resets the starting point in tracking maximum GPU memory occupied by tensors for a given device.",
        "source": "https://pytorch.org/docs/stable/cuda.html"
    },
    {
        "X": "Reset_max_memory_allocated Resets the starting point in tracking maximum GPU memory occupied by what?",
        "Y": "tensors",
        "Z": "reset_max_memory_allocated Resets the starting point in tracking maximum GPU memory occupied by tensors for a given device.",
        "source": "https://pytorch.org/docs/stable/cuda.html"
    },
    {
        "X": "What does memory_reserved return?",
        "Y": "the current GPU memory",
        "Z": "memory_reserved Returns the current GPU memory managed by the caching allocator in bytes for a given device.",
        "source": "https://pytorch.org/docs/stable/cuda.html"
    },
    {
        "X": "memory_reserved Returns the current GPU memory managed by the caching allocator in what format for a given device?",
        "Y": "bytes",
        "Z": "memory_reserved Returns the current GPU memory managed by the caching allocator in bytes for a given device.",
        "source": "https://pytorch.org/docs/stable/cuda.html"
    },
    {
        "X": "What returns the current GPU memory managed by the caching allocator in bytes for a given device?",
        "Y": "memory_reserved",
        "Z": "memory_reserved Returns the current GPU memory managed by the caching allocator in bytes for a given device.",
        "source": "https://pytorch.org/docs/stable/cuda.html"
    },
    {
        "X": "memory_reserved Returns the current GPU memory managed by the caching allocator in what for a given device?",
        "Y": "bytes",
        "Z": "memory_reserved Returns the current GPU memory managed by the caching allocator in bytes for a given device.",
        "source": "https://pytorch.org/docs/stable/cuda.html"
    },
    {
        "X": "What returns the maximum GPU memory managed by the caching allocator in bytes for a given device?",
        "Y": "max_memory_reserved",
        "Z": "max_memory_reserved Returns the maximum GPU memory managed by the caching allocator in bytes for a given device.",
        "source": "https://pytorch.org/docs/stable/cuda.html"
    },
    {
        "X": "How many bytes does max_memory_reserved return for a given device?",
        "Y": "bytes",
        "Z": "max_memory_reserved Returns the maximum GPU memory managed by the caching allocator in bytes for a given device.",
        "source": "https://pytorch.org/docs/stable/cuda.html"
    },
    {
        "X": "What is setting that sets memory fraction for a process?",
        "Y": "set_per_process_memory_fraction",
        "Z": "set_per_process_memory_fraction Set memory fraction for a process.",
        "source": "https://pytorch.org/docs/stable/cuda.html"
    },
    {
        "X": "What is set memory fraction for a process?",
        "Y": "set_per_process_memory_fraction",
        "Z": "set_per_process_memory_fraction Set memory fraction for a process.",
        "source": "https://pytorch.org/docs/stable/cuda.html"
    },
    {
        "X": "What is memory_cached Deprecated?",
        "Y": "seememory_reserved()",
        "Z": "memory_cached Deprecated; seememory_reserved().",
        "source": "https://pytorch.org/docs/stable/cuda.html"
    },
    {
        "X": "What resets the starting point in tracking maximum GPU memory managed by the caching allocator for a given device?",
        "Y": "reset_max_memory_cached",
        "Z": "reset_max_memory_cached Resets the starting point in tracking maximum GPU memory managed by the caching allocator for a given device.",
        "source": "https://pytorch.org/docs/stable/cuda.html"
    },
    {
        "X": "Reset_max_memory_cached Resets the starting point in tracking maximum GPU memory managed by what?",
        "Y": "caching allocator",
        "Z": "reset_max_memory_cached Resets the starting point in tracking maximum GPU memory managed by the caching allocator for a given device.",
        "source": "https://pytorch.org/docs/stable/cuda.html"
    },
    {
        "X": "What resets the \u201cpeak\u201d stats tracked by the CUDA memory allocator?",
        "Y": "reset_peak_memory_stats",
        "Z": "reset_peak_memory_stats Resets the \u201cpeak\u201d stats tracked by the CUDA memory allocator.",
        "source": "https://pytorch.org/docs/stable/cuda.html"
    },
    {
        "X": "What does reset_peak_memory_stats do?",
        "Y": "CUDA memory allocator",
        "Z": "reset_peak_memory_stats Resets the \u201cpeak\u201d stats tracked by the CUDA memory allocator.",
        "source": "https://pytorch.org/docs/stable/cuda.html"
    },
    {
        "X": "What type of event occurs at some point?",
        "Y": "instantaneous",
        "Z": "nvtx.mark Describe an instantaneous event that occurred at some point.",
        "source": "https://pytorch.org/docs/stable/cuda.html"
    },
    {
        "X": "What type of event does nvtx.mark describe?",
        "Y": "instantaneous",
        "Z": "nvtx.mark Describe an instantaneous event that occurred at some point.",
        "source": "https://pytorch.org/docs/stable/cuda.html"
    },
    {
        "X": "What pushes a range onto a stack of nested range span?",
        "Y": "nvtx.range_push",
        "Z": "nvtx.range_push Pushes a range onto a stack of nested range span.",
        "source": "https://pytorch.org/docs/stable/cuda.html"
    },
    {
        "X": "nvtx.range_push Pushes a range onto what?",
        "Y": "stack",
        "Z": "nvtx.range_push Pushes a range onto a stack of nested range span.",
        "source": "https://pytorch.org/docs/stable/cuda.html"
    },
    {
        "X": "nvtx.range_pop Pops a range off of a stack of what?",
        "Y": "nested range spans",
        "Z": "nvtx.range_pop Pops a range off of a stack of nested range spans.",
        "source": "https://pytorch.org/docs/stable/cuda.html"
    },
    {
        "X": "nvtx.range_pop Pops a range off of what?",
        "Y": "a stack of nested range spans",
        "Z": "nvtx.range_pop Pops a range off of a stack of nested range spans.",
        "source": "https://pytorch.org/docs/stable/cuda.html"
    },
    {
        "X": "What is feature that reduces the amount of scatter?",
        "Y": "reduce_scatter",
        "Z": "reduce_scatter \u2718 \u2718 \u2718 \u2718 \u2718 \u2713",
        "source": "https://pytorch.org/docs/stable/distributed.html"
    },
    {
        "X": "What is a placeholder for?",
        "Y": "placeholder x x ()",
        "Z": "placeholder x x () {}",
        "source": "https://pytorch.org/docs/stable/fx.html"
    },
    {
        "X": "What is function that determines the weight of a linear weight?",
        "Y": "get_attr linear_weight linear.weight",
        "Z": "get_attr linear_weight linear.weight () {}",
        "source": "https://pytorch.org/docs/stable/fx.html"
    },
    {
        "X": "What is a linear.weight?",
        "Y": "get_attr linear_weight",
        "Z": "get_attr linear_weight linear.weight () {}",
        "source": "https://pytorch.org/docs/stable/fx.html"
    },
    {
        "X": "What is call_function?",
        "Y": "add_1",
        "Z": "call_function add_1 <built-in function add> (x, linear_weight) {}",
        "source": "https://pytorch.org/docs/stable/fx.html"
    },
    {
        "X": "What is built-in function add?",
        "Y": "call_function add_1",
        "Z": "call_function add_1 <built-in function add> (x, linear_weight) {}",
        "source": "https://pytorch.org/docs/stable/fx.html"
    },
    {
        "X": "What is call_module linear_1 linear?",
        "Y": "add_1",
        "Z": "call_module linear_1 linear (add_1,) {}",
        "source": "https://pytorch.org/docs/stable/fx.html"
    },
    {
        "X": "What is _1 linear?",
        "Y": "call_module linear",
        "Z": "call_module linear_1 linear (add_1,) {}",
        "source": "https://pytorch.org/docs/stable/fx.html"
    },
    {
        "X": "what is call_module?",
        "Y": "linear_1",
        "Z": "call_module linear_1 linear (add_1,) {}",
        "source": "https://pytorch.org/docs/stable/fx.html"
    },
    {
        "X": "call_module is what?",
        "Y": "linear",
        "Z": "call_module linear_1 linear (add_1,) {}",
        "source": "https://pytorch.org/docs/stable/fx.html"
    },
    {
        "X": "What is relu_1 relu (linear_1)?",
        "Y": "call_method",
        "Z": "call_method relu_1 relu (linear_1,) {}",
        "source": "https://pytorch.org/docs/stable/fx.html"
    },
    {
        "X": "What is the decimal value of the call_function sum_1?",
        "Y": "-1",
        "Z": "call_function sum_1 <built-in method sum \u2026> (relu_1,) {\u2018dim\u2019: -1}",
        "source": "https://pytorch.org/docs/stable/fx.html"
    },
    {
        "X": "\u2018dim\u2019: what?",
        "Y": "-1",
        "Z": "call_function sum_1 <built-in method sum \u2026> (relu_1,) {\u2018dim\u2019: -1}",
        "source": "https://pytorch.org/docs/stable/fx.html"
    },
    {
        "X": "What is built-in method sum...>?",
        "Y": "call_function sum_1",
        "Z": "call_function sum_1 <built-in method sum \u2026> (relu_1,) {\u2018dim\u2019: -1}",
        "source": "https://pytorch.org/docs/stable/fx.html"
    },
    {
        "X": "What is built-in method topk?",
        "Y": "call_function topk_1",
        "Z": "call_function topk_1 <built-in method topk \u2026> (sum_1, 3) {}",
        "source": "https://pytorch.org/docs/stable/fx.html"
    },
    {
        "X": "What is the output output output?",
        "Y": "topk_1",
        "Z": "output output output (topk_1,) {}",
        "source": "https://pytorch.org/docs/stable/fx.html"
    },
    {
        "X": "What is FX Graph Mode Quantization?",
        "Y": "Eager Mode Quantization FX Graph Mode Quantization",
        "Z": "Eager Mode Quantization FX Graph Mode Quantization",
        "source": "https://pytorch.org/docs/stable/quantization.html"
    },
    {
        "X": "What is the term for FX Graph Mode Quantization?",
        "Y": "Eager Mode Quantization",
        "Z": "Eager Mode Quantization FX Graph Mode Quantization",
        "source": "https://pytorch.org/docs/stable/quantization.html"
    },
    {
        "X": "What is Eager Mode Quantization FX?",
        "Y": "Graph Mode Quantization",
        "Z": "Eager Mode Quantization FX Graph Mode Quantization",
        "source": "https://pytorch.org/docs/stable/quantization.html"
    },
    {
        "X": "What is the status of the beta prototype?",
        "Y": "Release Status beta prototype",
        "Z": "Release Status beta prototype",
        "source": "https://pytorch.org/docs/stable/quantization.html"
    },
    {
        "X": "What is the status of the release?",
        "Y": "beta prototype",
        "Z": "Release Status beta prototype",
        "source": "https://pytorch.org/docs/stable/quantization.html"
    },
    {
        "X": "What is the release status beta?",
        "Y": "prototype",
        "Z": "Release Status beta prototype",
        "source": "https://pytorch.org/docs/stable/quantization.html"
    },
    {
        "X": "What type of manual is used?",
        "Y": "Operator Fusion Manual",
        "Z": "Operator Fusion Manual Automatic",
        "source": "https://pytorch.org/docs/stable/quantization.html"
    },
    {
        "X": "What type of manual is the operator Fusion?",
        "Y": "Automatic",
        "Z": "Operator Fusion Manual Automatic",
        "source": "https://pytorch.org/docs/stable/quantization.html"
    },
    {
        "X": "What is manual?",
        "Y": "Operator Fusion Manual Automatic",
        "Z": "Operator Fusion Manual Automatic",
        "source": "https://pytorch.org/docs/stable/quantization.html"
    },
    {
        "X": "What type of manual is the Quant/DeQuant Placement Manual?",
        "Y": "Automatic",
        "Z": "Quant/DeQuant Placement Manual Automatic",
        "source": "https://pytorch.org/docs/stable/quantization.html"
    },
    {
        "X": "Quant/DeQuant Placement Manual is what?",
        "Y": "Automatic",
        "Z": "Quant/DeQuant Placement Manual Automatic",
        "source": "https://pytorch.org/docs/stable/quantization.html"
    },
    {
        "X": "What is Automatic Placement Manual?",
        "Y": "Quant/DeQuant Placement Manual",
        "Z": "Quant/DeQuant Placement Manual Automatic",
        "source": "https://pytorch.org/docs/stable/quantization.html"
    },
    {
        "X": "What is Supported Supported?",
        "Y": "Quantizing Modules",
        "Z": "Quantizing Modules Supported Supported",
        "source": "https://pytorch.org/docs/stable/quantization.html"
    },
    {
        "X": "What are Quantizing Modules Supported Supported?",
        "Y": "Quantizing Modules Supported Supported",
        "Z": "Quantizing Modules Supported Supported",
        "source": "https://pytorch.org/docs/stable/quantization.html"
    },
    {
        "X": "What type of Modules are Supported?",
        "Y": "Quantizing Modules Supported",
        "Z": "Quantizing Modules Supported Supported",
        "source": "https://pytorch.org/docs/stable/quantization.html"
    },
    {
        "X": "What type of manual is automatic?",
        "Y": "Quantizing Functionals/Torch Ops Manual",
        "Z": "Quantizing Functionals/Torch Ops Manual Automatic",
        "source": "https://pytorch.org/docs/stable/quantization.html"
    },
    {
        "X": "What type of manual is Quantizing Functionals/Torch Ops Manual?",
        "Y": "Automatic",
        "Z": "Quantizing Functionals/Torch Ops Manual Automatic",
        "source": "https://pytorch.org/docs/stable/quantization.html"
    },
    {
        "X": "Quantizing Functionals/ Quantizing Functionals/ Quantizing Functionals/ Quantizing Functionals/ Quantizing Functionals/ Quantizing Functionals/ Quant",
        "Y": "Torch Ops Manual Automatic",
        "Z": "Quantizing Functionals/Torch Ops Manual Automatic",
        "source": "https://pytorch.org/docs/stable/quantization.html"
    },
    {
        "X": "What does Torch Ops Manual Automatically do?",
        "Y": "Quantizing Functionals",
        "Z": "Quantizing Functionals/Torch Ops Manual Automatic",
        "source": "https://pytorch.org/docs/stable/quantization.html"
    },
    {
        "X": "What is limited support for?",
        "Y": "Customization",
        "Z": "Support for Customization Limited Support Fully Supported",
        "source": "https://pytorch.org/docs/stable/quantization.html"
    },
    {
        "X": "What type of Support does Customization Limited Support offer?",
        "Y": "Fully Supported",
        "Z": "Support for Customization Limited Support Fully Supported",
        "source": "https://pytorch.org/docs/stable/quantization.html"
    },
    {
        "X": "Support for what type of support?",
        "Y": "Customization Limited Support Fully Supported",
        "Z": "Support for Customization Limited Support Fully Supported",
        "source": "https://pytorch.org/docs/stable/quantization.html"
    },
    {
        "X": "Quantization Mode Support Post Training Quantization: Dynamic, Dynamic, Weight OnlyQuantiztion Aware Training: Static Post Training Quantization",
        "Y": "Static",
        "Z": "Quantization Mode Support Post Training Quantization: Static, Dynamic, Weight OnlyQuantiztion Aware Training: Static Post Training Quantization: Static, Dynamic, Weight OnlyQuantiztion Aware Training: Static",
        "source": "https://pytorch.org/docs/stable/quantization.html"
    },
    {
        "X": "Quantization Mode Support Post Training Quantization: Static, Dynamic, Weight Only, Quantiztion Aware Training: Static Post Training Quant",
        "Y": "Weight Only",
        "Z": "Quantization Mode Support Post Training Quantization: Static, Dynamic, Weight OnlyQuantiztion Aware Training: Static Post Training Quantization: Static, Dynamic, Weight OnlyQuantiztion Aware Training: Static",
        "source": "https://pytorch.org/docs/stable/quantization.html"
    },
    {
        "X": "What is the term for Post Training Quantization: Static, Dynamic, Weight OnlyQuantiztion Aware Training?",
        "Y": "Quantization Mode Support",
        "Z": "Quantization Mode Support Post Training Quantization: Static, Dynamic, Weight OnlyQuantiztion Aware Training: Static Post Training Quantization: Static, Dynamic, Weight OnlyQuantiztion Aware Training: Static",
        "source": "https://pytorch.org/docs/stable/quantization.html"
    },
    {
        "X": "What type of torch may need some refactoring to make the model compatible with FX Graph Mode Quantization?",
        "Y": "Module",
        "Z": "Input/Output Model Type torch.nn.Module torch.nn.Module(May need some refactors to make the model compatible with FX Graph Mode Quantization)",
        "source": "https://pytorch.org/docs/stable/quantization.html"
    },
    {
        "X": "What may need some refactoring to make the model compatible with?",
        "Y": "FX Graph Mode Quantization",
        "Z": "Input/Output Model Type torch.nn.Module torch.nn.Module(May need some refactors to make the model compatible with FX Graph Mode Quantization)",
        "source": "https://pytorch.org/docs/stable/quantization.html"
    },
    {
        "X": "What does the torch need some refactors to make it compatible with?",
        "Y": "FX Graph Mode Quantization",
        "Z": "Input/Output Model Type torch.nn.Module torch.nn.Module(May need some refactors to make the model compatible with FX Graph Mode Quantization)",
        "source": "https://pytorch.org/docs/stable/quantization.html"
    },
    {
        "X": "What are the weights converted to?",
        "Y": "int8",
        "Z": "torch.quantization This module implements the functions you call directly to convert your model from FP32 to quantized form. For example theprepare()is used in post training quantization to prepares your model for the calibration step andconvert()actually converts the weights to int8 and replaces the operations with their quantized counterparts. There are other helper functions for things like quantizing the input to your model and performing critical fusions like conv+relu.",
        "source": "https://pytorch.org/docs/stable/quantization.html"
    },
    {
        "X": "What modules does torch.nn.intrinsic implement?",
        "Y": "conv + relu",
        "Z": "torch.nn.intrinsic This module implements the combined (fused) modules conv + relu which can then be quantized.",
        "source": "https://pytorch.org/docs/stable/quantization.html"
    },
    {
        "X": "What can be done with the combined modules conv + relu?",
        "Y": "quantized",
        "Z": "torch.nn.intrinsic This module implements the combined (fused) modules conv + relu which can then be quantized.",
        "source": "https://pytorch.org/docs/stable/quantization.html"
    },
    {
        "X": "What is module that implements the versions of the fused operations needed for quantization aware training?",
        "Y": "torch.nn.intrinsic.qat",
        "Z": "torch.nn.intrinsic.qat This module implements the versions of those fused operations needed for quantization aware training.",
        "source": "https://pytorch.org/docs/stable/quantization.html"
    },
    {
        "X": "This module implements the versions of those fused operations needed for what?",
        "Y": "quantization aware training",
        "Z": "torch.nn.intrinsic.qat This module implements the versions of those fused operations needed for quantization aware training.",
        "source": "https://pytorch.org/docs/stable/quantization.html"
    },
    {
        "X": "What are some of the quantized implementations of fused operations?",
        "Y": "conv + relu",
        "Z": "torch.nn.intrinsic.quantized This module implements the quantized implementations of fused operations like conv + relu.",
        "source": "https://pytorch.org/docs/stable/quantization.html"
    },
    {
        "X": "In what platform do the nn modulesConv2d() andLinear() run?",
        "Y": "FP32",
        "Z": "torch.nn.qat This module implements versions of the key nn modulesConv2d()andLinear()which run in FP32 but with rounding applied to simulate the effect of INT8 quantization.",
        "source": "https://pytorch.org/docs/stable/quantization.html"
    },
    {
        "X": "What effect does the rounding of the nn modules simulate?",
        "Y": "INT8 quantization",
        "Z": "torch.nn.qat This module implements versions of the key nn modulesConv2d()andLinear()which run in FP32 but with rounding applied to simulate the effect of INT8 quantization.",
        "source": "https://pytorch.org/docs/stable/quantization.html"
    },
    {
        "X": "In what platform do the modulesConv2d() andLinear() run?",
        "Y": "FP32",
        "Z": "torch.nn.qat This module implements versions of the key nn modulesConv2d()andLinear()which run in FP32 but with rounding applied to simulate the effect of INT8 quantization.",
        "source": "https://pytorch.org/docs/stable/quantization.html"
    },
    {
        "X": "What quantization does torch.nn.qat simulate?",
        "Y": "INT8",
        "Z": "torch.nn.qat This module implements versions of the key nn modulesConv2d()andLinear()which run in FP32 but with rounding applied to simulate the effect of INT8 quantization.",
        "source": "https://pytorch.org/docs/stable/quantization.html"
    },
    {
        "X": "What module implements the quantized versions of the nn layers?",
        "Y": "torch.nn.quantized",
        "Z": "torch.nn.quantized This module implements the quantized versions of the nn layers such as ~`torch.nn.Conv2d` andtorch.nn.ReLU.",
        "source": "https://pytorch.org/docs/stable/quantization.html"
    },
    {
        "X": "What does torch.nn.Conv2d module implement ?",
        "Y": "torch.nn.Conv2d module implements  a quantized version of the nn layers",
        "Z": "torch.nn.quantized This module implements the quantized versions of the nn layers such as ~`torch.nn.Conv2d` andtorch.nn.ReLU.",
        "source": "https://pytorch.org/docs/stable/quantization.html"
    },
    {
        "X": "How is torch.nn.quantized.dynamically?",
        "Y": "Dynamically quantized Linear,LSTM,LSTMCell,GRUCell, andRNNCell",
        "Z": "torch.nn.quantized.dynamic Dynamically quantizedLinear,LSTM,LSTMCell,GRUCell, andRNNCell.",
        "source": "https://pytorch.org/docs/stable/quantization.html"
    },
    {
        "X": "Dynamically quantized Linear,LSTM,LSTMCell,GRUCell, andRNNCell?",
        "Y": "torch.nn.quantized",
        "Z": "torch.nn.quantized.dynamic Dynamically quantizedLinear,LSTM,LSTMCell,GRUCell, andRNNCell.",
        "source": "https://pytorch.org/docs/stable/quantization.html"
    },
    {
        "X": "With respect to what  the backward Computes the sum of gradients of given tensors ?",
        "Y": "graph leaves",
        "Z": "backward Computes the sum of gradients of given tensors with respect to graph leaves.",
        "source": "https://pytorch.org/docs/stable/autograd.html"
    },
    {
        "X": "What computes the sum of gradients of given tensors with respect to graph leaves?",
        "Y": "backward",
        "Z": "backward Computes the sum of gradients of given tensors with respect to graph leaves.",
        "source": "https://pytorch.org/docs/stable/autograd.html"
    },
    {
        "X": "What returns the sum of gradients of outputs with respect to the inputs?",
        "Y": "grad Computes",
        "Z": "grad Computes and returns the sum of gradients of outputs with respect to the inputs.",
        "source": "https://pytorch.org/docs/stable/autograd.html"
    },
    {
        "X": "What computes and returns the sum of gradients of outputs with respect to the inputs?",
        "Y": "grad",
        "Z": "grad Computes and returns the sum of gradients of outputs with respect to the inputs.",
        "source": "https://pytorch.org/docs/stable/autograd.html"
    },
    {
        "X": "What type of function does functional.jacobian Function compute?",
        "Y": "Jacobian",
        "Z": "functional.jacobian Function that computes the Jacobian of a given function.",
        "source": "https://pytorch.org/docs/stable/autograd.html"
    },
    {
        "X": "What does functional.jacobian Function do?",
        "Y": "computes the Jacobian of a given function",
        "Z": "functional.jacobian Function that computes the Jacobian of a given function.",
        "source": "https://pytorch.org/docs/stable/autograd.html"
    },
    {
        "X": "What is a functional.hessian function?",
        "Y": "computes the Hessian of a given scalar function",
        "Z": "functional.hessian Function that computes the Hessian of a given scalar function.",
        "source": "https://pytorch.org/docs/stable/autograd.html"
    },
    {
        "X": "What computes the dot product between a vector vand the Jacobian of the given function at the point given by the inputs?",
        "Y": "functional.vjp Function",
        "Z": "functional.vjp Function that computes the dot product between a vector vand the Jacobian of the given function at the point given by the inputs.",
        "source": "https://pytorch.org/docs/stable/autograd.html"
    },
    {
        "X": "A functional.vjp Function computes the dot product between a vector vand and what of the given function?",
        "Y": "the Jacobian",
        "Z": "functional.vjp Function that computes the dot product between a vector vand the Jacobian of the given function at the point given by the inputs.",
        "source": "https://pytorch.org/docs/stable/autograd.html"
    },
    {
        "X": "What does functional.vjp compute between a vector vand the Jacobian of the given function at the point given by the inputs?",
        "Y": "the dot product",
        "Z": "functional.vjp Function that computes the dot product between a vector vand the Jacobian of the given function at the point given by the inputs.",
        "source": "https://pytorch.org/docs/stable/autograd.html"
    },
    {
        "X": "What type of function computes the dot product between a vector vand the Jacobian of the given function at the point given by the input",
        "Y": "functional",
        "Z": "functional.vjp Function that computes the dot product between a vector vand the Jacobian of the given function at the point given by the inputs.",
        "source": "https://pytorch.org/docs/stable/autograd.html"
    },
    {
        "X": "The functional.vjp Function computes the dot product between a vector vand and what?",
        "Y": "the Jacobian",
        "Z": "functional.vjp Function that computes the dot product between a vector vand the Jacobian of the given function at the point given by the inputs.",
        "source": "https://pytorch.org/docs/stable/autograd.html"
    },
    {
        "X": "What is the dot product between a given function and a vector v?",
        "Y": "the Jacobian",
        "Z": "functional.jvp Function that computes the dot product between  the Jacobian of the given function at the point given by the inputs and a vector v.",
        "source": "https://pytorch.org/docs/stable/autograd.html"
    },
    {
        "X": "Where is the dot product computed between the Jacobian of the given function?",
        "Y": "the point given by the inputs and a vector v",
        "Z": "functional.jvp Function that computes the dot product between  the Jacobian of the given function at the point given by the inputs and a vector v.",
        "source": "https://pytorch.org/docs/stable/autograd.html"
    },
    {
        "X": "What computes the dot product between a vector vand the Hessian of a given scalar function at the point given by",
        "Y": "functional.vhp Function",
        "Z": "functional.vhp Function that computes the dot product between a vector vand the Hessian of a given scalar function at the point given by the inputs.",
        "source": "https://pytorch.org/docs/stable/autograd.html"
    },
    {
        "X": "What is the vector vand of a given scalar function?",
        "Y": "the Hessian",
        "Z": "functional.vhp Function that computes the dot product between a vector vand the Hessian of a given scalar function at the point given by the inputs.",
        "source": "https://pytorch.org/docs/stable/autograd.html"
    },
    {
        "X": "What does functional.vhp compute between a vector vand the Hessian of a given scalar function at the point given",
        "Y": "the dot product",
        "Z": "functional.vhp Function that computes the dot product between a vector vand the Hessian of a given scalar function at the point given by the inputs.",
        "source": "https://pytorch.org/docs/stable/autograd.html"
    },
    {
        "X": "What computes the dot product between the Hessian of a given scalar function and a vector vat the point given by",
        "Y": "functional.hvp Function",
        "Z": "functional.hvp Function that computes the dot product between the Hessian of a given scalar function and a vector vat the point given by the inputs.",
        "source": "https://pytorch.org/docs/stable/autograd.html"
    },
    {
        "X": "What is the dot product between a given scalar function and a vector vat?",
        "Y": "the Hessian",
        "Z": "functional.hvp Function that computes the dot product between the Hessian of a given scalar function and a vector vat the point given by the inputs.",
        "source": "https://pytorch.org/docs/stable/autograd.html"
    },
    {
        "X": "What does functional.hvp compute between the Hessian of a given scalar function and a vector vat the point given",
        "Y": "the dot product",
        "Z": "functional.hvp Function that computes the dot product between the Hessian of a given scalar function and a vector vat the point given by the inputs.",
        "source": "https://pytorch.org/docs/stable/autograd.html"
    },
    {
        "X": "What attribute is None bydefault?",
        "Y": "torch.Tensor.grad",
        "Z": "torch.Tensor.grad This attribute is None bydefault and becomes a Tensor the first time a call to backward() computes gradients forself.",
        "source": "https://pytorch.org/docs/stable/autograd.html"
    },
    {
        "X": "What requires gradients to be computed for?",
        "Y": "Tensor",
        "Z": "torch.Tensor.requires_grad Is True if gradients need to be computed for this Tensor,False otherwise.",
        "source": "https://pytorch.org/docs/stable/autograd.html"
    },
    {
        "X": "What are all Tensors that require grad which is False?",
        "Y": "leaf Tensors",
        "Z": "torch.Tensor.is_leaf All Tensors that have requires_gradwhich is False wii be leaf Tensors by convention.",
        "source": "https://pytorch.org/docs/stable/autograd.html"
    },
    {
        "X": "What type of Tensor is a torch?",
        "Y": "leaf",
        "Z": "torch.Tensor.is_leaf All Tensors that have requires_gradwhich is False wii be leaf Tensors by convention.",
        "source": "https://pytorch.org/docs/stable/autograd.html"
    },
    {
        "X": "What does torch.Tensor.detach remove a new Tensor from?",
        "Y": "current graph",
        "Z": "torch.Tensor.detach Returns a new Tensor, detached from the current graph.",
        "source": "https://pytorch.org/docs/stable/autograd.html"
    },
    {
        "X": "What is detached from the current graph?",
        "Y": "Tensor",
        "Z": "torch.Tensor.detach Returns a new Tensor, detached from the current graph.",
        "source": "https://pytorch.org/docs/stable/autograd.html"
    },
    {
        "X": "What does the Tensor become?",
        "Y": "leaf",
        "Z": "torch.Tensor.detach_ Detaches the Tensor from the graph that created it, making it a leaf.",
        "source": "https://pytorch.org/docs/stable/autograd.html"
    },
    {
        "X": "What does torch.Tensor.detach_ Detaches the Tensor from the graph that created it?",
        "Y": "leaf",
        "Z": "torch.Tensor.detach_ Detaches the Tensor from the graph that created it, making it a leaf.",
        "source": "https://pytorch.org/docs/stable/autograd.html"
    },
    {
        "X": "What type of hook does torch.Tensor.register_hook register?",
        "Y": "backward hook",
        "Z": "torch.Tensor.register_hook(hook) Registers a backward hook.",
        "source": "https://pytorch.org/docs/stable/autograd.html"
    },
    {
        "X": "What does Function.forward do?",
        "Y": "Function.forward Performs the operation",
        "Z": "Function.forward Performs the operation.",
        "source": "https://pytorch.org/docs/stable/autograd.html"
    },
    {
        "X": "How are tensors modified in function._ContextMethodMixin.mark_dirty?",
        "Y": "in-place operation",
        "Z": "function._ContextMethodMixin.mark_dirty Marks given tensors as modified in an in-place operation.",
        "source": "https://pytorch.org/docs/stable/autograd.html"
    },
    {
        "X": "In what operation are tensors modified?",
        "Y": "in-place operation",
        "Z": "function._ContextMethodMixin.mark_dirty Marks given tensors as modified in an in-place operation.",
        "source": "https://pytorch.org/docs/stable/autograd.html"
    },
    {
        "X": "Function._ContextMethodMixin.mark_non_differentiable Marks outputs as what?",
        "Y": "non-differentiable",
        "Z": "function._ContextMethodMixin.mark_non_differentiable Marks outputs as non-differentiable.",
        "source": "https://pytorch.org/docs/stable/autograd.html"
    },
    {
        "X": "What mark does function._ContextMethodMixin.mark_non_differentiable?",
        "Y": "function._ContextMethodMixin.mark_non_differentiable",
        "Z": "function._ContextMethodMixin.mark_non_differentiable Marks outputs as non-differentiable.",
        "source": "https://pytorch.org/docs/stable/autograd.html"
    },
    {
        "X": "To what direction does function._ContextMethodMixin.save_for_backward save given tensor",
        "Y": "tobackward",
        "Z": "function._ContextMethodMixin.save_for_backward Saves given tensors for a future call tobackward().",
        "source": "https://pytorch.org/docs/stable/autograd.html"
    },
    {
        "X": "What does function._ContextMethodMixin.save_for_backward save?",
        "Y": "given tensors",
        "Z": "function._ContextMethodMixin.save_for_backward Saves given tensors for a future call tobackward().",
        "source": "https://pytorch.org/docs/stable/autograd.html"
    },
    {
        "X": "What does function._ContextMethodMixin.set_materialize_grads set whether to materialize output?",
        "Y": "grad tensors",
        "Z": "function._ContextMethodMixin.set_materialize_grads Sets whether to materialize output grad tensors.",
        "source": "https://pytorch.org/docs/stable/autograd.html"
    },
    {
        "X": "What does function._ContextMethodMixin.set_materialize_grads Set?",
        "Y": "whether to materialize output grad tensors",
        "Z": "function._ContextMethodMixin.set_materialize_grads Sets whether to materialize output grad tensors.",
        "source": "https://pytorch.org/docs/stable/autograd.html"
    },
    {
        "X": "What function sets whether to materialize output grad tensors?",
        "Y": "function._ContextMethodMixin",
        "Z": "function._ContextMethodMixin.set_materialize_grads Sets whether to materialize output grad tensors.",
        "source": "https://pytorch.org/docs/stable/autograd.html"
    },
    {
        "X": "What is computed via small finite differences against analytical gradients w.r.t?",
        "Y": "gradcheck Check gradients",
        "Z": "gradcheck Check gradients computed via small finite differences against analytical gradients w.r.t.",
        "source": "https://pytorch.org/docs/stable/autograd.html"
    },
    {
        "X": "What is check gradients computed via small finite differences against analytical gradients w.r.t.",
        "Y": "gradcheck",
        "Z": "gradcheck Check gradients computed via small finite differences against analytical gradients w.r.t.",
        "source": "https://pytorch.org/docs/stable/autograd.html"
    },
    {
        "X": "What does gradgradcheck do?",
        "Y": "gradgradcheck Check gradients of gradients computed via small finite differences against analytical gradients",
        "Z": "gradgradcheck Check gradients of gradients computed via small finite differences against analytical gradients w.r.t.",
        "source": "https://pytorch.org/docs/stable/autograd.html"
    },
    {
        "X": "What check gradients of gradients computed via small finite differences against analytical gradients?",
        "Y": "gradgradcheck",
        "Z": "gradgradcheck Check gradients of gradients computed via small finite differences against analytical gradients w.r.t.",
        "source": "https://pytorch.org/docs/stable/autograd.html"
    },
    {
        "X": "What does profiler.profile.export_chrome_trace export?",
        "Y": "EventList",
        "Z": "profiler.profile.export_chrome_trace Exports an EventList as a Chrome tracing tools file.",
        "source": "https://pytorch.org/docs/stable/autograd.html"
    },
    {
        "X": "What does export an EventList as a Chrome tracing tools file?",
        "Y": "profiler.profile.export_chrome_trace",
        "Z": "profiler.profile.export_chrome_trace Exports an EventList as a Chrome tracing tools file.",
        "source": "https://pytorch.org/docs/stable/autograd.html"
    },
    {
        "X": "What does profiler.profile.total_average mean?",
        "Y": "average of all events",
        "Z": "profiler.profile.total_average Averages all events.",
        "source": "https://pytorch.org/docs/stable/autograd.html"
    },
    {
        "X": "What is the name of all events?",
        "Y": "profiler.profile.total_average",
        "Z": "profiler.profile.total_average Averages all events.",
        "source": "https://pytorch.org/docs/stable/autograd.html"
    },
    {
        "X": "What operating system is ppc64le?",
        "Y": "Linux",
        "Z": "Linux (ppc64le) GPU \u2014  \u2014",
        "source": "https://github.com/pytorch/pytorch"
    },
    {
        "X": "What is the name of Linux's GPU?",
        "Y": "ppc64le",
        "Z": "Linux (ppc64le) GPU \u2014  \u2014",
        "source": "https://github.com/pytorch/pytorch"
    },
    {
        "X": "What version of of Linux for pytorch?",
        "Y": "aarch64",
        "Z": "Linux (aarch64) CPU",
        "source": "https://github.com/pytorch/pytorch"
    },
    {
        "X": "Which  Linux's CPU is for pytorch?",
        "Y": "aarch64",
        "Z": "Linux (aarch64) CPU",
        "source": "https://github.com/pytorch/pytorch"
    },
    {
        "X": "What kind of support does NumPy have?",
        "Y": "GPU support",
        "Z": "torch a Tensor library like NumPy, with strong GPU support",
        "source": "https://github.com/pytorch/pytorch"
    },
    {
        "X": "What is a Tensor library similar to?",
        "Y": "NumPy",
        "Z": "torch a Tensor library like NumPy, with strong GPU support",
        "source": "https://github.com/pytorch/pytorch"
    },
    {
        "X": "What is torch.autograd?",
        "Y": "tape-based automatic differentiation library",
        "Z": "torch.autograd a tape-based automatic differentiation library that supports all differentiable Tensor operations in torch",
        "source": "https://github.com/pytorch/pytorch"
    },
    {
        "X": "What does torch.autograd support?",
        "Y": "all differentiable Tensor operations",
        "Z": "torch.autograd a tape-based automatic differentiation library that supports all differentiable Tensor operations in torch",
        "source": "https://github.com/pytorch/pytorch"
    },
    {
        "X": "What is tape-based automatic differentiation library that supports all differentiable Tensor operations in torch?",
        "Y": "torch.autograd",
        "Z": "torch.autograd a tape-based automatic differentiation library that supports all differentiable Tensor operations in torch",
        "source": "https://github.com/pytorch/pytorch"
    },
    {
        "X": "What is torch.nn deeply integrated with?",
        "Y": "autograd",
        "Z": "torch.nn a neural networks library deeply integrated with autograd designed for maximum flexibility",
        "source": "https://github.com/pytorch/pytorch"
    },
    {
        "X": "What is torch.nn designed for?",
        "Y": "maximum flexibility",
        "Z": "torch.nn a neural networks library deeply integrated with autograd designed for maximum flexibility",
        "source": "https://github.com/pytorch/pytorch"
    },
    {
        "X": "What is torch.nn a neural networks library deeply integrated with?",
        "Y": "autograd",
        "Z": "torch.nn a neural networks library deeply integrated with autograd designed for maximum flexibility",
        "source": "https://github.com/pytorch/pytorch"
    },
    {
        "X": "What language does torch.multiprocessing use?",
        "Y": "Python",
        "Z": "torch.multiprocessing Python multiprocessing, but with magical memory sharing of torch Tensors across processes. Useful for data loading and Hogwild training",
        "source": "https://github.com/pytorch/pytorch"
    },
    {
        "X": "What is torch.multiprocessing useful for?",
        "Y": "data loading and Hogwild training",
        "Z": "torch.multiprocessing Python multiprocessing, but with magical memory sharing of torch Tensors across processes. Useful for data loading and Hogwild training",
        "source": "https://github.com/pytorch/pytorch"
    },
    {
        "X": "What do torch.multiprocessing haeve for torch Tensors  ?",
        "Y": "magical memory sharing",
        "Z": "torch.multiprocessing Python multiprocessing, but with magical memory sharing of torch Tensors across processes. Useful for data loading and Hogwild training",
        "source": "https://github.com/pytorch/pytorch"
    },
    {
        "X": "What magical memory sharing does torch.multiprocessing Python multiprocessing have?",
        "Y": "torch Tensors across processes. Useful for data loading and Hogwild training",
        "Z": "torch.multiprocessing Python multiprocessing, but with magical memory sharing of torch Tensors across processes. Useful for data loading and Hogwild training",
        "source": "https://github.com/pytorch/pytorch"
    },
    {
        "X": "What is DataLoader and other utility function ?",
        "Y": "torch.utils DataLoader",
        "Z": "torch.utils DataLoader and other utility functions for convenience",
        "source": "https://github.com/pytorch/pytorch"
    },
    {
        "X": "What is the purpose of torch.utils DataLoader?",
        "Y": "convenience",
        "Z": "torch.utils DataLoader and other utility functions for convenience",
        "source": "https://github.com/pytorch/pytorch"
    }
]